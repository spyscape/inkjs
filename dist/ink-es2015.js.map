{"version":3,"file":"ink-es2015.js","sources":["../src/Path.ts","../src/Debug.ts","../src/TypeAssertion.ts","../src/NullException.ts","../src/Object.ts","../src/StringBuilder.ts","../src/InkList.ts","../src/StoryException.ts","../src/TryGetResult.ts","../src/Value.ts","../src/SearchResult.ts","../src/Container.ts","../src/Glue.ts","../src/ControlCommand.ts","../src/PushPop.ts","../src/Pointer.ts","../src/Divert.ts","../src/ChoicePoint.ts","../src/VariableReference.ts","../src/VariableAssignment.ts","../src/Void.ts","../src/NativeFunctionCall.ts","../src/Tag.ts","../src/Choice.ts","../src/ListDefinition.ts","../src/ListDefinitionsOrigin.ts","../src/JsonSerialisation.ts","../src/CallStack.ts","../src/VariablesState.ts","../src/PRNG.ts","../src/StoryState.ts","../src/StopWatch.ts","../src/Story.ts"],"sourcesContent":["export class Path{\n\tpublic static parentId = '^';\n\n\tpublic _isRelative: boolean;\n\tpublic _components: Path.Component[];\n\tpublic _componentsString: string | null;\n\n\tconstructor();\n\tconstructor(componentsString: string);\n\tconstructor(head: Path.Component, tail: Path);\n\tconstructor(head: Path.Component[], relative?: boolean);\n\tconstructor(){\n\t\tthis._components = [];\n\t\tthis._componentsString = null;\n\t\tthis._isRelative = false;\n\n\t\tif (typeof arguments[0] == 'string'){\n\t\t\tlet componentsString = arguments[0] as string;\n\t\t\tthis.componentsString = componentsString;\n\t\t}\n\t\telse if (arguments[0] instanceof Path.Component && arguments[1] instanceof Path){\n\t\t\tlet head = arguments[0] as Path.Component;\n\t\t\tlet tail = arguments[1] as Path;\n\t\t\tthis._components.push(head);\n\t\t\tthis._components = this._components.concat(tail._components);\n\t\t}\n\t\telse if (arguments[0] instanceof Array){\n\t\t\tlet head = arguments[0] as Path.Component[];\n\t\t\tlet relative = !!arguments[1] as boolean;\n\t\t\tthis._components = this._components.concat(head);\n\t\t\tthis._isRelative = relative;\n\t\t}\n\t}\n\tget isRelative(){\n\t\treturn this._isRelative;\n\t}\n\tget componentCount(): number{\n\t\treturn this._components.length;\n\t}\n\tget head(): Path.Component | null{\n\t\tif (this._components.length > 0) {\n\t\t\treturn this._components[0];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tget tail(): Path{\n\t\tif (this._components.length >= 2) {\n\t\t\t// careful, the original code uses length-1 here. This is because the second argument of\n\t\t\t// List.GetRange is a number of elements to extract, wherease Array.slice uses an index\n\t\t\tlet tailComps = this._components.slice(1, this._components.length);\n\t\t\treturn new Path(tailComps);\n\t\t}\n\t\telse {\n\t\t\treturn Path.self;\n\t\t}\n\t}\n\tget length(): number{\n\t\treturn this._components.length;\n\t}\n\tget lastComponent(): Path.Component | null{\n\t\tlet lastComponentIdx = this._components.length - 1;\n\t\tif (lastComponentIdx >= 0) {\n\t\t\treturn this._components[lastComponentIdx];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tget containsNamedComponent(): boolean{\n\t\tfor (let i = 0, l = this._components.length; i < l; i++){\n\t\t\tif (!this._components[i].isIndex){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tstatic get self(): Path{\n\t\tlet path = new Path();\n\t\tpath._isRelative = true;\n\t\treturn path;\n\t}\n\n\tpublic GetComponent(index: number): Path.Component{\n\t\treturn this._components[index];\n\t}\n\tpublic PathByAppendingPath(pathToAppend: Path): Path{\n\t\tlet p = new Path();\n\n\t\tlet upwardMoves = 0;\n\t\tfor (let i = 0; i < pathToAppend._components.length; ++i) {\n\t\t\tif (pathToAppend._components[i].isParent) {\n\t\t\t\tupwardMoves++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this._components.length - upwardMoves; ++i) {\n\t\t\tp._components.push(this._components[i]);\n\t\t}\n\n\t\tfor (let i = upwardMoves; i < pathToAppend._components.length; ++i) {\n\t\t\tp._components.push(pathToAppend._components[i]);\n\t\t}\n\n\t\treturn p;\n\t}\n\tget componentsString(): string{\n\t\tif (this._componentsString == null) {\n\t\t\tthis._componentsString = this._components.join('.');\n\t\t\tif (this.isRelative) this._componentsString = '.' + this._componentsString;\n\t\t}\n\n\t\treturn this._componentsString;\n\t}\n\tset componentsString(value: string){\n\t\tthis._components.length = 0;\n\n\t\tthis._componentsString = value;\n\n\t\tif (this._componentsString == null || this._componentsString == '') return;\n\n\t\tif (this._componentsString[0] == '.') {\n\t\t\tthis._isRelative = true;\n\t\t\tthis._componentsString = this._componentsString.substring(1);\n\t\t}\n\n\t\tlet componentStrings = this._componentsString.split('.');\n\t\tfor (let str of componentStrings) {\n\t\t\t// we need to distinguish between named components that start with a number, eg \"42somewhere\", and indexed components\n\t\t\t// the normal parseInt won't do for the detection because it's too relaxed.\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n\t\t\tif (/^(\\-|\\+)?([0-9]+|Infinity)$/.test(str)){\n\t\t\t\tthis._components.push(new Path.Component(parseInt(str)));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis._components.push(new Path.Component(str));\n\t\t\t}\n\t\t}\n\t}\n\tpublic toString(): string{\n\t\treturn this.componentsString;\n\t}\n\tpublic Equals(otherPath: Path | null): boolean{\n\t\tif (otherPath == null)\n\t\t\treturn false;\n\n\t\tif (otherPath._components.length != this._components.length)\n\t\t\treturn false;\n\n\t\tif (otherPath.isRelative != this.isRelative)\n\t\t\treturn false;\n\n\t\t// the original code uses SequenceEqual here, so we need to iterate over the components manually.\n\t\tfor (let i = 0, l = otherPath._components.length; i < l; i++){\n\t\t\t// it's not quite clear whether this test should use Equals or a simple == operator,\n\t\t\t// see https://github.com/y-lohse/inkjs/issues/22\n\t\t\tif (!otherPath._components[i].Equals(this._components[i])) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic PathByAppendingComponent(c: Path.Component): Path{\n\t\tlet p = new Path();\n\t\tp._components.push.apply(p._components, this._components);\n\t\tp._components.push(c);\n\t\treturn p;\n\t}\n}\n\nexport namespace Path {\n\texport class Component{\n\t\tpublic readonly index: number;\n\t\tpublic readonly name: string | null;\n\n\t\tconstructor(indexOrName: string | number){\n\t\t\tthis.index = -1;\n\t\t\tthis.name = null;\n\t\t\tif (typeof indexOrName == 'string'){\n\t\t\t\tthis.name = indexOrName;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.index = indexOrName;\n\t\t\t}\n\t\t}\n\t\tget isIndex(): boolean{\n\t\t\treturn this.index >= 0;\n\t\t}\n\t\tget isParent(): boolean{\n\t\t\treturn this.name == Path.parentId;\n\t\t}\n\n\t\tpublic static ToParent(): Component{\n\t\t\treturn new Component(Path.parentId);\n\t\t}\n\t\tpublic toString(): string | null{\n\t\t\tif (this.isIndex) {\n\t\t\t\treturn this.index.toString();\n\t\t\t} else {\n\t\t\t\treturn this.name;\n\t\t\t}\n\t\t}\n\t\tpublic Equals(otherComp: Component): boolean{\n\t\t\tif (otherComp != null && otherComp.isIndex == this.isIndex) {\n\t\t\t\tif (this.isIndex) {\n\t\t\t\t\treturn this.index == otherComp.index;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.name == otherComp.name;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","export namespace Debug {\n\t// tslint:disable no-string-throw\n\texport function AssertType<T>(variable: any, type: new () => T, message: string): void | never {\n\t\tAssert(variable instanceof type, message);\n\t}\n\n\texport function Assert(condition: boolean, message?: string): void | never {\n\t\tif (!condition) {\n\t\t\t// tslint:disable:no-console\n\t\t\tif (typeof message !== 'undefined') {\n\t\t\t\tconsole.warn(message);\n\t\t\t}\n\n\t\t\tif (console.trace) {\n\t\t\t\tconsole.trace();\n\t\t\t}\n\n\t\t\tthrow '';\n\t\t}\n\t}\n}\n","import {INamedContent} from './INamedContent';\n\n// tslint:disable ban-types\n\nexport function asOrNull<T>(obj: any, type: (new (...arg: any[]) => T) | Function & { prototype: T }): T | null{\n\tif (obj instanceof type) {\n\t\treturn unsafeTypeAssertion(obj, type);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport function asOrThrows<T>(obj: any, type: (new (...arg: any[]) => T) | Function & { prototype: T }): T | never{\n\tif (obj instanceof type) {\n\t\treturn unsafeTypeAssertion(obj, type);\n\t} else {\n\t\tthrow new Error(`${obj} is not of type ${type}`);\n\t}\n}\n\nexport function asNumberOrThrows(obj: any){\n\tif (typeof obj === 'number') {\n\t\treturn obj as number;\n\t} else {\n\t\tthrow new Error(`${obj} is not a number`);\n\t}\n}\n\n// So here, in the reference implementation, contentObj is casted to an INamedContent\n// but here we use js-style duck typing: if it implements the same props as the interface,\n// we treat it as valid.\nexport function asINamedContentOrNull(obj: any): INamedContent | null {\n\tif (obj.hasValidName && obj.name) {\n\t\treturn obj as INamedContent;\n\t}\n\n\treturn null;\n}\n\nexport function nullIfUndefined<T>(obj: T | undefined): T | null {\n\tif (typeof obj === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn obj;\n}\n\nfunction unsafeTypeAssertion<T>(obj: any, type: (new () => T) | Function & { prototype: T }){\n\treturn obj as T;\n}\n","/**\n * In the original C# code, a SystemException would be thrown when passing\n * null to methods expected a valid instance. Javascript has no such\n * concept, but TypeScript will not allow `null` to be passed to methods\n * explicitely requiring a valid type.\n *\n * Whenever TypeScript complain about the possibility of a `null` value,\n * check the offending value and it it's null, throw this exception using\n * `throwNullException(name: string)`.\n */\nexport class NullException extends Error{}\n\n/**\n * Throw a NullException.\n * @param name a short description of the offending value (often its name within the code).\n */\nexport function throwNullException(name: string): never {\n\tthrow new NullException(`${name} is null or undefined`);\n}\n","import {Path} from './Path';\nimport {Container} from './Container';\nimport {Debug} from './Debug';\nimport {asOrNull, asINamedContentOrNull} from './TypeAssertion';\nimport { throwNullException } from './NullException';\nimport { SearchResult } from './SearchResult';\nimport { DebugMetadata } from './DebugMetadata';\n\nexport class InkObject{\n\n\tpublic parent: InkObject | null = null;\n\n\tget debugMetadata(): DebugMetadata | null {\n\t\tif (this._debugMetadata === null) {\n\t\t\tif (this.parent) {\n\t\t\t\treturn this.parent.debugMetadata;\n\t\t\t}\n\t\t}\n\n\t\treturn this._debugMetadata;\n\t}\n\n\tset debugMetadata(value) {\n\t\tthis._debugMetadata = value;\n\t}\n\n\tget ownDebugMetadata() {\n\t\treturn this._debugMetadata;\n\t}\n\n\tprivate _debugMetadata: DebugMetadata | null = null;\n\n\tpublic DebugLineNumberOfPath(path: Path) {\n\t\tif (path === null)\n\t\t\treturn null;\n\n\t\t// Try to get a line number from debug metadata\n\t\tlet root = this.rootContentContainer;\n\t\tif (root) {\n\t\t\tlet targetContent = root.ContentAtPath(path).obj;\n\t\t\tif (targetContent) {\n\t\t\t\tlet dm = targetContent.debugMetadata;\n\t\t\t\tif (dm !== null) {\n\t\t\t\t\treturn dm.startLineNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget path(){\n\t\tif (this._path == null) {\n\n\t\t\tif (this.parent == null) {\n\t\t\t\tthis._path = new Path();\n\t\t\t} else {\n\t\t\t\tlet comps: Path.Component[] = [];\n\n\t\t\t\tlet child: InkObject = this;\n\t\t\t\tlet container = asOrNull(child.parent, Container);\n\n\t\t\t\twhile (container !== null) {\n\n\t\t\t\t\tlet namedChild = asINamedContentOrNull(child);\n\t\t\t\t\tif (namedChild != null && namedChild.hasValidName) {\n\t\t\t\t\t\tcomps.unshift(new Path.Component(namedChild.name));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomps.unshift(new Path.Component(container.content.indexOf(child)));\n\t\t\t\t\t}\n\n\t\t\t\t\tchild = container;\n\t\t\t\t\tcontainer = asOrNull(container.parent, Container);\n\t\t\t\t}\n\n\t\t\t\tthis._path = new Path(comps);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._path;\n\t}\n\tprivate _path: Path | null = null;\n\n\tpublic ResolvePath(path: Path | null): SearchResult{\n\t\tif (path === null) return throwNullException('path');\n\t\tif (path.isRelative) {\n\t\t\tlet nearestContainer = asOrNull(this, Container);\n\n\t\t\tif (nearestContainer === null) {\n\t\t\t\tDebug.Assert(this.parent !== null, \"Can't resolve relative path because we don't have a parent\");\n\t\t\t\tnearestContainer = asOrNull(this.parent, Container);\n\t\t\t\tDebug.Assert(nearestContainer !== null, 'Expected parent to be a container');\n\t\t\t\tDebug.Assert(path.GetComponent(0).isParent);\n\t\t\t\tpath = path.tail;\n\t\t\t}\n\n\t\t\tif (nearestContainer === null) { return throwNullException('nearestContainer'); }\n\t\t\treturn nearestContainer.ContentAtPath(path);\n\t\t} else {\n\t\t\tlet contentContainer = this.rootContentContainer;\n\t\t\tif (contentContainer === null) { return throwNullException('contentContainer'); }\n\t\t\treturn contentContainer.ContentAtPath(path);\n\t\t}\n\t}\n\n\tpublic ConvertPathToRelative(globalPath: Path){\n\t\tlet ownPath = this.path;\n\n\t\tlet minPathLength = Math.min(globalPath.length, ownPath.length);\n\t\tlet lastSharedPathCompIndex = -1;\n\n\t\tfor (let i = 0; i < minPathLength; ++i) {\n\t\t\tlet ownComp = ownPath.GetComponent(i);\n\t\t\tlet otherComp = globalPath.GetComponent(i);\n\n\t\t\tif (ownComp.Equals(otherComp)) {\n\t\t\t\tlastSharedPathCompIndex = i;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// No shared path components, so just use global path\n\t\tif (lastSharedPathCompIndex == -1)\n\t\t\treturn globalPath;\n\n\t\tlet numUpwardsMoves = (ownPath.componentCount-1) - lastSharedPathCompIndex;\n\n\t\tlet newPathComps: Path.Component[] = [];\n\n\t\tfor(let up = 0; up < numUpwardsMoves; ++up)\n\t\t\tnewPathComps.push(Path.Component.ToParent());\n\n\t\tfor (let down = lastSharedPathCompIndex + 1; down < globalPath.componentCount; ++down)\n\t\t\tnewPathComps.push(globalPath.GetComponent(down));\n\n\t\tlet relativePath = new Path(newPathComps, true);\n\t\treturn relativePath;\n\t}\n\n\tpublic CompactPathString(otherPath: Path){\n\t\tlet globalPathStr = null;\n\t\tlet relativePathStr = null;\n\n\t\tif (otherPath.isRelative) {\n\t\t\trelativePathStr = otherPath.componentsString;\n\t\t\tglobalPathStr = this.path.PathByAppendingPath(otherPath).componentsString;\n\t\t}\n\t\telse {\n\t\t\tlet relativePath = this.ConvertPathToRelative(otherPath);\n\t\t\trelativePathStr = relativePath.componentsString;\n\t\t\tglobalPathStr = otherPath.componentsString;\n\t\t}\n\n\t\tif (relativePathStr.length < globalPathStr.length)\n\t\t\treturn relativePathStr;\n\t\telse\n\t\t\treturn globalPathStr;\n\t}\n\n\tget rootContentContainer(){\n\t\tlet ancestor: InkObject = this;\n\t\twhile (ancestor.parent) {\n\t\t\tancestor = ancestor.parent;\n\t\t}\n\t\treturn asOrNull(ancestor, Container);\n\t}\n\n\tpublic Copy(): InkObject {\n\t\tthrow Error(\"Not Implemented: Doesn't support copying\");\n\t}\n\t// SetChild works slightly diferently in the js implementation.\n\t// Since we can't pass an objets property by reference, we instead pass\n\t// the object and the property string.\n\t// TODO: This method can probably be rewritten with type-safety in mind.\n\tpublic SetChild(obj: any, prop: any, value: any){\n\t\tif (obj[prop])\n\t\t\tobj[prop] = null;\n\n\t\tobj[prop] = value;\n\n\t\tif( obj[prop] )\n\t\t\tobj[prop].parent = this;\n\t}\n}\n","export class StringBuilder{\n\n\tprivate string: string;\n\n\tconstructor(str?: string){\n\t\tstr = (typeof str !== 'undefined') ? str.toString() : '';\n\t\tthis.string = str;\n\t}\n\tget Length(): number{\n\t\treturn this.string.length;\n\t}\n\tpublic Append(str: string | null){\n\t\tif (str !== null) {\n\t\t\tthis.string += str;\n\t\t}\n\t}\n\tpublic AppendLine(str?: string){\n\t\tif (typeof str !== 'undefined') this.Append(str);\n\t\tthis.string += '\\n';\n\t}\n\tpublic AppendFormat(format: string, ...args: any[]){\n\t\t// taken from http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\n\t\tthis.string += format.replace(/{(\\d+)}/g, (match: string, num: number) => {\n\t\t\treturn typeof args[num] != 'undefined' ? args[num] : match;\n\t\t});\n\t}\n\tpublic toString(): string{\n\t\treturn this.string;\n\t}\n}\n","import {throwNullException} from './NullException';\nimport {StringBuilder} from './StringBuilder';\nimport {ListDefinition} from './ListDefinition';\nimport {Story} from './Story';\n\nexport class InkListItem implements IInkListItem{ // InkListItem is a struct\n\n\tpublic readonly originName: string | null = null;\n\tpublic readonly itemName: string | null = null;\n\n\tconstructor(originName: string | null, itemName: string | null)\n\tconstructor(fullName: string | null)\n\tconstructor(){\n\t\tif (typeof arguments[1] !== 'undefined'){\n\t\t\tlet originName = arguments[0] as string | null;\n\t\t\tlet itemName = arguments[1] as string | null;\n\n\t\t\tthis.originName = originName;\n\t\t\tthis.itemName = itemName;\n\t\t}\n\t\telse if (arguments[0]){\n\t\t\tlet fullName = arguments[0] as string;\n\n\t\t\tlet nameParts = fullName.toString().split('.');\n\t\t\tthis.originName = nameParts[0];\n\t\t\tthis.itemName = nameParts[1];\n\t\t}\n\t}\n\tpublic static get Null(){\n\t\treturn new InkListItem(null, null);\n\t}\n\tpublic get isNull(){\n\t\treturn this.originName == null && this.itemName == null;\n\t}\n\tget fullName(){\n\t\treturn ((this.originName !== null) ? this.originName : '?') + '.' + this.itemName;\n\t}\n\tpublic toString(): string {\n\t\treturn this.fullName;\n\t}\n\tpublic Equals(obj: InkListItem){\n\t\tif (obj instanceof InkListItem) {\n\t\t\tlet otherItem = obj;\n\t\t\treturn otherItem.itemName == this.itemName\n\t\t\t\t&& otherItem.originName == this.originName;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// These methods did not exist in the original C# code. Their purpose is to\n\t// make `InkListItem` mimics the value-type semantics of the original\n\t// struct. Please refer to the end of this file, for a more in-depth\n\t// explanation.\n\n\t/**\n\t * Returns a shallow clone of the current instance.\n\t */\n\tpublic copy(){\n\t\treturn new InkListItem(this.originName, this.itemName);\n\t}\n\t/**\n\t * Returns a `SerializedInkListItem` representing the current\n\t * instance. The result is intended to be used as a key inside a Map.\n\t */\n\tpublic serialized(): SerializedInkListItem{\n\t\t// We are simply using a JSON representation as a value-typed key.\n\t\treturn JSON.stringify({originName: this.originName, itemName: this.itemName});\n\t}\n\n\t/**\n\t * Reconstructs a `InkListItem` from the given SerializedInkListItem.\n\t */\n\tpublic static fromSerializedKey(key: SerializedInkListItem): InkListItem {\n\t\tlet obj = JSON.parse(key);\n\t\tif (!InkListItem.isLikeInkListItem(obj)) return InkListItem.Null;\n\n\t\tlet inkListItem = obj as IInkListItem;\n\n\t\treturn new InkListItem(inkListItem.originName, inkListItem.itemName);\n\t}\n\n\t/**\n\t * Determines whether the given item is sufficiently `InkListItem`-like\n\t * to be used as a template when reconstructing the InkListItem.\n\t */\n\tprivate static isLikeInkListItem(item: any){\n\t\tif (typeof item !== 'object') return false;\n\t\tif (!item.hasOwnProperty('originName') || !item.hasOwnProperty('itemName')) return false;\n\t\tif (typeof item.originName !== 'string' && typeof item.originName !== null) return false;\n\t\tif (typeof item.itemName !== 'string' && typeof item.itemName !== null) return false;\n\n\t\treturn true;\n\t}\n}\n\nexport class InkList extends Map<SerializedInkListItem, number> {\n\tpublic origins: ListDefinition[] | null = null;\n\tpublic _originNames: string[] | null = [];\n\n\tconstructor()\n\tconstructor(otherList: InkList)\n\tconstructor(singleOriginListName: string, originStory: Story)\n\tconstructor(singleElement: KeyValuePair<InkListItem, number>)\n\tconstructor(){\n\t\t// Trying to be smart here, this emulates the constructor inheritance found\n\t\t// in the original code, but only if otherList is an InkList. IIFE FTW.\n\t\tsuper((() => {\n\t\t\tif (arguments[0] instanceof InkList){\n\t\t\t\treturn arguments[0];\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})());\n\n\t\tif (arguments[0] instanceof InkList){\n\t\t\tlet otherList = arguments[0] as InkList;\n\n\t\t\tif (otherList._originNames) {\n\t\t\t\tthis._originNames = otherList._originNames.slice();\n\t\t\t}\n\t\t}\n\t\telse if (typeof arguments[0] === 'string'){\n\t\t\tlet singleOriginListName = arguments[0] as string;\n\t\t\tlet originStory = arguments[1] /* as Story */;\n\t\t\tthis.SetInitialOriginName(singleOriginListName);\n\n\t\t\tlet def = originStory.listDefinitions.TryListGetDefinition(singleOriginListName, null);\n\t\t\tif (def.exists){\n\t\t\t\tthis.origins = [def.result];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error('InkList origin could not be found in story when constructing new list: ' + singleOriginListName);\n\t\t\t}\n\t\t}\n\t\telse if (typeof arguments[0] === 'object' && arguments[0].hasOwnProperty('Key') && arguments[0].hasOwnProperty('Value')){\n\t\t\tlet singleElement = arguments[0] as KeyValuePair<InkListItem, number>;\n\t\t\tthis.Add(singleElement.Key, singleElement.Value);\n\t\t}\n\t}\n\n\tpublic AddItem(itemOrItemName: InkListItem | string | null){\n\t\tif (itemOrItemName instanceof InkListItem){\n\t\t\tlet item = itemOrItemName;\n\n\t\t\tif (item.originName == null) {\n\t\t\t\tthis.AddItem(item.itemName);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.origins === null) return throwNullException('this.origins');\n\n\t\t\tfor (let origin of this.origins) {\n\t\t\t\tif (origin.name == item.originName) {\n\t\t\t\t\tlet intVal = origin.TryGetValueForItem(item, 0);\n\t\t\t\t\tif (intVal.exists) {\n\t\t\t\t\t\tthis.Add(item, intVal.result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Could not add the item ' + item + \" to this list because it doesn't exist in the original list definition in ink.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new Error(\"Failed to add item to list because the item was from a new list definition that wasn't previously known to this list. Only items from previously known lists can be used, so that the int value can be found.\");\n\t\t}\n\t\telse {\n\t\t\tlet itemName = itemOrItemName as string | null;\n\n\t\t\tlet foundListDef: ListDefinition | null = null;\n\n\t\t\tif (this.origins === null) return throwNullException('this.origins');\n\n\t\t\tfor (let origin of this.origins) {\n\t\t\t\tif (itemName === null) return throwNullException('itemName');\n\n\t\t\t\tif (origin.ContainsItemWithName(itemName)) {\n\t\t\t\t\t\tif (foundListDef != null) {\n\t\t\t\t\t\t\tthrow new Error('Could not add the item ' + itemName + ' to this list because it could come from either ' + origin.name + ' or ' + foundListDef.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfoundListDef = origin;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (foundListDef == null)\n\t\t\t\tthrow new Error('Could not add the item ' + itemName + \" to this list because it isn't known to any list definitions previously associated with this list.\");\n\n\t\t\tlet item = new InkListItem(foundListDef.name, itemName);\n\t\t\tlet itemVal = foundListDef.ValueForItem(item);\n\t\t\tthis.Add(item, itemVal);\n\t\t}\n\t}\n\tpublic ContainsItemNamed(itemName: string | null){\n\t\tfor (let [key, value] of this) {\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\tif (item.itemName == itemName) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic ContainsKey(key: InkListItem){\n\t\treturn this.has(key.serialized());\n\t}\n\tpublic Add(key: InkListItem, value: number){\n\t\tlet serializedKey = key.serialized();\n\t\tif (this.has(serializedKey)) {\n\t\t\t// Throw an exception to match the C# behavior.\n\t\t\tthrow new Error(`The Map already contains an entry for ${key}`);\n\t\t}\n\t\tthis.set(serializedKey, value);\n\t}\n\tpublic Remove(key: InkListItem){\n\t\treturn this.delete(key.serialized());\n\t}\n\tget Count(){\n\t\treturn this.size;\n\t}\n\tget originOfMaxItem(): ListDefinition | null{\n\t\tif (this.origins == null) return null;\n\n\t\tlet maxOriginName = this.maxItem.Key.originName;\n\t\tlet result = null;\n\t\tthis.origins.every((origin)=>{\n\t\t\tif (origin.name == maxOriginName){\n\t\t\t\tresult = origin;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse return true;\n\t\t});\n\n\t\treturn result;\n\t}\n\tget originNames(): string[]{\n\t\tif (this.Count > 0) {\n\t\t\tif (this._originNames == null && this.Count > 0)\n\t\t\t\tthis._originNames = [];\n\t\t\telse {\n\t\t\t\tif (!this._originNames) this._originNames = [];\n\t\t\t\tthis._originNames.length = 0;\n\t\t\t}\n\n\t\t\tfor (let [key, value] of this) {\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\t\tif (item.originName === null) return throwNullException('item.originName');\n\t\t\t\tthis._originNames.push(item.originName);\n\t\t\t}\n\t\t}\n\n\t\treturn this._originNames as string[];\n\t}\n\tpublic SetInitialOriginName(initialOriginName: string){\n\t\tthis._originNames = [initialOriginName];\n\t}\n\tpublic SetInitialOriginNames(initialOriginNames: string[]){\n\t\tif (initialOriginNames == null)\n\t\t\tthis._originNames = null;\n\t\telse\n\t\t\tthis._originNames = initialOriginNames.slice();// store a copy\n\t}\n\tget maxItem(){\n\t\tlet max: KeyValuePair<InkListItem, number> = {\n\t\t\tKey: InkListItem.Null,\n\t\t\tValue: 0,\n\t\t};\n\t\tfor (let [key, value] of this) {\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\tif (max.Key.isNull || value > max.Value)\n\t\t\t\tmax = { Key: item, Value: value };\n\t\t}\n\n\t\treturn max;\n\t}\n\tget minItem(){\n\t\tlet min: KeyValuePair<InkListItem, number> = {\n\t\t\tKey: InkListItem.Null,\n\t\t\tValue: 0,\n\t\t};\n\t\tfor (let [key, value] of this) {\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\tif (min.Key.isNull || value < min.Value) {\n\t\t\t\tmin = { Key: item, Value: value };\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\tget inverse(){\n\t\tlet list = new InkList();\n\t\tif (this.origins != null) {\n\t\t\tfor (let origin of this.origins) {\n\t\t\t\tfor (let [key, value] of origin.items) {\n\t\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\t\t\tif (!this.ContainsKey(item))\n\t\t\t\t\t\tlist.Add(item, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tget all(){\n\t\tlet list = new InkList();\n\t\tif (this.origins != null) {\n\t\t\tfor(let origin of this.origins) {\n\t\t\t\tfor (let [key, value] of origin.items) {\n\t\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\t\t\tlist.set(item.serialized(), value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tpublic Union(otherList: InkList){\n\t\tlet union = new InkList(this);\n\t\tfor(let [key, value] of otherList) {\n\t\t\tunion.set(key, value);\n\t\t}\n\t\treturn union;\n\t}\n\tpublic Intersect(otherList: InkList){\n\t\tlet intersection = new InkList();\n\t\tfor(let [key, value] of this) {\n\t\t\tif (otherList.has(key))\n\t\t\t\tintersection.set(key, value);\n\t\t}\n\n\t\treturn intersection;\n\t}\n\tpublic Without(listToRemove: InkList){\n\t\tlet result = new InkList(this);\n\t\tfor(let [key, value] of listToRemove) {\n\t\t\tresult.delete(key);\n\t\t}\n\n\t\treturn result;\n\t}\n\tpublic Contains(otherList: InkList){\n\t\tfor(let [key, value] of otherList) {\n\t\t\tif (!this.has(key)) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic GreaterThan(otherList: InkList){\n\t\tif (this.Count == 0) return false;\n\t\tif (otherList.Count == 0) return true;\n\n\t\treturn this.minItem.Value > otherList.maxItem.Value;\n\t}\n\tpublic GreaterThanOrEquals(otherList: InkList){\n\t\tif (this.Count == 0) return false;\n\t\tif (otherList.Count == 0) return true;\n\n\t\treturn this.minItem.Value >= otherList.minItem.Value\n\t\t\t&& this.maxItem.Value >= otherList.maxItem.Value;\n\t}\n\tpublic LessThan(otherList: InkList){\n\t\tif (otherList.Count == 0) return false;\n\t\tif (this.Count == 0) return true;\n\n\t\treturn this.maxItem.Value < otherList.minItem.Value;\n\t}\n\tpublic LessThanOrEquals(otherList: InkList){\n\t\tif (otherList.Count == 0) return false;\n\t\tif (this.Count == 0) return true;\n\n\t\treturn this.maxItem.Value <= otherList.maxItem.Value\n\t\t\t&& this.minItem.Value <= otherList.minItem.Value;\n\t}\n\tpublic MaxAsList(){\n\t\tif (this.Count > 0)\n\t\t\treturn new InkList(this.maxItem);\n\t\telse\n\t\t\treturn new InkList();\n\t}\n\tpublic MinAsList(){\n\t\tif (this.Count > 0)\n\t\t\treturn new InkList(this.minItem);\n\t\telse\n\t\t\treturn new InkList();\n\t}\n\tpublic ListWithSubRange(minBound: any, maxBound: any)\n\t{\n\t\tif (this.Count == 0) return new InkList();\n\n\t\tlet ordered = this.orderedItems;\n\n\t\tlet minValue = 0;\n\t\tlet maxValue = Number.MAX_SAFE_INTEGER;\n\n\t\tif (Number.isInteger(minBound)) {\n\t\t\tminValue = minBound;\n\t\t} else {\n\t\t\tif (minBound instanceof InkList && minBound.Count > 0 )\n\t\t\t\tminValue = minBound.minItem.Value;\n\t\t}\n\n\t\tif (Number.isInteger(maxBound)) {\n\t\t\tmaxValue = maxBound;\n\t\t} else {\n\t\t\tif (minBound instanceof InkList && (minBound).Count > 0)\n\t\t\t\tmaxValue = maxBound.maxItem.Value;\n\t\t}\n\n\t\tlet subList = new InkList();\n\t\tsubList.SetInitialOriginNames(this.originNames);\n\t\tfor (let item of ordered) {\n\t\t\tif (item.Value >= minValue && item.Value <= maxValue ) {\n\t\t\t\tsubList.Add(item.Key, item.Value);\n\t\t\t}\n\t\t}\n\n\t\treturn subList;\n\t}\n\tpublic Equals(otherInkList: InkList){\n\t\tif (otherInkList instanceof InkList === false) return false;\n\t\tif (otherInkList.Count != this.Count) return false;\n\n\t\tfor(let [key, value] of this) {\n\t\t\tif (!otherInkList.has(key))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\t// GetHashCode not implemented\n\tget orderedItems() {\n\t\t// List<KeyValuePair<InkListItem, int>>\n\t\tlet ordered = new Array<KeyValuePair<InkListItem, number>>();\n\n\t\tfor(let [key, value] of this) {\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\tordered.push({ Key: item, Value: value });\n\t\t}\n\n\t\tordered.sort((x, y) => {\n\t\t\tif (x.Key.originName === null) { return throwNullException('x.Key.originName'); }\n\t\t\tif (y.Key.originName === null) { return throwNullException('y.Key.originName'); }\n\n\t\t\tif (x.Value == y.Value) {\n\t\t\t\treturn x.Key.originName.localeCompare(y.Key.originName);\n\t\t\t} else {\n\t\t\t\t// TODO: refactor this bit into a numberCompareTo method?\n\t\t\t\tif (x.Value < y.Value)\n\t\t\t\t\treturn -1;\n\t\t\t\treturn x.Value > y.Value ? 1 : 0;\n\t\t\t}\n\t\t});\n\n\t\treturn ordered;\n\t}\n\tpublic toString(){\n\t\tlet ordered = this.orderedItems;\n\n\t\tlet sb = new StringBuilder();\n\t\tfor (let i = 0; i < ordered.length; i++) {\n\t\t\tif (i > 0)\n\t\t\t\tsb.Append(', ');\n\n\t\t\tlet item = ordered[i].Key;\n\t\t\tif (item.itemName === null) return throwNullException('item.itemName');\n\t\t\tsb.Append(item.itemName);\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n\t// casting a InkList to a Number, for somereason, actually gives a number.\n\t// This messes up the type detection when creating a Value from a InkList.\n\t// Returning NaN here prevents that.\n\tpublic valueOf(){\n\t\treturn NaN;\n\t}\n}\n\n/**\n * In the original C# code, `InkListItem` was defined as value type, meaning\n * that two `InkListItem` would be considered equal as long as they held the\n * same values. This doesn't hold true in Javascript, as `InkListItem` is a\n * reference type (Javascript doesn't allow the creation of custom value types).\n *\n * The key equality of Map objects is based on the \"SameValueZero\" algorithm;\n * since `InkListItem` is a value type, two keys will only be considered\n * equal if they are, in fact, the same object. As we are trying to emulate\n * the original behavior as close as possible, this will lead to unforeseen\n * side effects.\n *\n * In order to have a key equality based on value semantics, we'll convert\n * `InkListItem` to a valid string representation and use this representation\n * as a key (strings are value types in Javascript). Rather than using the\n * type `string` directly, we'll alias it to `SerializedInkListItem` and use\n * this type as the key for our Map-based `InkList`.\n *\n * Reducing `InkListItem` to a JSON representation would not be bulletproof\n * in the general case, but for our needs it works well. The major downside of\n * this method is that we will have to to reconstruct the original `InkListItem`\n * every time we'll need to access its properties.\n */\nexport type SerializedInkListItem = string;\n\n/**\n * An interface inherited by `InkListItem`, defining exposed\n * properties. It's mainly used when deserializing a `InkListItem` from its\n * key (`SerializedInkListItem`)\n */\ninterface IInkListItem{\n\treadonly originName: string | null;\n\treadonly itemName: string | null;\n}\nexport interface KeyValuePair<K, V> {\n\tKey: K;\n\tValue: V;\n}\n","export class StoryException extends Error{\n\n\tpublic useEndLineNumber: boolean;\n\tpublic message: string;\n\tpublic name: string;\n\n\tconstructor(message: string){\n\t\tsuper(message);\n\t\tthis.useEndLineNumber = false;\n\t\tthis.message = message;\n\t\tthis.name = 'StoryException';\n\t}\n}\n","// tslint:disable:jsdoc-format\n/**\n * This interface normalize the `TryGet` behavior found in the original\n * C# project. Any `TryGet` method will return a object conforming to this\n * interface.\n *\n * The original function returns a boolean and has a second parameter called\n * item that is an `out`. Both are needed and we can't just return the item\n * because it'll always be truthy. Instead, we return an object containing\n * whether the result exists (`exists`) and the result itself (`result`).\n *\n * For instance a `TryGet` prototype would look like this:\n```\nTryGetItemWithValue(val: number, item: InkListItem): TryGetResult<InkListItem>{\n```\n *\n * On the other hand, dealing with the result can be done in the following way:\n```\nvar item = item.TryGetItemWithValue(intVal, InkListItem.Null);\nif (item.exists) {\n\tconsole.log(item.result)\n}\n```\n *\n */\nexport interface TryGetResult<T> {\n\tresult: T;\n\texists: boolean;\n}\n\nexport function tryGetValueFromMap<K, V>(map: Map<K, V> | null, key: K, /* out */ value: V): TryGetResult<V> {\n\tif (map === null) {\n\t\treturn { result: value, exists: false };\n\t}\n\n\tlet val = map.get(key);\n\n\tif (val) {\n\t\treturn { result: val, exists: true };\n\t} else {\n\t\treturn { result: value, exists: false };\n\t}\n}\n\nexport function tryParseInt(value: any, /* out */ defaultValue: number = 0): TryGetResult<number> {\n\tlet val = parseInt(value);\n\n\tif (!Number.isNaN(val)) {\n\t\treturn { result: val, exists: true };\n\t} else {\n\t\treturn { result: defaultValue, exists: false };\n\t}\n}\n\nexport function tryParseFloat(value: any, /* out */ defaultValue: number = 0): TryGetResult<number> {\n\tlet val = parseFloat(value);\n\n\tif (!Number.isNaN(val)) {\n\t\treturn { result: val, exists: true };\n\t} else {\n\t\treturn { result: defaultValue, exists: false };\n\t}\n}\n","import {InkObject} from './Object';\nimport {Path} from './Path';\nimport {InkList, InkListItem} from './InkList';\nimport {StoryException} from './StoryException';\nimport {asOrNull, asOrThrows} from './TypeAssertion';\nimport {tryParseInt, tryParseFloat} from './TryGetResult';\nimport {throwNullException} from './NullException';\n\nexport abstract class AbstractValue extends InkObject{\n\tpublic abstract get valueType(): ValueType;\n\tpublic abstract get isTruthy(): boolean;\n\tpublic abstract get valueObject(): any;\n\n\tpublic abstract Cast(newType: ValueType): Value<any>;\n\n\tpublic static Create(val: any): Value<any> | null{\n\t\t// Implicitly convert bools into ints\n\t\tif (typeof val === 'boolean'){\n\t\t\tlet b = !!val;\n\t\t\tval = (b) ? 1 : 0;\n\t\t}\n\n\t\t// https://github.com/y-lohse/inkjs/issues/425\n\t\t// Changed condition sequence, because Number('') is\n\t\t// parsed to 0, which made setting string to empty\n\t\t// impossible\n\t\tif (typeof val === 'string') {\n\t\t\treturn new StringValue(String(val));\n\t\t} else if (Number.isInteger(Number(val))) {\n\t\t\treturn new IntValue(Number(val));\n\t\t} else if (!isNaN(val)) {\n\t\t\treturn new FloatValue(Number(val));\n\t\t} else if (val instanceof Path) {\n\t\t\treturn new DivertTargetValue(asOrThrows(val, Path));\n\t\t} else if (val instanceof InkList) {\n\t\t\treturn new ListValue(asOrThrows(val, InkList));\n\t\t}\n\n\t\treturn null;\n\t}\n\tpublic Copy() {\n\t\treturn asOrThrows(AbstractValue.Create(this), InkObject);\n\t}\n\tpublic BadCastException(targetType: ValueType) {\n\t\treturn new StoryException(\"Can't cast \"+this.valueObject+' from ' + this.valueType+' to '+targetType);\n\t}\n}\n\nexport abstract class Value<T extends { toString: () => string; }> extends AbstractValue{\n\tpublic value: T | null;\n\n\tconstructor(val: T | null){\n\t\tsuper();\n\t\tthis.value = val;\n\t}\n\tpublic get valueObject(){\n\t\treturn this.value;\n\t}\n\tpublic toString(){\n\t\tif (this.value === null) return throwNullException('Value.value');\n\t\treturn this.value.toString();\n\t}\n}\n\nexport class IntValue extends Value<number>{\n\tconstructor(val: number){\n\t\tsuper(val || 0);\n\t}\n\tpublic get isTruthy(){\n\t\treturn this.value != 0;\n\t}\n\tpublic get valueType() {\n\t\treturn ValueType.Int;\n\t}\n\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (this.value === null) return throwNullException('Value.value');\n\n\t\tif (newType == this.valueType) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (newType == ValueType.Float) {\n\t\t\treturn new FloatValue(this.value);\n\t\t}\n\n\t\tif (newType == ValueType.String) {\n\t\t\treturn new StringValue('' + this.value);\n\t\t}\n\n\t\tthrow this.BadCastException(newType);\n\t}\n}\n\nexport class FloatValue extends Value<number>{\n\tconstructor(val: number){\n\t\tsuper(val || 0.0);\n\t}\n\tpublic get isTruthy(){\n\t\treturn this.value != 0.0;\n\t}\n\tpublic get valueType(){\n\t\treturn ValueType.Float;\n\t}\n\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (this.value === null) return throwNullException('Value.value');\n\n\t\tif (newType == this.valueType) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (newType == ValueType.Int) {\n\t\t\treturn new IntValue(this.value);\n\t\t}\n\n\t\tif (newType == ValueType.String) {\n\t\t\treturn new StringValue('' + this.value);\n\t\t}\n\n\t\tthrow this.BadCastException(newType);\n\t}\n}\n\nexport class StringValue extends Value<string>{\n\tpublic _isNewline: boolean;\n\tpublic _isInlineWhitespace: boolean;\n\n\tconstructor(val: string){\n\t\tsuper(val || '');\n\n\t\tthis._isNewline = (this.value == '\\n');\n\t\tthis._isInlineWhitespace = true;\n\n\t\tif (this.value === null) return throwNullException('Value.value');\n\n\t\tif (this.value.length > 0) {\n\t\t\tthis.value.split('').every((c) => {\n\t\t\t\tif (c != ' ' && c != '\\t'){\n\t\t\t\t\tthis._isInlineWhitespace = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\tpublic get valueType(){\n\t\treturn ValueType.String;\n\t}\n\tpublic get isTruthy(){\n\t\tif (this.value === null) return throwNullException('Value.value');\n\t\treturn this.value.length > 0;\n\t}\n\tpublic get isNewline(){\n\t\treturn this._isNewline;\n\t}\n\tpublic get isInlineWhitespace(){\n\t\treturn this._isInlineWhitespace;\n\t}\n\tpublic get isNonWhitespace(){\n\t\treturn !this.isNewline && !this.isInlineWhitespace;\n\t}\n\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (newType == this.valueType) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (newType == ValueType.Int) {\n\n\t\t\tlet parsedInt = tryParseInt(this.value);\n\t\t\tif (parsedInt.exists) {\n\t\t\t\treturn new IntValue(parsedInt.result);\n\t\t\t} else {\n\t\t\t\tthrow this.BadCastException(newType);\n\t\t\t}\n\t\t}\n\n\t\tif (newType == ValueType.Float) {\n\t\t\tlet parsedFloat = tryParseFloat(this.value);\n\t\t\tif (parsedFloat.exists) {\n\t\t\t\treturn new FloatValue(parsedFloat.result);\n\t\t\t} else {\n\t\t\t\tthrow this.BadCastException(newType);\n\t\t\t}\n\t\t}\n\n\t\tthrow this.BadCastException(newType);\n\t}\n}\n\nexport class DivertTargetValue extends Value<Path>{\n\tconstructor(targetPath: Path){\n\t\tsuper(targetPath);\n\t}\n\tpublic get valueType() {\n\t\treturn ValueType.DivertTarget;\n\t}\n\tpublic get targetPath(){\n\t\tif (this.value === null) return throwNullException('Value.value');\n\t\treturn this.value;\n\t}\n\tpublic set targetPath(value: Path){\n\t\tthis.value = value;\n\t}\n\tpublic get isTruthy(): never{\n\t\tthrow new Error('Shouldn\\'t be checking the truthiness of a divert target');\n\t}\n\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (newType == this.valueType)\n\t\t\treturn this;\n\n\t\tthrow this.BadCastException(newType);\n\t}\n\tpublic toString(){\n\t\treturn 'DivertTargetValue(' + this.targetPath + ')';\n\t}\n}\n\nexport class VariablePointerValue extends Value<string>{\n\tpublic _contextIndex: number;\n\n\tconstructor(variableName: string, contextIndex: number = -1){\n\t\tsuper(variableName);\n\n\t\tthis._contextIndex = contextIndex;\n\t}\n\n\tpublic get contextIndex(){\n\t\treturn this._contextIndex;\n\t}\n\tpublic set contextIndex(value: number) {\n\t\tthis._contextIndex = value;\n\t}\n\tpublic get variableName(){\n\t\tif (this.value === null) return throwNullException('Value.value');\n\t\treturn this.value;\n\t}\n\tpublic set variableName(value: string){\n\t\tthis.value = value;\n\t}\n\tpublic get valueType() {\n\t\treturn ValueType.VariablePointer;\n\t}\n\n\tpublic get isTruthy(): never{\n\t\tthrow new Error(\"Shouldn't be checking the truthiness of a variable pointer\");\n\t}\n\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (newType == this.valueType)\n\t\t\treturn this;\n\n\t\tthrow this.BadCastException(newType);\n\t}\n\tpublic toString(){\n\t\treturn 'VariablePointerValue(' + this.variableName + ')';\n\t}\n\tpublic Copy(){\n\t\treturn new VariablePointerValue(this.variableName, this.contextIndex);\n\t}\n}\n\nexport class ListValue extends Value<InkList>{\n\tpublic get isTruthy(){\n\t\tif (this.value === null) { return throwNullException('this.value'); }\n\t\treturn this.value.Count > 0;\n\t}\n\tpublic get valueType() {\n\t\treturn ValueType.List;\n\t}\n\tpublic Cast(newType: ValueType): Value<any>{\n\t\tif (this.value === null) return throwNullException('Value.value');\n\n\t\tif (newType == ValueType.Int) {\n\t\t\tlet max = this.value.maxItem;\n\t\t\tif( max.Key.isNull )\n\t\t\treturn new IntValue(0);\n\t\t\telse\n\t\t\treturn new IntValue(max.Value);\n\t\t}\n\t\telse if (newType == ValueType.Float) {\n\t\t\tlet max = this.value.maxItem;\n\t\t\tif (max.Key.isNull)\n\t\t\treturn new FloatValue(0.0);\n\t\t\telse\n\t\t\treturn new FloatValue(max.Value);\n\t\t}\n\t\telse if (newType == ValueType.String) {\n\t\t\tlet max = this.value.maxItem;\n\t\t\tif (max.Key.isNull)\n\t\t\treturn new StringValue('');\n\t\t\telse {\n\t\t\t\treturn new StringValue(max.Key.toString());\n\t\t\t}\n\t\t}\n\n\t\tif (newType == this.valueType) return this;\n\n\t\tthrow this.BadCastException(newType);\n\t}\n\tconstructor();\n\tconstructor(list: InkList);\n\tconstructor(listOrSingleItem: InkListItem, singleValue: number)\n\tconstructor(listOrSingleItem?: InkListItem | InkList, singleValue?: number){\n\t\tsuper(null);\n\n\t\tif (!listOrSingleItem && !singleValue) {\n\t\t\tthis.value = new InkList();\n\t\t}\n\t\telse if (listOrSingleItem instanceof InkList) {\n\t\t\tthis.value = new InkList(listOrSingleItem);\n\t\t}\n\t\telse if (listOrSingleItem instanceof InkListItem && typeof singleValue === 'number') {\n\t\t\tthis.value = new InkList({\n\t\t\t\tKey: listOrSingleItem,\n\t\t\t\tValue: singleValue,\n\t\t\t});\n\t\t}\n\t}\n\tpublic static RetainListOriginsForAssignment(oldValue: InkObject | null, newValue: InkObject){\n\t\tlet oldList = asOrNull(oldValue, ListValue);\n\t\tlet newList = asOrNull(newValue, ListValue);\n\n\t\tif (newList && newList.value === null) return throwNullException('newList.value');\n\t\tif (oldList && oldList.value === null) return throwNullException('oldList.value');\n\n\t\t// When assigning the empty list, try to retain any initial origin names\n\t\tif (oldList && newList && newList.value!.Count == 0)\n\t\t\tnewList.value!.SetInitialOriginNames(oldList.value!.originNames);\n\t}\n}\n\nexport enum ValueType {\n\tInt = 0,\n\tFloat = 1,\n\tList = 2,\n\tString = 3,\n\tDivertTarget = 4,\n\tVariablePointer = 5,\n}\n","import {InkObject} from './Object';\nimport {Container} from './Container';\n\nexport class SearchResult{\n\tpublic obj: InkObject | null = null;\n\tpublic approximate: boolean = false;\n\n\tget correctObj(){\n\t\treturn this.approximate ? null : this.obj;\n\t}\n\n\tget container(){\n\t\treturn (this.obj instanceof Container) ? this.obj : null;\n\t}\n\n\tpublic copy(){\n\t\tlet searchResult = new SearchResult();\n\t\tsearchResult.obj = this.obj;\n\t\tsearchResult.approximate = this.approximate;\n\n\t\treturn searchResult;\n\t}\n}\n","import {StringValue} from './Value';\nimport {throwNullException} from './NullException';\nimport {StringBuilder} from './StringBuilder';\nimport {INamedContent} from './INamedContent';\nimport {InkObject} from './Object';\nimport {SearchResult} from './SearchResult';\nimport {Path} from './Path';\nimport {Debug} from './Debug';\nimport {tryGetValueFromMap} from './TryGetResult';\nimport {asINamedContentOrNull, asOrNull, asOrThrows} from './TypeAssertion';\n\nexport class Container extends InkObject implements INamedContent{\n\tpublic name: string = '';\n\n\tpublic _content: InkObject[] = [];\n\tpublic namedContent: Map<string, INamedContent> = new Map();\n\n\tpublic visitsShouldBeCounted: boolean = false;\n\tpublic turnIndexShouldBeCounted: boolean = false;\n\tpublic countingAtStartOnly: boolean = false;\n\n\tpublic _pathToFirstLeafContent: Path | null = null;\n\n\tget hasValidName(){\n\t\treturn this.name != null && this.name.length > 0;\n\t}\n\tget content(){\n\t\treturn this._content;\n\t}\n\tset content(value: InkObject[]){\n\t\tthis.AddContent(value);\n\t}\n\tget namedOnlyContent(){\n\t\tlet namedOnlyContentDict: Map<string, InkObject> | null = new Map();\n\n\t\tfor (let [key, value] of this.namedContent){\n\t\t\tlet inkObject = asOrThrows(value, InkObject);\n\t\t\tnamedOnlyContentDict.set(key, inkObject);\n\t\t}\n\n\t\tfor (let c of this.content){\n\t\t\tlet named = asINamedContentOrNull(c);\n\t\t\tif (named != null && named.hasValidName) {\n\t\t\t\tnamedOnlyContentDict.delete(named.name);\n\t\t\t}\n\t\t}\n\n\t\tif (namedOnlyContentDict.size == 0)\n\t\t\tnamedOnlyContentDict = null;\n\n\t\treturn namedOnlyContentDict;\n\t}\n\tset namedOnlyContent(value: Map<string, InkObject> | null){\n\t\tlet existingNamedOnly = this.namedOnlyContent;\n\t\tif (existingNamedOnly != null) {\n\t\t\tfor (let [key, val] of existingNamedOnly){\n\t\t\t\tthis.namedContent.delete(key);\n\t\t\t}\n\t\t}\n\n\t\tif (value == null)\n\t\t\treturn;\n\n\t\tfor (let [key, val] of value){\n\t\t\tlet named = asINamedContentOrNull(val);\n\t\t\tif (named != null)\n\t\t\t\tthis.AddToNamedContentOnly(named);\n\t\t}\n\t}\n\tget countFlags(): number{\n\t\tlet flags: Container.CountFlags = 0;\n\t\tif (this.visitsShouldBeCounted)    flags |= Container.CountFlags.Visits;\n\t\tif (this.turnIndexShouldBeCounted) flags |= Container.CountFlags.Turns;\n\t\tif (this.countingAtStartOnly)      flags |= Container.CountFlags.CountStartOnly;\n\n\t\tif (flags == Container.CountFlags.CountStartOnly) {\n\t\t\tflags = 0;\n\t\t}\n\n\t\treturn flags;\n\t}\n\tset countFlags(value: number){\n\t\tlet flag: Container.CountFlags = value;\n\t\tif ((flag & Container.CountFlags.Visits) > 0) this.visitsShouldBeCounted = true;\n\t\tif ((flag & Container.CountFlags.Turns) > 0)  this.turnIndexShouldBeCounted = true;\n\t\tif ((flag & Container.CountFlags.CountStartOnly) > 0) this.countingAtStartOnly = true;\n\t}\n\tget pathToFirstLeafContent(){\n\t\tif( this._pathToFirstLeafContent == null )\n\t\t\tthis._pathToFirstLeafContent = this.path.PathByAppendingPath(this.internalPathToFirstLeafContent);\n\n\t\treturn this._pathToFirstLeafContent;\n\t}\n\tget internalPathToFirstLeafContent(){\n\t\tlet components: Path.Component[] = [];\n\t\tlet container: Container = this;\n\t\twhile (container instanceof Container) {\n\t\t\tif (container.content.length > 0) {\n\t\t\t\tcomponents.push(new Path.Component(0));\n\t\t\t\tcontainer = container.content[0] as Container;\n\t\t\t}\n\t\t}\n\t\treturn new Path(components);\n\t}\n\n\tpublic AddContent(contentObjOrList: InkObject | InkObject[]){\n\t\tif (contentObjOrList instanceof Array){\n\t\t\tlet contentList = contentObjOrList as InkObject[];\n\n\t\t\tfor (let c of contentList) {\n\t\t\t\tthis.AddContent(c);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlet contentObj = contentObjOrList as InkObject;\n\t\t\tthis._content.push(contentObj);\n\n\t\t\tif (contentObj.parent) {\n\t\t\t\tthrow new Error('content is already in ' + contentObj.parent);\n\t\t\t}\n\n\t\t\tcontentObj.parent = this;\n\n\t\t\tthis.TryAddNamedContent(contentObj);\n\t\t}\n\t}\n\tpublic TryAddNamedContent(contentObj: InkObject){\n\t\tlet namedContentObj = asINamedContentOrNull(contentObj);\n\t\tif (namedContentObj != null && namedContentObj.hasValidName){\n\t\t\tthis.AddToNamedContentOnly(namedContentObj);\n\t\t}\n\t}\n\tpublic AddToNamedContentOnly(namedContentObj: INamedContent){\n\t\tDebug.AssertType(namedContentObj, InkObject, 'Can only add Runtime.Objects to a Runtime.Container');\n\t\tlet runtimeObj = asOrThrows(namedContentObj, InkObject);\n\t\truntimeObj.parent = this;\n\n\t\tthis.namedContent.set(namedContentObj.name, namedContentObj);\n\t}\n\tpublic ContentAtPath(path: Path, partialPathStart: number = 0, partialPathLength: number = -1){\n\t\tif (partialPathLength == -1)\n\t\t\tpartialPathLength = path.length;\n\n\t\tlet result = new SearchResult();\n\t\tresult.approximate = false;\n\n\t\tlet currentContainer: Container | null = this;\n\t\tlet currentObj: InkObject = this;\n\n\t\tfor (let i = partialPathStart; i < partialPathLength; ++i) {\n\t\t\tlet comp = path.GetComponent(i);\n\t\t\tif (currentContainer == null) {\n\t\t\t\tresult.approximate = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet foundObj: InkObject | null = currentContainer.ContentWithPathComponent(comp);\n\n\t\t\tif (foundObj == null) {\n\t\t\t\tresult.approximate = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcurrentObj = foundObj;\n\t\t\tcurrentContainer = asOrNull(foundObj, Container);\n\t\t}\n\n\t\tresult.obj = currentObj;\n\n\t\treturn result;\n\t}\n\tpublic InsertContent(contentObj: InkObject, index: number){\n\t\tthis.content[index] = contentObj;\n\n\t\tif (contentObj.parent) {\n\t\t\tthrow new Error('content is already in ' + contentObj.parent);\n\t\t}\n\n\t\tcontentObj.parent = this;\n\n\t\tthis.TryAddNamedContent(contentObj);\n\t}\n\tpublic AddContentsOfContainer(otherContainer: Container){\n\t\tthis.content = this.content.concat(otherContainer.content);\n\n\t\tfor (let obj of otherContainer.content) {\n\t\t\tobj.parent = this;\n\t\t\tthis.TryAddNamedContent(obj);\n\t\t}\n\t}\n\tpublic ContentWithPathComponent(component: Path.Component): InkObject | null{\n\t\tif (component.isIndex) {\n\n\t\t\tif (component.index >= 0 && component.index < this.content.length) {\n\t\t\t\treturn this.content[component.index];\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}\n\n\t\telse if (component.isParent) {\n\t\t\treturn this.parent;\n\t\t}\n\n\t\telse {\n\t\t\tif (component.name === null) { return throwNullException('component.name'); }\n\t\t\tlet foundContent = tryGetValueFromMap(this.namedContent, component.name, null);\n\t\t\tif (foundContent.exists){\n\t\t\t\treturn asOrThrows(foundContent.result, InkObject);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tpublic BuildStringOfHierarchy(): string;\n\tpublic BuildStringOfHierarchy(sb: StringBuilder, indentation: number, pointedObj: InkObject | null): string;\n\tpublic BuildStringOfHierarchy(){\n\t\tlet sb: StringBuilder;\n\t\tif (arguments.length == 0){\n\t\t\tsb = new StringBuilder();\n\t\t\tthis.BuildStringOfHierarchy(sb, 0, null);\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tsb = arguments[0] as StringBuilder;\n\t\tlet indentation = arguments[1] as number;\n\t\tlet pointedObj = arguments[2] as InkObject | null;\n\n\t\tfunction appendIndentation(){\n\t\t\tconst spacesPerIndent = 4; // Truly const in the original code\n\t\t\tfor(let i = 0; i < spacesPerIndent*indentation; ++i) {\n\t\t\t\tsb.Append(' ');\n\t\t\t}\n\t\t}\n\n\t\tappendIndentation();\n\t\tsb.Append('[');\n\n\t\tif (this.hasValidName) {\n\t\t\tsb.AppendFormat(' ({0})', this.name);\n\t\t}\n\n\t\tif (this == pointedObj) {\n\t\t\tsb.Append('  <---');\n\t\t}\n\n\t\tsb.AppendLine();\n\n\t\tindentation++;\n\n\t\tfor (let i = 0; i < this.content.length; ++i) {\n\n\t\t\tlet obj = this.content[i];\n\n\t\t\tif (obj instanceof Container) {\n\n\t\t\t\tlet container = obj as Container;\n\n\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\n\n\t\t\t} else {\n\t\t\t\tappendIndentation();\n\t\t\t\tif (obj instanceof StringValue) {\n\t\t\t\t\tsb.Append('\\\"');\n\t\t\t\t\tsb.Append(obj.toString().replace('\\n', '\\\\n'));\n\t\t\t\t\tsb.Append('\\\"');\n\t\t\t\t} else {\n\t\t\t\t\tsb.Append(obj.toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i != this.content.length - 1) {\n\t\t\t\tsb.Append(',');\n\t\t\t}\n\n\t\t\tif ( !(obj instanceof Container) && obj == pointedObj ) {\n\t\t\t\tsb.Append('  <---');\n\t\t\t}\n\n\t\t\tsb.AppendLine();\n\t\t}\n\n\t\tlet onlyNamed: Map<string, INamedContent> = new Map();\n\n\t\tfor (let [key, value] of this.namedContent){\n\t\t\tif (this.content.indexOf(asOrThrows(value, InkObject)) >= 0) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tonlyNamed.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\tif (onlyNamed.size > 0) {\n\t\t\tappendIndentation();\n\t\t\tsb.AppendLine('-- named: --');\n\n\t\t\tfor (let [key, value] of onlyNamed){\n\t\t\t\tDebug.AssertType(value, Container, 'Can only print out named Containers');\n\t\t\t\tlet container = value as Container;\n\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\n\t\t\t\tsb.AppendLine();\n\t\t\t}\n\t\t}\n\n\t\tindentation--;\n\n\t\tappendIndentation();\n\t\tsb.Append(']');\n\t}\n}\n\nexport namespace Container{\n\texport enum CountFlags {\n\t\tVisits = 1,\n\t\tTurns = 2,\n\t\tCountStartOnly = 4,\n\t}\n}\n","import {InkObject} from './Object';\n\nexport class Glue extends InkObject{\n\tpublic toString(){\n\t\treturn 'Glue';\n\t}\n}\n","import {InkObject} from './Object';\n\nexport class ControlCommand extends InkObject{\n\n\tprivate _commandType: ControlCommand.CommandType;\n\n\tget commandType(): ControlCommand.CommandType{\n\t\treturn this._commandType;\n\t}\n\n\tconstructor(commandType: ControlCommand.CommandType = ControlCommand.CommandType.NotSet){\n\t\tsuper();\n\t\tthis._commandType = commandType;\n\t}\n\n\tpublic Copy(){\n\t\treturn new ControlCommand(this.commandType);\n\t}\n\tpublic static EvalStart(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalStart);\n\t}\n\tpublic static EvalOutput(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalOutput);\n\t}\n\tpublic static EvalEnd(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalEnd);\n\t}\n\tpublic static Duplicate(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.Duplicate);\n\t}\n\tpublic static PopEvaluatedValue(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopEvaluatedValue);\n\t}\n\tpublic static PopFunction(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopFunction);\n\t}\n\tpublic static PopTunnel(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopTunnel);\n\t}\n\tpublic static BeginString(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.BeginString);\n\t}\n\tpublic static EndString(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.EndString);\n\t}\n\tpublic static NoOp(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.NoOp);\n\t}\n\tpublic static ChoiceCount(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.ChoiceCount);\n\t}\n\tpublic static Turns(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.Turns);\n\t}\n\tpublic static TurnsSince(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.TurnsSince);\n\t}\n\tpublic static ReadCount(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.ReadCount);\n\t}\n\tpublic static Random(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.Random);\n\t}\n\tpublic static SeedRandom(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.SeedRandom);\n\t}\n\tpublic static VisitIndex(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.VisitIndex);\n\t}\n\tpublic static SequenceShuffleIndex(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.SequenceShuffleIndex);\n\t}\n\tpublic static StartThread(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.StartThread);\n\t}\n\tpublic static Done(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.Done);\n\t}\n\tpublic static End(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.End);\n\t}\n\tpublic static ListFromInt(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.ListFromInt);\n\t}\n\tpublic static ListRange(){\n\t\treturn new ControlCommand(ControlCommand.CommandType.ListRange);\n\t}\n\tpublic static ListRandom(){\n\t\treturn new ControlCommand (ControlCommand.CommandType.ListRandom);\n\t}\n\tpublic toString(){\n\t\treturn this.commandType.toString();\n\t}\n}\n\nexport namespace ControlCommand {\n\texport enum CommandType {\n\t\tNotSet = -1,\n\t\tEvalStart,\n\t\tEvalOutput,\n\t\tEvalEnd,\n\t\tDuplicate,\n\t\tPopEvaluatedValue,\n\t\tPopFunction,\n\t\tPopTunnel,\n\t\tBeginString,\n\t\tEndString,\n\t\tNoOp,\n\t\tChoiceCount,\n\t\tTurns,\n\t\tTurnsSince,\n\t\tRandom,\n\t\tSeedRandom,\n\t\tVisitIndex,\n\t\tSequenceShuffleIndex,\n\t\tStartThread,\n\t\tDone,\n\t\tEnd,\n\t\tListFromInt,\n\t\tListRange,\n\t\tListRandom,\n\t\tReadCount,\n\n\t\tTOTAL_VALUES,\n\t}\n}\n","export enum PushPopType {\n\tTunnel = 0,\n\tFunction = 1,\n\tFunctionEvaluationFromGame = 2,\n}\n","import {Path} from './Path';\nimport {Container} from './Container';\nimport {InkObject} from './Object';\n\nexport class Pointer{\n  public container: Container | null = null;\n  public index: number = -1;\n\n\tconstructor();\n\tconstructor(container: Container | null, index: number)\n\tconstructor(){\n\t\tif (arguments.length === 2) {\n\t\t\tthis.container = arguments[0];\n\t\t\tthis.index = arguments[1];\n\t\t}\n\t}\n\n\tpublic Resolve(): InkObject | null{\n\t\tif (this.index < 0) return this.container;\n\t\tif (this.container == null) return null;\n\t\tif (this.container.content.length == 0) return this.container;\n\t\tif (this.index >= this.container.content.length) return null;\n\n\t\treturn this.container.content[this.index];\n\t}\n\n\tget isNull(): boolean{\n\t\treturn this.container == null;\n\t}\n\n\tget path(): Path | null{\n\t\tif (this.isNull) return null;\n\n\t\tif (this.index >= 0)\n\t\t\treturn this.container!.path.PathByAppendingComponent(new Path.Component(this.index));\n\t\telse\n\t\t\treturn this.container!.path;\n\t}\n\n\tpublic toString(): string{\n\t\tif (!this.container)\n\t\t\treturn 'Ink Pointer (null)';\n\n\t\treturn 'Ink Pointer -> ' + this.container.path.toString() + ' -- index ' + this.index;\n\t}\n\n\t// This method does not exist in the original C# code, but is here to maintain the\n\t// value semantics of Pointer.\n\tpublic copy(): Pointer{\n\t\treturn new Pointer(this.container, this.index);\n\t}\n\n\tpublic static StartOf(container: Container | null): Pointer{\n\t\treturn new Pointer(container, 0);\n\t}\n\n\tpublic static get Null(): Pointer {\n\t\treturn new Pointer(null, -1);\n\t}\n}\n","import {Path} from './Path';\nimport {PushPopType} from './PushPop';\nimport {StringBuilder} from './StringBuilder';\nimport {InkObject} from './Object';\nimport {Pointer} from './Pointer';\nimport {Container} from './Container';\nimport {throwNullException} from './NullException';\n\nexport class Divert extends InkObject{\n\tget targetPath(){\n\t\tif (this._targetPath != null && this._targetPath.isRelative) {\n\t\t\tlet targetObj = this.targetPointer.Resolve();\n\t\t\tif (targetObj) {\n\t\t\t\tthis._targetPath = targetObj.path;\n\t\t\t}\n\t\t}\n\n\t\treturn this._targetPath;\n\t}\n\tset targetPath(value: Path | null){\n\t\tthis._targetPath = value;\n\t\tthis._targetPointer = Pointer.Null;\n\t}\n\n\tpublic _targetPath: Path | null = null;\n\n\tget targetPointer(){\n\t\tif (this._targetPointer.isNull) {\n\t\t\tlet targetObj = this.ResolvePath(this._targetPath).obj;\n\n\t\t\tif (this._targetPath === null) return throwNullException('this._targetPath');\n\t\t\tif (this._targetPath.lastComponent === null) return throwNullException('this._targetPath.lastComponent');\n\n\t\t\tif (this._targetPath.lastComponent.isIndex) {\n\t\t\t\tif (targetObj === null) return throwNullException('targetObj');\n\t\t\t\tthis._targetPointer.container = (targetObj.parent instanceof Container) ? targetObj.parent : null;\n\t\t\t\tthis._targetPointer.index = this._targetPath.lastComponent.index;\n\t\t\t} else {\n\t\t\t\tthis._targetPointer = Pointer.StartOf((targetObj instanceof Container) ? targetObj : null);\n\t\t\t}\n\t\t}\n\n\t\treturn this._targetPointer.copy();\n\t}\n\n\tpublic _targetPointer: Pointer = Pointer.Null;\n\n\tget targetPathString(){\n\t\tif (this.targetPath == null)\n\t\t\treturn null;\n\n\t\treturn this.CompactPathString(this.targetPath);\n\t}\n\tset targetPathString(value: string | null){\n\t\tif (value == null) {\n\t\t\tthis.targetPath = null;\n\t\t} else {\n\t\t\tthis.targetPath = new Path(value);\n\t\t}\n\t}\n\n\tpublic variableDivertName: string | null = null;\n\tget hasVariableTarget(){\n\t\treturn this.variableDivertName != null;\n\t}\n\n\tpublic pushesToStack: boolean = false;\n\tpublic stackPushType: PushPopType = 0;\n\n\tpublic isExternal: boolean = false;\n\tpublic externalArgs: number = 0;\n\n\tpublic isConditional: boolean = false;\n\n\tconstructor(stackPushType?: PushPopType){\n\t\tsuper();\n\t\tthis.pushesToStack = false;\n\n\t\tif (typeof stackPushType !== 'undefined') {\n\t\t\tthis.pushesToStack = true;\n\t\t\tthis.stackPushType = stackPushType;\n\t\t}\n\t}\n\n\tpublic Equals(obj: Divert | null){\n\t\tlet otherDivert = obj;\n\t\tif (otherDivert instanceof Divert) {\n\t\t\tif (this.hasVariableTarget == otherDivert.hasVariableTarget) {\n\t\t\t\tif (this.hasVariableTarget) {\n\t\t\t\t\treturn this.variableDivertName == otherDivert.variableDivertName;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.targetPath === null) return throwNullException('this.targetPath');\n\t\t\t\t\treturn this.targetPath.Equals(otherDivert.targetPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic toString(){\n\t\tif (this.hasVariableTarget) {\n\t\t\treturn 'Divert(variable: ' + this.variableDivertName + ')';\n\t\t}\n\t\telse if (this.targetPath == null) {\n\t\t\treturn 'Divert(null)';\n\t\t} else {\n\n\t\t\tlet sb = new StringBuilder();\n\n\t\t\tlet targetStr = this.targetPath.toString();\n\t\t\t// int? targetLineNum = DebugLineNumberOfPath (targetPath);\n\t\t\tlet targetLineNum = null;\n\t\t\tif (targetLineNum != null) {\n\t\t\t\ttargetStr = 'line ' + targetLineNum;\n\t\t\t}\n\n\t\t\tsb.Append('Divert');\n\n\t\t\tif (this.isConditional)\n\t\t\t\tsb.Append('?');\n\n\t\t\tif (this.pushesToStack) {\n\t\t\t\tif (this.stackPushType == PushPopType.Function) {\n\t\t\t\t\tsb.Append(' function');\n\t\t\t\t} else {\n\t\t\t\t\tsb.Append(' tunnel');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsb.Append(' -> ');\n\t\t\tsb.Append(this.targetPathString);\n\n\t\t\tsb.Append(' (');\n\t\t\tsb.Append(targetStr);\n\t\t\tsb.Append(')');\n\n\t\t\treturn sb.toString();\n\t\t}\n\t}\n}\n","import {InkObject} from './Object';\nimport {Path} from './Path';\nimport {Container} from './Container';\nimport {throwNullException} from './NullException';\n\nexport class ChoicePoint extends InkObject{\n\tpublic _pathOnChoice: Path | null = null;\n\tpublic hasCondition: boolean = false;\n\tpublic hasStartContent: boolean = false;\n\tpublic hasChoiceOnlyContent: boolean = false;\n\tpublic isInvisibleDefault: boolean = false;\n\tpublic onceOnly: boolean = true;\n\n\tconstructor(onceOnly: boolean = true){\n\t\tsuper();\n\t\tthis.onceOnly = onceOnly;\n\t}\n\tget pathOnChoice(): Path | null{\n\t\tif (this._pathOnChoice != null && this._pathOnChoice.isRelative) {\n\t\t\tlet choiceTargetObj = this.choiceTarget;\n\t\t\tif (choiceTargetObj) {\n\t\t\t\tthis._pathOnChoice = choiceTargetObj.path;\n\t\t\t}\n\t\t}\n\t\treturn this._pathOnChoice;\n\t}\n\tset pathOnChoice(value: Path | null){\n\t\tthis._pathOnChoice = value;\n\t}\n\tget choiceTarget(): Container | null{\n\t\tif (this._pathOnChoice === null) return throwNullException('ChoicePoint._pathOnChoice');\n\t\treturn this.ResolvePath(this._pathOnChoice).container;\n\t}\n\tget pathStringOnChoice(): string{\n\t\tif (this.pathOnChoice === null) return throwNullException('ChoicePoint.pathOnChoice');\n\t\treturn this.CompactPathString(this.pathOnChoice);\n\t}\n\tset pathStringOnChoice(value: string){\n\t\tthis.pathOnChoice = new Path(value);\n\t}\n\tget flags(): number{\n\t\tlet flags = 0;\n\t\tif (this.hasCondition)         flags |= 1;\n\t\tif (this.hasStartContent)      flags |= 2;\n\t\tif (this.hasChoiceOnlyContent) flags |= 4;\n\t\tif (this.isInvisibleDefault)   flags |= 8;\n\t\tif (this.onceOnly)             flags |= 16;\n\t\treturn flags;\n\t}\n\tset flags(value: number){\n\t\tthis.hasCondition = (value & 1) > 0;\n\t\tthis.hasStartContent = (value & 2) > 0;\n\t\tthis.hasChoiceOnlyContent = (value & 4) > 0;\n\t\tthis.isInvisibleDefault = (value & 8) > 0;\n\t\tthis.onceOnly = (value & 16) > 0;\n\t}\n\tpublic toString(): string{\n\t\tif (this.pathOnChoice === null) return throwNullException('ChoicePoint.pathOnChoice');\n\t\t// int? targetLineNum = DebugLineNumberOfPath (pathOnChoice);\n\t\tlet targetLineNum = null;\n\t\tlet targetString = this.pathOnChoice.toString();\n\n\t\tif (targetLineNum != null) {\n\t\t\t targetString = ' line ' + targetLineNum + '('+targetString+')';\n\t\t}\n\n\t\treturn 'Choice: -> ' + targetString;\n\t}\n}\n","import {InkObject} from './Object';\nimport {Path} from './Path';\n\nexport class VariableReference extends InkObject{\n\n\tpublic name: string | null;\n\tpublic pathForCount: Path | null = null;\n\n\tget containerForCount(){\n\t\tif (this.pathForCount === null)\n\t\t\treturn null;\n\t\treturn this.ResolvePath(this.pathForCount).container;\n\t}\n\tget pathStringForCount(){\n\t\tif(this.pathForCount === null)\n\t\t\treturn null;\n\n\t\treturn this.CompactPathString(this.pathForCount);\n\t}\n\tset pathStringForCount(value: string | null){\n\t\tif (value === null)\n\t\t\tthis.pathForCount = null;\n\t\telse\n\t\t\tthis.pathForCount = new Path(value);\n\t}\n\n\tconstructor(name: string | null = null){\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n\n\tpublic toString(){\n\t\tif (this.name != null) {\n\t\t\treturn 'var(' + this.name + ')';\n\t\t} else {\n\t\t\tlet pathStr = this.pathStringForCount;\n\t\t\treturn 'read_count(' + pathStr + ')';\n\t\t}\n\t}\n}\n","import {InkObject} from './Object';\n\nexport class VariableAssignment extends InkObject{\n\n\tpublic readonly variableName: string | null;\n\tpublic readonly isNewDeclaration: boolean;\n\tpublic isGlobal: boolean;\n\n\tconstructor(variableName: string | null, isNewDeclaration: boolean){\n\t\tsuper();\n\t\tthis.variableName = variableName || null;\n\t\tthis.isNewDeclaration = !!isNewDeclaration;\n\t\tthis.isGlobal = false;\n\t}\n\n\tpublic toString(): string{\n\t\treturn 'VarAssign to ' + this.variableName;\n\t}\n}\n","import {InkObject} from './Object';\n\nexport class Void extends InkObject{}\n","import {Value, ValueType, IntValue, ListValue} from './Value';\nimport {StoryException} from './StoryException';\nimport {Void} from './Void';\nimport {Path} from './Path';\nimport {InkList, InkListItem} from './InkList';\nimport {InkObject} from './Object';\nimport {asOrNull, asOrThrows} from './TypeAssertion';\nimport {throwNullException} from './NullException';\n\ntype BinaryOp<T> = (left: T, right: T) => any;\ntype UnaryOp<T> = (val: T) => any;\n\nexport class NativeFunctionCall extends InkObject{\n\t// tslint:disable:variable-name\n\tpublic static readonly Add: string \t\t= '+';\n\tpublic static readonly Subtract: string = '-';\n\tpublic static readonly Divide: string   = '/';\n\tpublic static readonly Multiply: string = '*';\n\tpublic static readonly Mod: string      = '%';\n\tpublic static readonly Negate: string   = '_';\n\tpublic static readonly Equal: string    = '==';\n\tpublic static readonly Greater: string  = '>';\n\tpublic static readonly Less: string     = '<';\n\tpublic static readonly GreaterThanOrEquals: string = '>=';\n\tpublic static readonly LessThanOrEquals: string = '<=';\n\tpublic static readonly NotEquals: string   = '!=';\n\tpublic static readonly Not: string      = '!';\n\tpublic static readonly And: string      = '&&';\n\tpublic static readonly Or: string       = '||';\n\tpublic static readonly Min: string      = 'MIN';\n\tpublic static readonly Max: string      = 'MAX';\n\tpublic static readonly Pow: string      = 'POW';\n\tpublic static readonly Floor: string    = 'FLOOR';\n\tpublic static readonly Ceiling: string  = 'CEILING';\n\tpublic static readonly Int: string      = 'INT';\n\tpublic static readonly Float: string    = 'FLOAT';\n\tpublic static readonly Has: string      = '?';\n\tpublic static readonly Hasnt: string    = '!?';\n\tpublic static readonly Intersect: string = '^';\n\tpublic static readonly ListMin: string   = 'LIST_MIN';\n\tpublic static readonly ListMax: string   = 'LIST_MAX';\n\tpublic static readonly All: string       = 'LIST_ALL';\n\tpublic static readonly Count: string     = 'LIST_COUNT';\n\tpublic static readonly ValueOfList: string = 'LIST_VALUE';\n\tpublic static readonly Invert: string    = 'LIST_INVERT';\n\t// tslint:enable:variable-name\n\n\tpublic static CallWithName(functionName: string){\n\t\treturn new NativeFunctionCall(functionName);\n\t}\n\n\tpublic static CallExistsWithName(functionName: string){\n\t\tthis.GenerateNativeFunctionsIfNecessary();\n\t\treturn this._nativeFunctions!.get(functionName);\n\t}\n\n\tget name(){\n\t\tif (this._name === null) return throwNullException('NativeFunctionCall._name');\n\t\treturn this._name;\n\t}\n\tset name(value: string){\n\t\tthis._name = value;\n\t\tif( !this._isPrototype ) {\n\t\t\tif (NativeFunctionCall._nativeFunctions === null) throwNullException('NativeFunctionCall._nativeFunctions');\n\t\t\telse this._prototype = NativeFunctionCall._nativeFunctions.get(this._name) || null;\n\t\t}\n\t}\n\tpublic _name: string | null = null;\n\n\tget numberOfParameters(){\n\t\tif (this._prototype) {\n\t\t\treturn this._prototype.numberOfParameters;\n\t\t} else {\n\t\t\treturn this._numberOfParameters;\n\t\t}\n\t}\n\tset numberOfParameters(value: number){\n\t\tthis._numberOfParameters = value;\n\t}\n\tpublic _numberOfParameters: number = 0;\n\n\tpublic Call(parameters: InkObject[]): InkObject | null{\n\t\tif (this._prototype) {\n\t\t\treturn this._prototype.Call(parameters);\n\t\t}\n\n\t\tif (this.numberOfParameters != parameters.length) {\n\t\t\tthrow new Error('Unexpected number of parameters');\n\t\t}\n\n\t\tlet hasList  = false;\n\t\tfor (let p of parameters) {\n\t\t\tif (p instanceof Void) throw new StoryException('Attempting to perform operation on a void value. Did you forget to \"return\" a value from a function you called here?');\n\t\t\tif (p instanceof ListValue)\n\t\t\t\thasList = true;\n\t\t}\n\n\t\tif (parameters.length == 2 && hasList){\n\t\t\treturn this.CallBinaryListOperation(parameters);\n\t\t}\n\n\t\tlet coercedParams = this.CoerceValuesToSingleType(parameters);\n\t\tlet coercedType = coercedParams[0].valueType;\n\n\t\tif (coercedType == ValueType.Int) {\n\t\t\treturn this.CallType<number>(coercedParams);\n\t\t} else if (coercedType == ValueType.Float) {\n\t\t\treturn this.CallType<number>(coercedParams);\n\t\t} else if (coercedType == ValueType.String) {\n\t\t\treturn this.CallType<string>(coercedParams);\n\t\t} else if (coercedType == ValueType.DivertTarget) {\n\t\t\treturn this.CallType<Path>(coercedParams);\n\t\t} else if (coercedType == ValueType.List) {\n\t\t\treturn this.CallType<InkList>(coercedParams);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic CallType<T>(parametersOfSingleType: Array<Value<T>>){\n\t\tlet param1 = asOrThrows(parametersOfSingleType[0], Value);\n\t\tlet valType = param1.valueType;\n\n\t\tlet val1 = param1 as Value<T>;\n\n\t\tlet paramCount = parametersOfSingleType.length;\n\n\t\tif (paramCount == 2 || paramCount == 1) {\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\n\t\t\tlet opForTypeObj = this._operationFuncs.get(valType);\n\t\t\tif (!opForTypeObj) {\n\t\t\t\tthrow new StoryException('Cannot perform operation '+this.name+' on '+valType);\n\t\t\t}\n\n\t\t\tif (paramCount == 2) {\n\t\t\t\tlet param2 = asOrThrows(parametersOfSingleType[1], Value);\n\n\t\t\t\tlet val2 = param2 as Value<T>;\n\n\t\t\t\tlet opForType = opForTypeObj as BinaryOp<T>;\n\n\t\t\t\tif (val1.value === null || val2.value === null) return throwNullException('NativeFunctionCall.Call BinaryOp values');\n\t\t\t\tlet resultVal = opForType(val1.value, val2.value);\n\n\t\t\t\treturn Value.Create(resultVal);\n\t\t\t}\n\n\t\t\telse {\n\n\t\t\t\tlet opForType = opForTypeObj as UnaryOp<T>;\n\n\t\t\t\tif (val1.value === null) return throwNullException('NativeFunctionCall.Call UnaryOp value');\n\t\t\t\tlet resultVal = opForType(val1.value);\n\n\t\t\t\treturn Value.Create(resultVal);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthrow new Error('Unexpected number of parameters to NativeFunctionCall: ' + parametersOfSingleType.length);\n\t\t}\n\t}\n\n\tpublic CallBinaryListOperation(parameters: InkObject[]){\n\t\tif ((this.name == '+' || this.name == '-') && parameters[0] instanceof ListValue && parameters[1] instanceof IntValue)\n\t\t\treturn this.CallListIncrementOperation(parameters);\n\n\t\tlet v1 = asOrThrows(parameters[0], Value);\n\t\tlet v2 = asOrThrows(parameters[1], Value);\n\n\t\tif ((this.name == '&&' || this.name == '||') && (v1.valueType != ValueType.List || v2.valueType != ValueType.List)) {\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\n\t\t\tlet op = this._operationFuncs.get(ValueType.Int) as BinaryOp<number>;\n\t\t\tif (op === null) return throwNullException('NativeFunctionCall.CallBinaryListOperation op');\n\t\t\tlet result = op(v1.isTruthy ? 1 : 0, v2.isTruthy ? 1 : 0);\n\t\t\treturn new IntValue(result);\n\t\t}\n\n\t\tif (v1.valueType == ValueType.List && v2.valueType == ValueType.List)\n\t\t\treturn this.CallType<InkList>([v1, v2]);\n\n\t\tthrow new StoryException('Can not call use ' + this.name + ' operation on ' + v1.valueType + ' and ' + v2.valueType);\n\t}\n\n\tpublic CallListIncrementOperation(listIntParams: InkObject[]){\n\t\tlet listVal = asOrThrows(listIntParams[0], ListValue);\n\t\tlet intVal = asOrThrows(listIntParams[1], IntValue);\n\n\t\tlet resultInkList = new InkList();\n\n\t\tif (listVal.value === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation listVal.value');\n\t\tfor (let [listItemKey, listItemValue] of listVal.value) {\n\t\t\tlet listItem = InkListItem.fromSerializedKey(listItemKey);\n\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\n\t\t\tlet intOp = this._operationFuncs.get(ValueType.Int) as BinaryOp<number>;\n\n\t\t\tif (intVal.value === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation intVal.value');\n\t\t\tlet targetInt = intOp(listItemValue, intVal.value);\n\n\t\t\tlet itemOrigin = null;\n\t\t\tif (listVal.value.origins === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation listVal.value.origins');\n\t\t\tfor (let origin of listVal.value.origins) {\n\t\t\t\tif (origin.name == listItem.originName) {\n\t\t\t\t\titemOrigin = origin;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (itemOrigin != null) {\n\t\t\t\tlet incrementedItem = itemOrigin.TryGetItemWithValue(targetInt, InkListItem.Null);\n\t\t\t\tif (incrementedItem.exists)\n\t\t\t\t\tresultInkList.Add(incrementedItem.result, targetInt);\n\t\t\t}\n\t\t}\n\n\t\treturn new ListValue(resultInkList);\n\t}\n\n\tpublic CoerceValuesToSingleType(parametersIn: InkObject[]){\n\t\tlet valType = ValueType.Int;\n\n\t\tlet specialCaseList: null | ListValue = null;\n\n\t\tfor (let obj of parametersIn) {\n\t\t\tlet val = asOrThrows(obj, Value);\n\t\t\tif (val.valueType > valType) {\n\t\t\t\tvalType = val.valueType;\n\t\t\t}\n\n\t\t\tif (val.valueType == ValueType.List) {\n\t\t\t\t specialCaseList = asOrNull(val, ListValue);\n\t\t\t}\n\t\t}\n\n\t\tlet parametersOut = [];\n\n\t\tif (ValueType[valType] == ValueType[ValueType.List]) {\n\t\t\tfor (let inkObjectVal of parametersIn){\n\t\t\t\tlet val = asOrThrows(inkObjectVal, Value);\n\t\t\t\tif (val.valueType == ValueType.List) {\n\t\t\t\t\tparametersOut.push(val);\n\t\t\t\t} else if (val.valueType == ValueType.Int) {\n\t\t\t\t\tlet intVal = parseInt(val.valueObject);\n\n\t\t\t\t\tspecialCaseList = asOrThrows(specialCaseList, ListValue);\n\t\t\t\t\tif (specialCaseList.value === null) return throwNullException('NativeFunctionCall.CoerceValuesToSingleType specialCaseList.value');\n\t\t\t\t\tlet list = specialCaseList.value.originOfMaxItem;\n\n\t\t\t\t\tif (list === null) return throwNullException('NativeFunctionCall.CoerceValuesToSingleType list');\n\t\t\t\t\tlet item = list.TryGetItemWithValue(intVal, InkListItem.Null);\n\t\t\t\t\tif (item.exists) {\n\t\t\t\t\t\tlet castedValue = new ListValue(item.result, intVal);\n\t\t\t\t\t\tparametersOut.push(castedValue);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow new StoryException('Could not find List item with the value ' + intVal + ' in ' + list.name);\n\t\t\t\t} else\n\t\t\t\t\tthrow new StoryException('Cannot mix Lists and ' + val.valueType + ' values in this operation');\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tfor (let inkObjectVal of parametersIn){\n\t\t\t\tlet val = asOrThrows(inkObjectVal, Value);\n\t\t\t\tlet castedValue = val.Cast(valType);\n\t\t\t\tparametersOut.push(castedValue);\n\t\t\t}\n\t\t}\n\n\t\treturn parametersOut;\n\t}\n\n\tconstructor(name: string);\n\tconstructor(name: string, numberOfParameters: number);\n\tconstructor();\n\tconstructor() {\n\t\tsuper();\n\n\t\tif (arguments.length === 0) {\n\t\t\tNativeFunctionCall.GenerateNativeFunctionsIfNecessary();\n\t\t}\n\t\telse if (arguments.length === 1) {\n\t\t\tlet name = arguments[0];\n\t\t\tNativeFunctionCall.GenerateNativeFunctionsIfNecessary();\n\t\t\tthis.name = name;\n\t\t}\n\t\telse if (arguments.length === 2) {\n\t\t\tlet name = arguments[0];\n\t\t\tlet numberOfParameters = arguments[1];\n\n\t\t\tthis._isPrototype = true;\n\t\t\tthis.name = name;\n\t\t\tthis.numberOfParameters = numberOfParameters;\n\t\t}\n\t}\n\n\tpublic static Identity<T>(t: T): any {\n\t\treturn t;\n\t}\n\n\tpublic static GenerateNativeFunctionsIfNecessary(){\n\t\tif (this._nativeFunctions == null) {\n\t\t\tthis._nativeFunctions = new Map();\n\n\t\t\t// Int operations\n\t\t\tthis.AddIntBinaryOp(this.Add,      (x, y) => x + y);\n\t\t\tthis.AddIntBinaryOp(this.Subtract, (x, y) => x - y);\n\t\t\tthis.AddIntBinaryOp(this.Multiply, (x, y) => x * y);\n\t\t\tthis.AddIntBinaryOp(this.Divide,   (x, y) => Math.round(x / y));\n\t\t\tthis.AddIntBinaryOp(this.Mod,      (x, y) => x % y);\n\t\t\tthis.AddIntUnaryOp(this.Negate,   (x) => -x);\n\n\t\t\tthis.AddIntBinaryOp(this.Equal,    (x, y) => x == y ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.Greater,  (x, y) => x > y  ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.Less,     (x, y) => x < y  ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.GreaterThanOrEquals, (x, y) => x >= y ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.LessThanOrEquals, (x, y) => x <= y ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.NotEquals, (x, y) => x != y ? 1 : 0);\n\t\t\tthis.AddIntUnaryOp(this.Not,       (x) => (x == 0) ? 1 : 0);\n\n\t\t\tthis.AddIntBinaryOp(this.And,      (x, y) => x != 0 && y != 0 ? 1 : 0);\n\t\t\tthis.AddIntBinaryOp(this.Or,       (x, y) => x != 0 || y != 0 ? 1 : 0);\n\n\t\t\tthis.AddIntBinaryOp(this.Max,      (x, y) => Math.max(x, y));\n\t\t\tthis.AddIntBinaryOp(this.Min,      (x, y) => Math.min(x, y));\n\n\t\t\tthis.AddIntBinaryOp(this.Pow,      (x, y) => Math.pow(x, y));\n\t\t\tthis.AddIntUnaryOp(this.Floor,     NativeFunctionCall.Identity);\n\t\t\tthis.AddIntUnaryOp(this.Ceiling,   NativeFunctionCall.Identity);\n\t\t\tthis.AddIntUnaryOp(this.Int,       NativeFunctionCall.Identity);\n\t\t\tthis.AddIntUnaryOp(this.Float,     (x) => x);\n\n\t\t\t// Float operations\n\t\t\tthis.AddFloatBinaryOp(this.Add,      (x, y) => x + y);\n\t\t\tthis.AddFloatBinaryOp(this.Subtract, (x, y) => x - y);\n\t\t\tthis.AddFloatBinaryOp(this.Multiply, (x, y) => x * y);\n\t\t\tthis.AddFloatBinaryOp(this.Divide,   (x, y) => x / y);\n\t\t\tthis.AddFloatBinaryOp(this.Mod,      (x, y) => x % y);\n\t\t\tthis.AddFloatUnaryOp(this.Negate,   (x) => -x);\n\n\t\t\tthis.AddFloatBinaryOp(this.Equal,    (x, y) => x == y ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.Greater,  (x, y) => x > y  ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.Less,     (x, y) => x < y  ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.GreaterThanOrEquals, (x, y) => x >= y ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.LessThanOrEquals, (x, y) => x <= y ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.NotEquals, (x, y) => x != y ? 1 : 0);\n\t\t\tthis.AddFloatUnaryOp(this.Not,       (x) => (x == 0.0) ? 1 : 0);\n\n\t\t\tthis.AddFloatBinaryOp(this.And,      (x, y) => x != 0.0 && y != 0.0 ? 1 : 0);\n\t\t\tthis.AddFloatBinaryOp(this.Or,       (x, y) => x != 0.0 || y != 0.0 ? 1 : 0);\n\n\t\t\tthis.AddFloatBinaryOp(this.Max,      (x, y) => Math.max(x, y));\n\t\t\tthis.AddFloatBinaryOp(this.Min,      (x, y) => Math.min(x, y));\n\n\t\t\tthis.AddFloatBinaryOp(this.Pow,      (x, y) => Math.pow(x, y));\n\t\t\tthis.AddFloatUnaryOp(this.Floor,     (x) => Math.floor(x));\n\t\t\tthis.AddFloatUnaryOp(this.Ceiling,   (x) => Math.ceil(x));\n\t\t\tthis.AddFloatUnaryOp(this.Int,       (x) => Math.floor(x));\n\t\t\tthis.AddFloatUnaryOp(this.Float,     NativeFunctionCall.Identity);\n\n\t\t\t// String operations\n\t\t\tthis.AddStringBinaryOp(this.Add,     \t(x, y) => x + y); // concat\n\t\t\tthis.AddStringBinaryOp(this.Equal,   \t(x, y) => x === y ? 1 : 0);\n\t\t\tthis.AddStringBinaryOp(this.NotEquals,(x, y) => !(x === y) ? 1 : 0);\n\t\t\tthis.AddStringBinaryOp(this.Has,      (x, y) => x.includes(y) ? 1 : 0);\n\t\t\tthis.AddStringBinaryOp(this.Hasnt,      (x, y) => x.includes(y) ? 0 : 1);\n\n\t\t\tthis.AddListBinaryOp(this.Add, \t\t (x, y) => x.Union(y));\n\t\t\tthis.AddListBinaryOp(this.Subtract,  (x, y) => x.Without(y));\n\t\t\tthis.AddListBinaryOp(this.Has, \t\t (x, y) => x.Contains(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.Hasnt, \t (x, y) => x.Contains(y) ? 0 : 1);\n\t\t\tthis.AddListBinaryOp(this.Intersect, (x, y) => x.Intersect(y));\n\n\t\t\tthis.AddListBinaryOp(this.Equal, \t\t\t\t(x, y) => x.Equals(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.Greater, \t\t\t\t(x, y) => x.GreaterThan(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.Less, \t\t\t\t(x, y) => x.LessThan(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.GreaterThanOrEquals, \t(x, y) => x.GreaterThanOrEquals(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.LessThanOrEquals, \t(x, y) => x.LessThanOrEquals(y) ? 1 : 0);\n\t\t\tthis.AddListBinaryOp(this.NotEquals, \t\t\t(x, y) => !x.Equals(y) ? 1 : 0);\n\n\t\t\tthis.AddListBinaryOp (this.And, \t\t\t\t(x, y) => x.Count > 0 && y.Count > 0 ? 1 : 0);\n\t\t\tthis.AddListBinaryOp (this.Or,  \t\t\t\t(x, y) => x.Count > 0 || y.Count > 0 ? 1 : 0);\n\n\t\t\tthis.AddListUnaryOp(this.Not, (x) => x.Count == 0 ? 1 : 0);\n\n\t\t\tthis.AddListUnaryOp(this.Invert, (x) => x.inverse);\n\t\t\tthis.AddListUnaryOp(this.All, (x) => x.all);\n\t\t\tthis.AddListUnaryOp(this.ListMin, (x) => x.MinAsList());\n\t\t\tthis.AddListUnaryOp(this.ListMax, (x) => x.MaxAsList());\n\t\t\tthis.AddListUnaryOp(this.Count,  (x) => x.Count);\n\t\t\tthis.AddListUnaryOp(this.ValueOfList,  (x) => x.maxItem.Value);\n\n\t\t\tlet divertTargetsEqual = (d1: Path, d2: Path) => {\n\t\t\t\treturn d1.Equals(d2) ? 1 : 0;\n\t\t\t};\n\t\t\tlet divertTargetsNotEqual = (d1: Path, d2: Path) => {\n\t\t\t\treturn d1.Equals (d2) ? 0 : 1;\n\t\t\t};\n\t\t\tthis.AddOpToNativeFunc(this.Equal, 2, ValueType.DivertTarget, divertTargetsEqual);\n\t\t\tthis.AddOpToNativeFunc(this.NotEquals, 2, ValueType.DivertTarget, divertTargetsNotEqual);\n\t\t}\n\t}\n\n\tpublic AddOpFuncForType(valType: ValueType, op: UnaryOp<number | InkList> | BinaryOp<number | string | InkList | Path>): void{\n\t\tif (this._operationFuncs == null) {\n\t\t\tthis._operationFuncs = new Map();\n\t\t}\n\n\t\tthis._operationFuncs.set(valType, op);\n\t}\n\n\tpublic static AddOpToNativeFunc(name: string, args: number, valType: ValueType, op: UnaryOp<any> | BinaryOp<any>): void{\n\t\tif (this._nativeFunctions === null) return throwNullException('NativeFunctionCall._nativeFunctions');\n\t\tlet nativeFunc = this._nativeFunctions.get(name);\n\t\tif (!nativeFunc) {\n\t\t\tnativeFunc = new NativeFunctionCall(name, args);\n\t\t\tthis._nativeFunctions.set(name, nativeFunc);\n\t\t}\n\n\t\tnativeFunc.AddOpFuncForType(valType, op);\n\t}\n\n\tpublic static AddIntBinaryOp(name: string, op: BinaryOp<number>){\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Int, op);\n\t}\n\tpublic static AddIntUnaryOp(name: string, op: UnaryOp<number>){\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Int, op);\n\t}\n\n\tpublic static AddFloatBinaryOp(name: string, op: BinaryOp<number>){\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Float, op);\n\t}\n\tpublic static AddFloatUnaryOp(name: string, op: UnaryOp<number>){\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Float, op);\n\t}\n\n\tpublic static AddStringBinaryOp(name: string, op: BinaryOp<string>){\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.String, op);\n\t}\n\n\tpublic static AddListBinaryOp(name: string, op: BinaryOp<InkList>){\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.List, op);\n\t}\n\tpublic static AddListUnaryOp(name: string, op: UnaryOp<InkList>){\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.List, op);\n\t}\n\n\tpublic toString(){\n\t\treturn 'Native \"' + this.name + '\"';\n\t}\n\n\tpublic _prototype: NativeFunctionCall | null = null;\n\tpublic _isPrototype: boolean = false;\n\tpublic _operationFuncs: Map<ValueType, BinaryOp<any> | UnaryOp<any>> | null = null;\n\tpublic static _nativeFunctions: Map<string, NativeFunctionCall> | null = null;\n\n}\n","import {InkObject} from './Object';\n\nexport class Tag extends InkObject{\n\n\tpublic readonly text: string;\n\n\tconstructor(tagText: string){\n\t\tsuper();\n\t\tthis.text = tagText.toString() || '';\n\t}\n\n\tpublic toString(): string{\n\t\treturn '# ' + this.text;\n\t}\n}\n","import {Path} from './Path';\nimport {CallStack} from './CallStack';\nimport {throwNullException} from './NullException';\nimport {InkObject} from './Object';\n\nexport class Choice extends InkObject{\n\tpublic text: string = '';\n\tpublic index: number = 0;\n\tpublic threadAtGeneration: CallStack.Thread | null = null;\n\tpublic sourcePath: string = '';\n\tpublic targetPath: Path | null = null;\n\tpublic isInvisibleDefault: boolean = false;\n\tpublic originalThreadIndex: number = 0;\n\n\tget pathStringOnChoice(): string{\n\t\tif (this.targetPath === null) return throwNullException('Choice.targetPath');\n\t\treturn this.targetPath.toString();\n\t}\n\tset pathStringOnChoice(value: string){\n\t\tthis.targetPath = new Path(value);\n\t}\n}\n","import {InkList, InkListItem, SerializedInkListItem} from './InkList';\nimport {ListValue} from './Value';\nimport {TryGetResult} from './TryGetResult';\n\nexport class ListDefinition{\n\tpublic _name: string;\n\tpublic _items: Map<SerializedInkListItem, number> | null;\n\tpublic _itemNameToValues: Map<string, number>;\n\n\tconstructor(name: string, items: Map<string, number> | null){\n\t\tthis._name = name || '';\n\t\tthis._items = null;\n\t\tthis._itemNameToValues = items || new Map();\n\t}\n\tget name(){\n\t\treturn this._name;\n\t}\n\tget items(){\n\t\tif (this._items == null){\n\t\t\tthis._items = new Map();\n\t\t\tfor (let [key, value] of this._itemNameToValues){\n\t\t\t\tlet item = new InkListItem(this.name, key);\n\t\t\t\tthis._items.set(item.serialized(), value);\n\t\t\t}\n\t\t}\n\n\t\treturn this._items;\n\t}\n\n\tpublic ValueForItem(item: InkListItem){\n\t\tif (!item.itemName) return 0;\n\n\t\tlet intVal = this._itemNameToValues.get(item.itemName);\n\t\tif (typeof intVal !== 'undefined')\n\t\t\treturn intVal;\n\t\telse\n\t\t\treturn 0;\n\t}\n\tpublic ContainsItem(item: InkListItem){\n\t\tif (!item.itemName) return false;\n\t\tif (item.originName != this.name) return false;\n\n\t\treturn this._itemNameToValues.has(item.itemName);\n\t}\n\tpublic ContainsItemWithName(itemName: string){\n\t\treturn this._itemNameToValues.has(itemName);\n\t}\n\tpublic TryGetItemWithValue(val: number, /* out */ item: InkListItem): TryGetResult<InkListItem>{\n\t\tfor (let [key, value] of this._itemNameToValues){\n\t\t\tif (value == val) {\n\t\t\t\titem = new InkListItem(this.name, key);\n\t\t\t\treturn { result: item, exists: true };\n\t\t\t}\n\t\t}\n\n\t\titem = InkListItem.Null;\n\t\treturn { result: item, exists: false };\n\t}\n\tpublic TryGetValueForItem(item: InkListItem, /* out */ intVal: number): TryGetResult<number>{\n\t\tif (!item.itemName) return { result: 0, exists: false };\n\t\tlet value = this._itemNameToValues.get(item.itemName);\n\n\t\tif (!value) return { result: 0, exists: false };\n\t\treturn { result: value, exists: true };\n\t}\n}\n","import {InkListItem} from './InkList';\nimport {ListValue} from './Value';\nimport {ListDefinition} from './ListDefinition';\nimport {TryGetResult} from './TryGetResult';\nimport {throwNullException} from './NullException';\n\nexport class ListDefinitionsOrigin{\n\tprotected _lists: Map<string, ListDefinition>;\n\tprotected _allUnambiguousListValueCache: Map<string, ListValue>;\n\n\tconstructor(lists: ListDefinition[]){\n\t\tthis._lists = new Map();\n\t\tthis._allUnambiguousListValueCache = new Map();\n\n\t\tfor (let list of lists){\n\t\t\tthis._lists.set(list.name, list);\n\n\t\t\tfor (let [key, val] of list.items){\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\t\tlet listValue = new ListValue(item, val);\n\n\t\t\t\tif (!item.itemName) { throw new Error('item.itemName is null or undefined.'); }\n\n\t\t\t\tthis._allUnambiguousListValueCache.set(item.itemName, listValue);\n\t\t\t\tthis._allUnambiguousListValueCache.set(item.fullName, listValue);\n\t\t\t}\n\t\t}\n\t}\n\tget lists(): ListDefinition[]{\n\t\tlet listOfLists: ListDefinition[] = [];\n\n\t\tfor (let [key, value] of this._lists){\n\t\t\tlistOfLists.push(value);\n\t\t}\n\n\t\treturn listOfLists;\n\t}\n\tpublic TryListGetDefinition(name: string | null, /* out */ def: ListDefinition | null): TryGetResult<ListDefinition | null>{\n\t\tif (name === null) { return {result: def, exists: false}; }\n\t\t// initially, this function returns a boolean and the second parameter is an out.\n\t\tlet definition = this._lists.get(name);\n\t\tif (!definition) return { result: def, exists: false };\n\n\t\treturn { result: definition, exists: true };\n\t}\n\tpublic FindSingleItemListWithName(name: string | null){\n\t\tif (name === null) { return throwNullException('name'); }\n\t\tlet val = this._allUnambiguousListValueCache.get(name);\n\n\t\tif (typeof val !== 'undefined'){\n\t\t\treturn val;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import {Container} from './Container';\nimport {Value, IntValue, FloatValue, StringValue, DivertTargetValue, VariablePointerValue, ListValue} from './Value';\nimport {Glue} from './Glue';\nimport {ControlCommand} from './ControlCommand';\nimport {PushPopType} from './PushPop';\nimport {Divert} from './Divert';\nimport {ChoicePoint} from './ChoicePoint';\nimport {VariableReference} from './VariableReference';\nimport {VariableAssignment} from './VariableAssignment';\nimport {NativeFunctionCall} from './NativeFunctionCall';\nimport {Void} from './Void';\nimport {Tag} from './Tag';\nimport {Path} from './Path';\nimport {Choice} from './Choice';\nimport {ListDefinition} from './ListDefinition';\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\nimport {InkListItem, InkList} from './InkList';\nimport {InkObject} from './Object';\nimport {JObject} from './JObject';\nimport {asOrNull, asNumberOrThrows} from './TypeAssertion';\nimport {throwNullException} from './NullException';\n\n// tslint:disable no-conditional-assignment\n\nexport class JsonSerialisation{\n\tpublic static ListToJArray(serialisables: InkObject[]){\n\t\tlet jArray: any[] = [];\n\t\tfor (let s of serialisables) {\n\t\t\tjArray.push(this.RuntimeObjectToJToken(s));\n\t\t}\n\t\treturn jArray;\n\t}\n\n\tpublic static JArrayToRuntimeObjList(jArray: any[], skipLast: boolean = false){\n\t\tlet count = jArray.length;\n\t\tif (skipLast)\n\t\t\tcount--;\n\n\t\tlet list: InkObject[] = [];\n\n\t\tfor (let i = 0; i < count; i++){\n\t\t\tlet jTok = jArray[i];\n\t\t\tlet runtimeObj = this.JTokenToRuntimeObject(jTok);\n\t\t\tif (runtimeObj === null) { return throwNullException('runtimeObj'); }\n\t\t\tlist.push(runtimeObj);\n\t\t}\n\n\t\treturn list;\n\t}\n\n\tpublic static DictionaryRuntimeObjsToJObject(dictionary: Map<string, InkObject>){\n\t\tlet jsonObj: JObject = {};\n\n\t\tfor (let [key, value] of dictionary){\n\t\t\tlet runtimeObj = asOrNull(value, InkObject);\n\t\t\tif (runtimeObj != null)\n\t\t\t\tjsonObj[key] = this.RuntimeObjectToJToken(runtimeObj);\n\t\t}\n\n\t\treturn jsonObj;\n\t}\n\n\tpublic static JObjectToDictionaryRuntimeObjs(jObject: JObject){\n\t\tlet dict: Map<string, InkObject> = new Map();\n\n\t\tfor (let key in jObject){\n\t\t\tif (jObject.hasOwnProperty(key)) {\n\t\t\t\tlet inkObject = this.JTokenToRuntimeObject(jObject[key]);\n\t\t\t\tif (inkObject === null) { return throwNullException('inkObject'); }\n\t\t\t\tdict.set(key, inkObject);\n\t\t\t}\n\t\t}\n\n\t\treturn dict;\n\t}\n\n\tpublic static JObjectToIntDictionary(jObject: JObject){\n\t\tlet dict: Map<string, number> = new Map();\n\t\tfor (let key in jObject){\n\t\t\tif (jObject.hasOwnProperty(key)) {\n\t\t\t\tdict.set(key, parseInt(jObject[key]));\n\t\t\t}\n\t\t}\n\t\treturn dict;\n\t}\n\tpublic static IntDictionaryToJObject(dict: Map<string, number>){\n\t\tlet jObj: JObject = {};\n\t\tfor (let [key, value] of dict){\n\t\t\tjObj[key] = asNumberOrThrows(value);\n\t\t}\n\t\treturn jObj;\n\t}\n\tpublic static JTokenToRuntimeObject(token: any): InkObject | null {\n\t\tif (typeof token === 'number' && !isNaN(token)){\n\t\t\treturn Value.Create(token);\n\t\t}\n\n\t\tif (typeof token === 'string'){\n\t\t\tlet str = token.toString();\n\n\t\t\t// String value\n\t\t\tlet firstChar = str[0];\n\t\t\tif (firstChar == '^')\n\t\t\t\treturn new StringValue(str.substring(1));\n\t\t\telse if(firstChar == '\\n' && str.length == 1)\n\t\t\t\treturn new StringValue('\\n');\n\n\t\t\t// Glue\n\t\t\tif (str == '<>') return new Glue();\n\n\t\t\t// Control commands (would looking up in a hash set be faster?)\n\t\t\tfor (let i = 0; i < JsonSerialisation._controlCommandNames.length; ++i) {\n\t\t\t\tlet cmdName = JsonSerialisation._controlCommandNames[i];\n\t\t\t\tif (str == cmdName) {\n\t\t\t\t\treturn new ControlCommand(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Native functions\n\t\t\tif (str == 'L^') str = '^';\n\t\t\tif( NativeFunctionCall.CallExistsWithName(str) )\n\t\t\t\treturn NativeFunctionCall.CallWithName(str);\n\n\t\t\t// Pop\n\t\t\tif (str == '->->')\n\t\t\t\treturn ControlCommand.PopTunnel();\n\t\t\telse if (str == '~ret')\n\t\t\t\treturn ControlCommand.PopFunction();\n\n\t\t\t// Void\n\t\t\tif (str == 'void')\n\t\t\t\treturn new Void ();\n\t\t}\n\n\t\tif (typeof token === 'object' && !Array.isArray(token)){\n\t\t\tlet obj: JObject = token;\n\t\t\tlet propValue;\n\n\t\t\t// Divert target value to path\n\t\t\tif (obj['^->']){\n\t\t\t\tpropValue = obj['^->'];\n\t\t\t\treturn new DivertTargetValue(new Path(propValue.toString()));\n\t\t\t}\n\n\t\t\t// VariablePointerValue\n\t\t\tif (obj['^var']) {\n\t\t\t\tpropValue = obj['^var'];\n\t\t\t\tlet varPtr = new VariablePointerValue(propValue.toString());\n\t\t\t\tif ('ci' in obj){\n\t\t\t\t\tpropValue = obj['ci'];\n\t\t\t\t\tvarPtr.contextIndex = parseInt(propValue);\n\t\t\t\t}\n\t\t\t\treturn varPtr;\n\t\t\t}\n\n\t\t\t// Divert\n\t\t\tlet isDivert = false;\n\t\t\tlet pushesToStack = false;\n\t\t\tlet divPushType = PushPopType.Function;\n\t\t\tlet external = false;\n\t\t\tif (propValue = obj['->']) {\n\t\t\t\tisDivert = true;\n\t\t\t}\n\t\t\telse if (propValue = obj['f()']) {\n\t\t\t\tisDivert = true;\n\t\t\t\tpushesToStack = true;\n\t\t\t\tdivPushType = PushPopType.Function;\n\t\t\t}\n\t\t\telse if (propValue = obj['->t->']) {\n\t\t\t\tisDivert = true;\n\t\t\t\tpushesToStack = true;\n\t\t\t\tdivPushType = PushPopType.Tunnel;\n\t\t\t}\n\t\t\telse if (propValue = obj['x()']) {\n\t\t\t\tisDivert = true;\n\t\t\t\texternal = true;\n\t\t\t\tpushesToStack = false;\n\t\t\t\tdivPushType = PushPopType.Function;\n\t\t\t}\n\n\t\t\tif (isDivert) {\n\t\t\t\tlet divert = new Divert();\n\t\t\t\tdivert.pushesToStack = pushesToStack;\n\t\t\t\tdivert.stackPushType = divPushType;\n\t\t\t\tdivert.isExternal = external;\n\n\t\t\t\tlet target = propValue.toString();\n\n\t\t\t\tif (propValue = obj['var'])\n\t\t\t\t\tdivert.variableDivertName = target;\n\t\t\t\telse\n\t\t\t\t\tdivert.targetPathString = target;\n\n\t\t\t\tdivert.isConditional = !!obj['c'];\n\n\t\t\t\tif (external) {\n\t\t\t\t\tif (propValue = obj['exArgs'])\n\t\t\t\t\t\tdivert.externalArgs = parseInt(propValue);\n\t\t\t\t}\n\n\t\t\t\treturn divert;\n\t\t\t}\n\n\t\t\t// Choice\n\t\t\tif (propValue = obj['*']) {\n\t\t\t\tlet choice = new ChoicePoint();\n\t\t\t\tchoice.pathStringOnChoice = propValue.toString();\n\n\t\t\t\tif (propValue = obj['flg'])\n\t\t\t\t\tchoice.flags = parseInt(propValue);\n\n\t\t\t\treturn choice;\n\t\t\t}\n\n\t\t\t// Variable reference\n\t\t\tif (propValue = obj['VAR?']) {\n\t\t\t\treturn new VariableReference(propValue.toString());\n\t\t\t} else if (propValue = obj['CNT?']) {\n\t\t\t\tlet readCountVarRef = new VariableReference();\n\t\t\t\treadCountVarRef.pathStringForCount = propValue.toString();\n\t\t\t\treturn readCountVarRef;\n\t\t\t}\n\n\t\t\t// Variable assignment\n\t\t\tlet isVarAss = false;\n\t\t\tlet isGlobalVar = false;\n\t\t\tif (propValue = obj['VAR=']) {\n\t\t\t\tisVarAss = true;\n\t\t\t\tisGlobalVar = true;\n\t\t\t} else if (propValue = obj['temp=']) {\n\t\t\t\tisVarAss = true;\n\t\t\t\tisGlobalVar = false;\n\t\t\t}\n\t\t\tif (isVarAss) {\n\t\t\t\tlet varName = propValue.toString();\n\t\t\t\tlet isNewDecl = !obj['re'];\n\t\t\t\tlet varAss = new VariableAssignment(varName, isNewDecl);\n\t\t\t\tvarAss.isGlobal = isGlobalVar;\n\t\t\t\treturn varAss;\n\t\t\t}\n\t\t\tif (obj['#'] !== undefined){\n\t\t\t\tpropValue = obj['#'];\n\t\t\t\treturn new Tag(propValue.toString());\n\t\t\t}\n\n\t\t\t// List value\n\t\t\tif (propValue = obj['list']) {\n\t\t\t\t// var listContent = (Dictionary<string, object>)propValue;\n\t\t\t\tlet listContent: JObject = propValue;\n\t\t\t\tlet rawList = new InkList();\n\t\t\t\tif (propValue = obj['origins']) {\n\t\t\t\t\t// var namesAsObjs = (List<object>)propValue;\n\t\t\t\t\tlet namesAsObjs = propValue as string[];\n\t\t\t\t\t// rawList.SetInitialOriginNames(namesAsObjs.Cast<string>().ToList());\n\t\t\t\t\trawList.SetInitialOriginNames(namesAsObjs);\n\t\t\t\t}\n\n\t\t\t\tfor (let key in listContent){\n\t\t\t\t\tif (listContent.hasOwnProperty(key)) {\n\t\t\t\t\t\tlet nameToVal = listContent[key];\n\t\t\t\t\t\tlet item = new InkListItem(key);\n\t\t\t\t\t\tlet val = parseInt(nameToVal);\n\t\t\t\t\t\trawList.Add(item, val);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new ListValue(rawList);\n\t\t\t}\n\n\t\t\tif (obj['originalChoicePath'] != null)\n\t\t\t\treturn this.JObjectToChoice(obj);\n\t\t}\n\n\t\t// Array is always a Runtime.Container\n\t\tif (Array.isArray(token)){\n\t\t\treturn this.JArrayToContainer(token);\n\t\t}\n\n\t\tif (token === null || token === undefined)\n\t\t\treturn null;\n\n\t\tthrow new Error('Failed to convert token to runtime object: ' + JSON.stringify(token));\n\t}\n\n\tpublic static RuntimeObjectToJToken(obj: InkObject){\n\t\t// var container = obj as Container;\n\t\tlet container = asOrNull(obj, Container);\n\t\tif (container) {\n\t\t\treturn this.ContainerToJArray(container);\n\t\t}\n\n\t\t// var divert = obj as Divert;\n\t\tlet divert = asOrNull(obj, Divert);\n\t\tif (divert) {\n\t\t\tlet divTypeKey = '->';\n\t\t\tif (divert.isExternal)\n\t\t\t\tdivTypeKey = 'x()';\n\t\t\telse if (divert.pushesToStack) {\n\t\t\t\tif (divert.stackPushType == PushPopType.Function)\n\t\t\t\t\tdivTypeKey = 'f()';\n\t\t\t\telse if (divert.stackPushType == PushPopType.Tunnel)\n\t\t\t\t\tdivTypeKey = '->t->';\n\t\t\t}\n\n\t\t\tlet targetStr;\n\t\t\tif (divert.hasVariableTarget)\n\t\t\t\ttargetStr = divert.variableDivertName;\n\t\t\telse\n\t\t\t\ttargetStr = divert.targetPathString;\n\n\t\t\tlet jObj: JObject = {};\n\t\t\tjObj[divTypeKey] = targetStr;\n\n\t\t\tif (divert.hasVariableTarget)\n\t\t\t\tjObj['var'] = true;\n\n\t\t\tif (divert.isConditional)\n\t\t\t\tjObj['c'] = true;\n\n\t\t\tif (divert.externalArgs > 0)\n\t\t\t\tjObj['exArgs'] = divert.externalArgs;\n\n\t\t\treturn jObj;\n\t\t}\n\n\t\t// var choicePoint = obj as ChoicePoint;\n\t\tlet choicePoint = asOrNull(obj, ChoicePoint);\n\t\tif (choicePoint) {\n\t\t\tlet jObj: JObject = {};\n\t\t\tjObj['*'] = choicePoint.pathStringOnChoice;\n\t\t\tjObj['flg'] = choicePoint.flags;\n\t\t\treturn jObj;\n\t\t}\n\n\t\t// var intVal = obj as IntValue;\n\t\tlet intVal = asOrNull(obj, IntValue);\n\t\tif (intVal)\n\t\t\treturn intVal.value;\n\n\t\t// var floatVal = obj as FloatValue;\n\t\tlet floatVal = asOrNull(obj, FloatValue);\n\t\tif (floatVal)\n\t\t\treturn floatVal.value;\n\n\t\t// var strVal = obj as StringValue;\n\t\tlet strVal = asOrNull(obj, StringValue);\n\t\tif (strVal) {\n\t\t\tif (strVal.isNewline)\n\t\t\t\treturn '\\n';\n\t\t\telse\n\t\t\t\treturn '^' + strVal.value;\n\t\t}\n\n\t\t// var listVal = obj as ListValue;\n\t\tlet listVal = asOrNull(obj, ListValue);\n\t\tif (listVal) {\n\t\t\treturn this.InkListToJObject(listVal);\n\t\t}\n\n\t\t// var divTargetVal = obj as DivertTargetValue;\n\t\tlet divTargetVal = asOrNull(obj, DivertTargetValue);\n\t\tif (divTargetVal) {\n\t\t\tlet divTargetJsonObj: JObject = {};\n\t\t\tif (divTargetVal.value === null) { return throwNullException('divTargetVal.value'); }\n\t\t\tdivTargetJsonObj['^->'] = divTargetVal.value.componentsString;\n\t\t\treturn divTargetJsonObj;\n\t\t}\n\n\t\t// var varPtrVal = obj as VariablePointerValue;\n\t\tlet varPtrVal = asOrNull(obj, VariablePointerValue);\n\t\tif (varPtrVal) {\n\t\t\tlet varPtrJsonObj: JObject = {};\n\t\t\tvarPtrJsonObj['^var'] = varPtrVal.value;\n\t\t\tvarPtrJsonObj['ci'] = varPtrVal.contextIndex;\n\t\t\treturn varPtrJsonObj;\n\t\t}\n\n\t\t// var glue = obj as Runtime.Glue;\n\t\tlet glue = asOrNull(obj, Glue);\n\t\tif (glue) return '<>';\n\n\t\t// var controlCmd = obj as ControlCommand;\n\t\tlet controlCmd = asOrNull(obj, ControlCommand);\n\t\tif (controlCmd) {\n\t\t\treturn JsonSerialisation._controlCommandNames[controlCmd.commandType];\n\t\t}\n\n\t\t// var nativeFunc = obj as Runtime.NativeFunctionCall;\n\t\tlet nativeFunc = asOrNull(obj, NativeFunctionCall);\n\t\tif (nativeFunc) {\n\t\t\tlet name = nativeFunc.name;\n\n\t\t\tif (name == '^') name = 'L^';\n\t\t\treturn name;\n\t\t}\n\n\t\t// Variable reference\n\t\t// var varRef = obj as VariableReference;\n\t\tlet varRef = asOrNull(obj, VariableReference);\n\t\tif (varRef) {\n\t\t\tlet jObj: JObject = {};\n\t\t\tlet readCountPath = varRef.pathStringForCount;\n\t\t\tif (readCountPath != null) {\n\t\t\t\tjObj['CNT?'] = readCountPath;\n\t\t\t} else {\n\t\t\t\tjObj['VAR?'] = varRef.name;\n\t\t\t}\n\n\t\t\treturn jObj;\n\t\t}\n\n\t\t// Variable assignment\n\t\t// var varAss = obj as VariableAssignment;\n\t\tlet varAss = asOrNull(obj, VariableAssignment);\n\t\tif (varAss) {\n\t\t\tlet key = varAss.isGlobal ? 'VAR=' : 'temp=';\n\t\t\tlet jObj: JObject = {};\n\t\t\tjObj[key] = varAss.variableName;\n\n\t\t\t// Reassignment?\n\t\t\tif (!varAss.isNewDeclaration)\n\t\t\t\tjObj['re'] = true;\n\n\t\t\treturn jObj;\n\t\t}\n\n\t\t// var voidObj = obj as Void;\n\t\tlet voidObj = asOrNull(obj, Void);\n\t\tif (voidObj)\n\t\t\treturn 'void';\n\n\t\t// var tag = obj as Tag;\n\t\tlet tag = asOrNull(obj, Tag);\n\t\tif (tag) {\n\t\t\tlet jObj: JObject = {};\n\t\t\tjObj['#'] = tag.text;\n\t\t\treturn jObj;\n\t\t}\n\n\t\t// Used when serialising save state only\n\t\t// var choice = obj as Choice;\n\t\tlet choice = asOrNull(obj, Choice);\n\t\tif (choice)\n\t\t\treturn this.ChoiceToJObject(choice);\n\n\t\tthrow new Error('Failed to convert runtime object to Json token: ' + obj);\n\t}\n\n\tpublic static ContainerToJArray(container: Container){\n\t\tlet jArray = this.ListToJArray(container.content);\n\n\t\tlet namedOnlyContent = container.namedOnlyContent;\n\t\tlet countFlags = container.countFlags;\n\t\tif (namedOnlyContent != null && namedOnlyContent.size > 0 || countFlags > 0 || container.name != null) {\n\n\t\t\tlet terminatingObj;\n\t\t\tif (namedOnlyContent != null) {\n\t\t\t\tterminatingObj = this.DictionaryRuntimeObjsToJObject(namedOnlyContent);\n\n\t\t\t\tfor (let key in terminatingObj){\n\t\t\t\t\tif (terminatingObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t// var subContainerJArray = namedContentObj.Value as JArray;\n\t\t\t\t\t\tlet subContainerJArray = terminatingObj[key];\n\t\t\t\t\t\tif (subContainerJArray != null) {\n\t\t\t\t\t\t\t// var attrJObj = subContainerJArray [subContainerJArray.Count - 1] as JObject;\n\t\t\t\t\t\t\tlet attrJObj = subContainerJArray[subContainerJArray.length - 1] as JObject;\n\t\t\t\t\t\t\tif (attrJObj != null) {\n\t\t\t\t\t\t\t\tdelete attrJObj['#n'];\n\t\t\t\t\t\t\t\tif (Object.keys(attrJObj).length == 0)\n\t\t\t\t\t\t\t\t\tsubContainerJArray[subContainerJArray.length - 1] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else\n\t\t\t\tterminatingObj = {};\n\n\t\t\tif( countFlags > 0 )\n\t\t\t\tterminatingObj['#f'] = countFlags;\n\n\t\t\tif( container.name != null )\n\t\t\t\tterminatingObj['#n'] = container.name;\n\n\t\t\tjArray.push(terminatingObj);\n\t\t}\n\n\t\t// Add null terminator to indicate that there's no dictionary\n\t\telse {\n\t\t\tjArray.push(null);\n\t\t}\n\n\t\treturn jArray;\n\t}\n\n\tpublic static JArrayToContainer(jArray: any[]){\n\t\tlet container = new Container();\n\t\tcontainer.content = this.JArrayToRuntimeObjList(jArray, true);\n\n\t\tlet terminatingObj = jArray[jArray.length - 1] as JObject;\n\t\tif (terminatingObj != null) {\n\n\t\t\tlet namedOnlyContent = new Map();\n\n\t\t\tfor (let key in terminatingObj){\n\t\t\t\tif (key == '#f') {\n\t\t\t\t\tcontainer.countFlags = parseInt(terminatingObj[key]);\n\t\t\t\t} else if (key == '#n') {\n\t\t\t\t\tcontainer.name = terminatingObj[key].toString();\n\t\t\t\t} else {\n\t\t\t\t\tlet namedContentItem = this.JTokenToRuntimeObject(terminatingObj[key]);\n\t\t\t\t\t// var namedSubContainer = namedContentItem as Container;\n\t\t\t\t\tlet namedSubContainer = asOrNull(namedContentItem, Container);\n\t\t\t\t\tif (namedSubContainer)\n\t\t\t\t\t\tnamedSubContainer.name = key;\n\t\t\t\t\tnamedOnlyContent.set(key, namedContentItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontainer.namedOnlyContent = namedOnlyContent;\n\t\t}\n\n\t\treturn container;\n\t}\n\n\tpublic static JObjectToChoice(jObj: JObject){\n\t\tlet choice = new Choice();\n\t\tchoice.text = jObj['text'].toString();\n\t\tchoice.index = parseInt(jObj['index']);\n\t\tchoice.sourcePath = jObj['originalChoicePath'].toString();\n\t\tchoice.originalThreadIndex = parseInt(jObj['originalThreadIndex']);\n\t\tchoice.pathStringOnChoice = jObj['targetPath'].toString();\n\t\treturn choice;\n\t}\n\n\tpublic static ChoiceToJObject(choice: Choice){\n\t\tlet jObj: JObject = {};\n\t\tjObj['text'] = choice.text;\n\t\tjObj['index'] = choice.index;\n\t\tjObj['originalChoicePath'] = choice.sourcePath;\n\t\tjObj['originalThreadIndex'] = choice.originalThreadIndex;\n\t\tjObj['targetPath'] = choice.pathStringOnChoice;\n\t\treturn jObj;\n\t}\n\n\tpublic static InkListToJObject(listVal: ListValue){\n\t\tlet rawList = listVal.value;\n\t\tif (rawList === null) { return throwNullException('rawList'); }\n\n\t\tlet dict: JObject = {};\n\n\t\tlet content: JObject = {};\n\n\t\tfor (let [key, val] of rawList) {\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\tcontent[item.toString()] = val;\n\t\t}\n\n\t\tdict['list'] = content;\n\n\t\tif (rawList.Count == 0 && rawList.originNames != null && rawList.originNames.length > 0) {\n\t\t\t// dict[\"origins\"] = rawList.originNames.Cast<object> ().ToList ();\n\t\t\tdict['origins'] = rawList.originNames;\n\t\t}\n\n\t\treturn dict;\n\t}\n\n\tpublic static ListDefinitionsToJToken(origin: ListDefinitionsOrigin){\n\t\tlet result: JObject = {};\n\n\t\tfor (let def of origin.lists) {\n\t\t\tlet listDefJson: JObject = {};\n\n\t\t\tfor (let [key, val] of def.items) {\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\n\t\t\t\tif (item.itemName === null) { return throwNullException('item.itemName'); }\n\t\t\t\tlistDefJson[item.itemName] = val;\n\t\t\t}\n\n\t\t\tresult[def.name] = listDefJson;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static JTokenToListDefinitions(obj: JObject){\n\t\t// var defsObj = (Dictionary<string, object>)obj;\n\t\tlet defsObj = obj;\n\n\t\tlet allDefs: ListDefinition[] = [];\n\n\t\tfor (let key in defsObj){\n\t\t\tif (defsObj.hasOwnProperty(key)) {\n\t\t\t\tlet name = key.toString();\n\t\t\t\t// var listDefJson = (Dictionary<string, object>)kv.Value;\n\t\t\t\tlet listDefJson: JObject = defsObj[key];\n\n\t\t\t\t// Cast (string, object) to (string, int) for items\n\t\t\t\tlet items: Map<string, number> = new Map();\n\n\t\t\t\tfor (let nameValueKey in listDefJson){\n\t\t\t\t\tif (defsObj.hasOwnProperty(key)) {\n\t\t\t\t\t\tlet nameValue = listDefJson[nameValueKey];\n\t\t\t\t\t\titems.set(nameValueKey, parseInt(nameValue));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet def = new ListDefinition(name, items);\n\t\t\t\tallDefs.push(def);\n\t\t\t}\n\t\t}\n\n\t\treturn new ListDefinitionsOrigin(allDefs);\n\t}\n\n\tprivate static _controlCommandNames = (() => {\n\t\tlet _controlCommandNames: string[] = [];\n\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalStart] = 'ev';\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalOutput] = 'out';\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalEnd] = '/ev';\n\t\t_controlCommandNames[ControlCommand.CommandType.Duplicate] = 'du';\n\t\t_controlCommandNames[ControlCommand.CommandType.PopEvaluatedValue] = 'pop';\n\t\t_controlCommandNames[ControlCommand.CommandType.PopFunction] = '~ret';\n\t\t_controlCommandNames[ControlCommand.CommandType.PopTunnel] = '->->';\n\t\t_controlCommandNames[ControlCommand.CommandType.BeginString] = 'str';\n\t\t_controlCommandNames[ControlCommand.CommandType.EndString] = '/str';\n\t\t_controlCommandNames[ControlCommand.CommandType.NoOp] = 'nop';\n\t\t_controlCommandNames[ControlCommand.CommandType.ChoiceCount] = 'choiceCnt';\n\t\t_controlCommandNames[ControlCommand.CommandType.Turns] = 'turn';\n\t\t_controlCommandNames[ControlCommand.CommandType.TurnsSince] = 'turns';\n\t\t_controlCommandNames[ControlCommand.CommandType.ReadCount] = 'readc';\n\t\t_controlCommandNames[ControlCommand.CommandType.Random] = 'rnd';\n\t\t_controlCommandNames[ControlCommand.CommandType.SeedRandom] = 'srnd';\n\t\t_controlCommandNames[ControlCommand.CommandType.VisitIndex] = 'visit';\n\t\t_controlCommandNames[ControlCommand.CommandType.SequenceShuffleIndex] = 'seq';\n\t\t_controlCommandNames[ControlCommand.CommandType.StartThread] = 'thread';\n\t\t_controlCommandNames[ControlCommand.CommandType.Done] = 'done';\n\t\t_controlCommandNames[ControlCommand.CommandType.End] = 'end';\n\t\t_controlCommandNames[ControlCommand.CommandType.ListFromInt] = 'listInt';\n\t\t_controlCommandNames[ControlCommand.CommandType.ListRange] = 'range';\n\t\t_controlCommandNames[ControlCommand.CommandType.ListRandom] = 'lrnd';\n\n\t\tfor (let i = 0; i < ControlCommand.CommandType.TOTAL_VALUES; ++i) {\n\t\t\tif (_controlCommandNames[i] == null)\n\t\t\t\tthrow new Error('Control command not accounted for in serialisation');\n\t\t}\n\n\t\treturn _controlCommandNames;\n\t})();\n}\n","import {PushPopType} from './PushPop';\nimport {Path} from './Path';\nimport {Story} from './Story';\nimport {StoryException} from './StoryException';\nimport {JsonSerialisation} from './JsonSerialisation';\nimport {ListValue} from './Value';\nimport {StringBuilder} from './StringBuilder';\nimport {Pointer} from './Pointer';\nimport {InkObject} from './Object';\nimport {Container} from './Container';\nimport {Debug} from './Debug';\nimport {tryGetValueFromMap} from './TryGetResult';\nimport {throwNullException} from './NullException';\n\nexport class CallStack{\n\tget elements(){\n\t\treturn this.callStack;\n\t}\n\n\tget depth(){\n\t\treturn this.elements.length;\n\t}\n\n\tget currentElement(){\n\t\tlet thread = this._threads[this._threads.length - 1];\n\t\tlet cs = thread.callstack;\n\t\treturn cs[cs.length - 1];\n\t}\n\n\tget currentElementIndex(){\n\t\treturn this.callStack.length - 1;\n\t}\n\n\tget currentThread(): CallStack.Thread {\n\t\treturn this._threads[this._threads.length - 1];\n\t}\n\tset currentThread(value: CallStack.Thread){\n\t\tDebug.Assert(this._threads.length == 1, \"Shouldn't be directly setting the current thread when we have a stack of them\");\n\n\t\tthis._threads.length = 0;\n\t\tthis._threads.push(value);\n\t}\n\n\tget canPop(){\n\t\treturn this.callStack.length > 1;\n\t}\n\n\tconstructor(storyContext: Story)\n\tconstructor(toCopy: CallStack)\n\tconstructor(){\n\t\tif (arguments[0] instanceof Story) {\n\t\t\tlet storyContext = arguments[0] as Story;\n\n\t\t\tthis._startOfRoot = Pointer.StartOf(storyContext.rootContentContainer);\n\t\t\tthis.Reset();\n\t\t} else {\n\t\t\tlet toCopy = arguments[0] as CallStack;\n\n\t\t\tthis._threads = [];\n\t\t\tfor (let otherThread of toCopy._threads) {\n\t\t\t\tthis._threads.push(otherThread.Copy());\n\t\t\t}\n\t\t\tthis._startOfRoot = toCopy._startOfRoot;\n\t\t}\n\t}\n\n\tpublic Reset() {\n\t\tthis._threads = [];\n\t\tthis._threads.push(new CallStack.Thread());\n\n\t\tthis._threads[0].callstack.push(new CallStack.Element(PushPopType.Tunnel, this._startOfRoot));\n\t}\n\n\tpublic SetJsonToken(jObject: any, storyContext: Story){\n\t\tthis._threads.length = 0;\n\n\t\t// TODO: (List<object>) jObject [\"threads\"];\n\t\tlet jThreads: any[] = jObject['threads'];\n\n\t\tfor (let jThreadTok of jThreads) {\n\t\t\t// TODO: var jThreadObj = (Dictionary<string, object>)jThreadTok;\n\t\t\tlet jThreadObj = jThreadTok;\n\t\t\tlet thread = new CallStack.Thread(jThreadObj, storyContext);\n\t\t\tthis._threads.push(thread);\n\t\t}\n\n\t\t// TODO: (int)jObject [\"threadCounter\"];\n\t\tthis._threadCounter = parseInt(jObject['threadCounter']);\n\t\tthis._startOfRoot = Pointer.StartOf(storyContext.rootContentContainer);\n\t}\n\tpublic GetJsonToken(){\n\t\tlet jObject: any = {};\n\n\t\tlet jThreads: any[] = [];\n\n\t\tfor (let thread of this._threads) {\n\t\t\tjThreads.push(thread.jsonToken);\n\t\t}\n\n\t\tjObject['threads'] = jThreads;\n\t\tjObject['threadCounter'] = this._threadCounter;\n\n\t\treturn jObject;\n\t}\n\n\tpublic PushThread(){\n\t\tlet newThread = this.currentThread.Copy();\n\t\tthis._threadCounter++;\n\t\tnewThread.threadIndex = this._threadCounter;\n\t\tthis._threads.push(newThread);\n\t}\n\n\tpublic ForkThread(){\n\t\tlet forkedThread = this.currentThread.Copy();\n\t\tthis._threadCounter++;\n\t\tforkedThread.threadIndex = this._threadCounter;\n\t\treturn forkedThread;\n\t}\n\n\tpublic PopThread(){\n\t\tif (this.canPopThread) {\n\t\t\tthis._threads.splice(this._threads.indexOf(this.currentThread), 1);// should be equivalent to a pop()\n\t\t} else {\n\t\t\tthrow new Error(\"Can't pop thread\");\n\t\t}\n\t}\n\n\tget canPopThread(){\n\t\treturn this._threads.length > 1 && !this.elementIsEvaluateFromGame;\n\t}\n\n\tget elementIsEvaluateFromGame(){\n\t\treturn this.currentElement.type == PushPopType.FunctionEvaluationFromGame;\n\t}\n\n\tpublic Push(type: PushPopType, externalEvaluationStackHeight: number = 0, outputStreamLengthWithPushed: number = 0){\n\t\tlet element = new CallStack.Element(\n\t\t\ttype,\n\t\t\tthis.currentElement.currentPointer,\n\t\t\tfalse,\n\t\t);\n\n\t\telement.evaluationStackHeightWhenPushed = externalEvaluationStackHeight;\n\t\telement.functionStartInOutputStream = outputStreamLengthWithPushed;\n\n\t\tthis.callStack.push (element);\n\t}\n\n\tpublic CanPop(type: PushPopType | null = null){\n\t\tif (!this.canPop)\n\t\t\treturn false;\n\n\t\tif (type == null)\n\t\t\treturn true;\n\n\t\treturn this.currentElement.type == type;\n\t}\n\n\tpublic Pop(type: PushPopType | null = null){\n\t\tif (this.CanPop(type)) {\n\t\t\tthis.callStack.pop();\n\t\t\treturn;\n\t\t} else {\n\t\t\tthrow new Error('Mismatched push/pop in Callstack');\n\t\t}\n\t}\n\n\tpublic GetTemporaryVariableWithName(name: string | null, contextIndex: number = -1){\n\n\t\tif (contextIndex == -1)\n\t\t\tcontextIndex = this.currentElementIndex + 1;\n\n\t\tlet contextElement = this.callStack[contextIndex - 1];\n\n\t\tlet varValue = tryGetValueFromMap(contextElement.temporaryVariables, name, null);\n\t\tif (varValue.exists) {\n\t\t\treturn varValue.result;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic SetTemporaryVariable(name: string, value: any, declareNew: boolean, contextIndex: number = -1){\n\n\t\tif (contextIndex == -1)\n\t\t\tcontextIndex = this.currentElementIndex + 1;\n\n\t\tlet contextElement = this.callStack[contextIndex - 1];\n\n\t\tif (!declareNew && !contextElement.temporaryVariables.get(name)) {\n\t\t\tthrow new StoryException('Could not find temporary variable to set: ' + name);\n\t\t}\n\n\t\tlet oldValue = tryGetValueFromMap(contextElement.temporaryVariables, name, null);\n\t\tif (oldValue.exists)\n\t\t\tListValue.RetainListOriginsForAssignment(oldValue.result, value);\n\n\t\tcontextElement.temporaryVariables.set(name, value);\n\t}\n\n\tpublic ContextForVariableNamed(name: string){\n\n\t\tif (this.currentElement.temporaryVariables.get(name)) {\n\t\t\treturn this.currentElementIndex + 1;\n\t\t}\n\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tpublic ThreadWithIndex(index: number){\n\t\tlet filtered = this._threads.filter((t) => {\n\t\t\tif (t.threadIndex == index) return t;\n\t\t});\n\n\t\treturn filtered[0];\n\t}\n\n\tget callStack(){\n\t\treturn this.currentThread.callstack;\n\t}\n\n\tget callStackTrace(){\n\t\tlet sb = new StringBuilder();\n\n\t\tfor (let t = 0; t < this._threads.length; t++) {\n\t\t\tlet thread = this._threads[t];\n\t\t\tlet isCurrent = (t == this._threads.length - 1);\n\t\t\tsb.AppendFormat('=== THREAD {0}/{1} {2}===\\n', (t+1), this._threads.length, (isCurrent ? '(current) ' : ''));\n\n\t\t\tfor (let i = 0; i < thread.callstack.length; i++) {\n\n\t\t\t\tif (thread.callstack[i].type == PushPopType.Function)\n\t\t\t\t\tsb.Append('  [FUNCTION] ');\n\t\t\t\telse\n\t\t\t\t\tsb.Append('  [TUNNEL] ');\n\n\t\t\t\tlet pointer = thread.callstack[i].currentPointer;\n\t\t\t\tif(!pointer.isNull) {\n\t\t\t\t\tsb.Append('<SOMEWHERE IN ');\n\t\t\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\n\t\t\t\t\tsb.Append(pointer.container.path.toString());\n\t\t\t\t\tsb.AppendLine('>');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n\n\tpublic _threads!: CallStack.Thread[]; // Banged because it's initialized in Reset().\n\tpublic _threadCounter: number = 0;\n\tpublic _startOfRoot: Pointer = Pointer.Null;\n}\n\nexport namespace CallStack {\n\texport class Element{\n\t\tpublic currentPointer: Pointer;\n\t\tpublic inExpressionEvaluation: boolean;\n\t\tpublic temporaryVariables: Map<string, InkObject>;\n\t\tpublic type: PushPopType;\n\n\t\tpublic evaluationStackHeightWhenPushed: number = 0;\n\t\tpublic functionStartInOutputStream: number = 0;\n\n\t\tconstructor(type: PushPopType, pointer: Pointer, inExpressionEvaluation: boolean = false){\n\t\t\tthis.currentPointer = pointer.copy();\n\t\t\tthis.inExpressionEvaluation = inExpressionEvaluation;\n\t\t\tthis.temporaryVariables = new Map();\n\t\t\tthis.type = type;\n\t\t}\n\n\t\tpublic Copy(){\n\t\t\tlet copy = new Element(this.type, this.currentPointer, this.inExpressionEvaluation);\n\t\t\tcopy.temporaryVariables = new Map(this.temporaryVariables);\n\t\t\tcopy.evaluationStackHeightWhenPushed = this.evaluationStackHeightWhenPushed;\n\t\t\tcopy.functionStartInOutputStream = this.functionStartInOutputStream;\n\t\t\treturn copy;\n\t\t}\n\t}\n\n\texport class Thread{\n\t\tpublic callstack: Element[];\n\t\tpublic threadIndex: number = 0;\n\t\tpublic previousPointer: Pointer = Pointer.Null;\n\n\t\tconstructor();\n\t\tconstructor(jThreadObj: any, storyContext: Story);\n\t\tconstructor(){\n\t\t\tthis.callstack = [];\n\n\t\t\tif (arguments[0] && arguments[1]){\n\t\t\t\tlet jThreadObj = arguments[0];\n\t\t\t\tlet storyContext = arguments[1];\n\n\t\t\t\t// TODO: (int) jThreadObj['threadIndex'] can raise;\n\t\t\t\tthis.threadIndex = parseInt(jThreadObj['threadIndex']);\n\n\t\t\t\tlet jThreadCallstack = jThreadObj['callstack'];\n\n\t\t\t\tfor (let jElTok of jThreadCallstack) {\n\t\t\t\t\tlet jElementObj = jElTok;\n\n\t\t\t\t\t// TODO: (int) jElementObj['type'] can raise;\n\t\t\t\t\tlet pushPopType: PushPopType = parseInt(jElementObj['type']);\n\n\t\t\t\t\tlet pointer = Pointer.Null;\n\n\t\t\t\t\tlet currentContainerPathStr: string;\n\t\t\t\t\t// TODO: jElementObj.TryGetValue (\"cPath\", out currentContainerPathStrToken);\n\t\t\t\t\tlet currentContainerPathStrToken = jElementObj['cPath'];\n\t\t\t\t\tif (typeof currentContainerPathStrToken !== 'undefined') {\n\t\t\t\t\t\tcurrentContainerPathStr = currentContainerPathStrToken.toString();\n\n\t\t\t\t\t\tlet threadPointerResult = storyContext.ContentAtPath(new Path(currentContainerPathStr));\n\t\t\t\t\t\tpointer.container = threadPointerResult.container;\n\t\t\t\t\t\tpointer.index = parseInt(jElementObj['idx']);\n\n\t\t\t\t\t\tif (threadPointerResult.obj == null)\n\t\t\t\t\t\t\tthrow new Error('When loading state, internal story location couldn\\'t be found: ' + currentContainerPathStr + '. Has the story changed since this save data was created?');\n\t\t\t\t\t\telse if (threadPointerResult.approximate) {\n\t\t\t\t\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\n\t\t\t\t\t\t\tstoryContext.Warning(\"When loading state, exact internal story location couldn't be found: '\" + currentContainerPathStr + \"', so it was approximated to '\"+pointer.container.path.toString()+\"' to recover. Has the story changed since this save data was created?\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet inExpressionEvaluation = !!jElementObj['exp'];\n\n\t\t\t\t\tlet el = new Element(pushPopType, pointer, inExpressionEvaluation);\n\n\t\t\t\t\tlet jObjTemps = jElementObj['temp'];\n\t\t\t\t\tel.temporaryVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(jObjTemps);\n\n\t\t\t\t\tthis.callstack.push(el);\n\t\t\t\t}\n\n\t\t\t\tlet prevContentObjPath = jThreadObj['previousContentObject'];\n\t\t\t\tif(typeof prevContentObjPath !== 'undefined') {\n\t\t\t\t\tlet prevPath = new Path(prevContentObjPath.toString());\n\t\t\t\t\tthis.previousPointer = storyContext.PointerAtPath(prevPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic Copy(){\n\t\t\tlet copy = new Thread();\n\t\t\tcopy.threadIndex = this.threadIndex;\n\t\t\tfor (let e of this.callstack) {\n\t\t\t\tcopy.callstack.push(e.Copy());\n\t\t\t}\n\t\t\tcopy.previousPointer = this.previousPointer.copy();\n\t\t\treturn copy;\n\t\t}\n\n\t\tget jsonToken(){\n\t\t\tlet threadJObj: any = {};\n\n\t\t\tlet jThreadCallstack: any[] = [];\n\t\t\tfor (let el of this.callstack) {\n\t\t\t\tlet jObj: any = {};\n\t\t\t\tif (!el.currentPointer.isNull) {\n\t\t\t\t\tif (el.currentPointer.container === null) { return throwNullException('el.currentPointer.container'); }\n\t\t\t\t\tjObj['cPath'] = el.currentPointer.container.path.componentsString;\n\t\t\t\t\tjObj['idx'] = el.currentPointer.index;\n\t\t\t\t}\n\t\t\t\tjObj['exp'] = el.inExpressionEvaluation;\n\t\t\t\tjObj['type'] = el.type;\n\t\t\t\tjObj['temp'] = JsonSerialisation.DictionaryRuntimeObjsToJObject(el.temporaryVariables);\n\t\t\t\tjThreadCallstack.push(jObj);\n\t\t\t}\n\n\t\t\tthreadJObj['callstack'] = jThreadCallstack;\n\t\t\tthreadJObj['threadIndex'] = this.threadIndex;\n\n\t\t\tif (!this.previousPointer.isNull) {\n\t\t\t\tlet resolvedPointer = this.previousPointer.Resolve();\n\t\t\t\tif (resolvedPointer === null) { return throwNullException('this.previousPointer.Resolve()'); }\n\t\t\t\tthreadJObj['previousContentObject'] = resolvedPointer.path.toString();\n\t\t\t}\n\n\t\t\treturn threadJObj;\n\t\t}\n\t}\n}\n","import {AbstractValue, Value, VariablePointerValue, ListValue} from './Value';\nimport {VariableAssignment} from './VariableAssignment';\nimport {InkObject} from './Object';\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\nimport {StoryException} from './StoryException';\nimport {JsonSerialisation} from './JsonSerialisation';\nimport {asOrThrows, asOrNull} from './TypeAssertion';\nimport {tryGetValueFromMap} from './TryGetResult';\nimport {throwNullException} from './NullException';\nimport {CallStack} from './CallStack';\n\nexport class VariablesState{\n\t// The way variableChangedEvent is a bit different than the reference implementation.\n\t// Originally it uses the C# += operator to add delegates, but in js we need to maintain\n\t// an actual collection of delegates (ie. callbacks) to register a new one, there is a\n\t// special ObserveVariableChange method below.\n\tpublic variableChangedEventCallbacks: Array<(variableName: string, newValue: InkObject) => void> = [];\n\tpublic variableChangedEvent(variableName: string, newValue: InkObject): void {\n\t\tfor (let callback of this.variableChangedEventCallbacks) {\n\t\t\tcallback(variableName, newValue);\n\t\t}\n\t}\n\n\tget batchObservingVariableChanges(){\n\t\treturn this._batchObservingVariableChanges;\n\t}\n\tset batchObservingVariableChanges(value: boolean){\n\t\tthis._batchObservingVariableChanges = value;\n\t\tif (value) {\n\t\t\tthis._changedVariables = new Set();\n\t\t}\n\n\t\telse {\n\t\t\tif (this._changedVariables != null) {\n\t\t\t\tfor (let variableName of this._changedVariables) {\n\t\t\t\t\tlet currentValue = this._globalVariables.get(variableName);\n\t\t\t\t\tif (!currentValue) {\n\t\t\t\t\t\tthrowNullException('currentValue');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.variableChangedEvent(variableName, currentValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget callStack(){\n\t\treturn this._callStack;\n\t}\n\tset callStack(callStack){\n\t\tthis._callStack = callStack;\n\t}\n\n\tprivate _batchObservingVariableChanges: boolean = false;\n\n\t// the original code uses a magic getter and setter for global variables,\n\t// allowing things like variableState['varname]. This is not quite possible\n\t// in js without a Proxy, so it is replaced with this $ function.\n\tpublic $(variableName: string, value: InkObject){\n\t\tif (typeof value === 'undefined'){\n\t\t\tlet varContents = this._globalVariables.get(variableName);\n\n\t\t\tif ( typeof varContents === 'undefined' ) {\n\t\t\t\tvarContents = this._defaultGlobalVariables.get(variableName);\n\t\t\t}\n\n\t\t\tif ( typeof varContents !== 'undefined' )\n\t\t\t\treturn (varContents as AbstractValue).valueObject;\n\t\t\telse\n\t\t\t\treturn null;\n\t\t}\n\t\telse{\n\t\t\tif (typeof this._defaultGlobalVariables.get(variableName) === 'undefined')\n\t\t\t\tthrow new StoryException('Cannot assign to a variable ('+variableName+\") that hasn't been declared in the story\");\n\n\t\t\tlet val = Value.Create(value);\n\t\t\tif (val == null) {\n\t\t\t\tif (value == null) {\n\t\t\t\t\tthrow new StoryException('Cannot pass null to VariableState');\n\t\t\t\t} else {\n\t\t\t\t\tthrow new StoryException('Invalid value passed to VariableState: '+value.toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.SetGlobal(variableName, val);\n\t\t}\n\t}\n\n\tconstructor(callStack: CallStack, listDefsOrigin: ListDefinitionsOrigin | null){\n\t\tthis._globalVariables = new Map();\n\t\tthis._callStack = callStack;\n\t\tthis._listDefsOrigin = listDefsOrigin;\n\n\t\t// if es6 proxies are available, use them.\n\t\ttry{\n\t\t\t// the proxy is used to allow direct manipulation of global variables.\n\t\t\t// It first tries to access the objects own property, and if none is\n\t\t\t// found it delegates the call to the $ method, defined below\n\t\t\tlet p = new Proxy(this, {\n\t\t\t\tget(target: any, name){\n\t\t\t\t\treturn (name in target) ? target[name] : target.$(name);\n\t\t\t\t},\n\t\t\t\tset(target: any, name, value){\n\t\t\t\t\tif (name in target) target[name] = value;\n\t\t\t\t\telse target.$(name, value);\n\t\t\t\t\treturn true; // returning a falsy value make the trap fail\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn p;\n\t\t}\n\t\tcatch(e){\n\t\t\t// thr proxy object is not available in this context. we should warn the\n\t\t\t// dev but writting to the console feels a bit intrusive.\n\t\t\t// console.log(\"ES6 Proxy not available - direct manipulation of global variables can't work, use $() instead.\");\n\t\t}\n\t}\n\n\tpublic CopyFrom(toCopy: VariablesState){\n\t\tthis._globalVariables = new Map(toCopy._globalVariables);\n\t\tthis._defaultGlobalVariables = new Map(toCopy._defaultGlobalVariables);\n\n\t\tthis.variableChangedEvent = toCopy.variableChangedEvent;\n\t\tthis.variableChangedEventCallbacks = toCopy.variableChangedEventCallbacks; // inkjs specificity that has to be copied along the rest of the structure\n\n\t\tif (toCopy.batchObservingVariableChanges != this.batchObservingVariableChanges) {\n\n\t\t\tif (toCopy.batchObservingVariableChanges) {\n\t\t\t\tthis._batchObservingVariableChanges = true;\n\t\t\t\tif (toCopy._changedVariables === null) { return throwNullException('toCopy._changedVariables'); }\n\t\t\t\tthis._changedVariables = new Set(toCopy._changedVariables);\n\t\t\t} else {\n\t\t\t\tthis._batchObservingVariableChanges = false;\n\t\t\t\tthis._changedVariables = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tget jsonToken(){\n\t\treturn JsonSerialisation.DictionaryRuntimeObjsToJObject(this._globalVariables);\n\t}\n\tset jsonToken(value){\n\t\tthis._globalVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(value);\n\t}\n\n\tpublic TryGetDefaultVariableValue(name: string | null): InkObject | null\n\t{\n\t\tlet val = tryGetValueFromMap(this._defaultGlobalVariables, name, null);\n\t\treturn val.exists ? val.result : null;\n\t}\n\n\tpublic GlobalVariableExistsWithName(name: string){\n\t\treturn this._globalVariables.has(name);\n\t}\n\n\tpublic GetVariableWithName(name: string | null, contextIndex: number = -1): InkObject | null {\n\t\tlet varValue = this.GetRawVariableWithName(name, contextIndex);\n\n\t\t// var varPointer = varValue as VariablePointerValue;\n\t\tlet varPointer = asOrNull(varValue, VariablePointerValue);\n\t\tif (varPointer !== null) {\n\t\t\tvarValue = this.ValueAtVariablePointer(varPointer);\n\t\t}\n\n\t\treturn varValue;\n\t}\n\n\tpublic GetRawVariableWithName(name: string | null, contextIndex: number) {\n\t\tlet varValue: InkObject | null = null;\n\n\t\tif (contextIndex == 0 || contextIndex == -1) {\n\t\t\t// this is a conditional assignment\n\t\t\tlet variableValue = tryGetValueFromMap(this._globalVariables, name, null);\n\t\t\tif (variableValue.exists)\n\t\t\t\treturn variableValue.result;\n\n\t\t\tif (this._listDefsOrigin === null) return throwNullException('VariablesState._listDefsOrigin');\n\t\t\tlet listItemValue = this._listDefsOrigin.FindSingleItemListWithName(name);\n\t\t\tif (listItemValue)\n\t\t\t\treturn listItemValue;\n\t\t}\n\n\t\tvarValue = this._callStack.GetTemporaryVariableWithName(name, contextIndex);\n\n\t\treturn varValue;\n\t}\n\n\tpublic ValueAtVariablePointer(pointer: VariablePointerValue){\n\t\t return this.GetVariableWithName(pointer.variableName, pointer.contextIndex);\n\t}\n\n\tpublic Assign(varAss: VariableAssignment, value: InkObject){\n\t\tlet name = varAss.variableName;\n\t\tif (name === null) { return throwNullException('name'); }\n\t\tlet contextIndex = -1;\n\n\t\tlet setGlobal = false;\n\t\tif (varAss.isNewDeclaration) {\n\t\t\tsetGlobal = varAss.isGlobal;\n\t\t} else {\n\t\t\tsetGlobal = this._globalVariables.has(name);\n\t\t}\n\n\t\tif (varAss.isNewDeclaration) {\n\t\t\t// var varPointer = value as VariablePointerValue;\n\t\t\tlet varPointer = asOrNull(value, VariablePointerValue);\n\t\t\tif (varPointer !== null) {\n\t\t\t\tlet fullyResolvedVariablePointer = this.ResolveVariablePointer(varPointer);\n\t\t\t\tvalue = fullyResolvedVariablePointer;\n\t\t\t}\n\n\t\t}\n\n\t\telse {\n\n\t\t\tlet existingPointer = null;\n\t\t\tdo {\n\t\t\t\t// existingPointer = GetRawVariableWithName (name, contextIndex) as VariablePointerValue;\n\t\t\t\texistingPointer = asOrNull(this.GetRawVariableWithName(name, contextIndex), VariablePointerValue);\n\t\t\t\tif (existingPointer != null) {\n\t\t\t\t\tname = existingPointer.variableName;\n\t\t\t\t\tcontextIndex = existingPointer.contextIndex;\n\t\t\t\t\tsetGlobal = (contextIndex == 0);\n\t\t\t\t}\n\t\t\t} while(existingPointer != null);\n\t\t}\n\n\t\tif (setGlobal) {\n\t\t\tthis.SetGlobal(name, value);\n\t\t} else {\n\t\t\tthis._callStack.SetTemporaryVariable(name, value, varAss.isNewDeclaration, contextIndex);\n\t\t}\n\t}\n\n\tpublic SnapshotDefaultGlobals(){\n\t\tthis._defaultGlobalVariables = new Map(this._globalVariables);\n\t}\n\n\tpublic RetainListOriginsForAssignment(oldValue: InkObject, newValue: InkObject){\n\t\tlet oldList = asOrThrows(oldValue, ListValue);\n\t\tlet newList = asOrThrows(newValue, ListValue);\n\n\t\tif (oldList.value && newList.value && newList.value.Count == 0) {\n\t\t\tnewList.value.SetInitialOriginNames(oldList.value.originNames);\n\t\t}\n\t}\n\n\tpublic SetGlobal(variableName: string | null, value: InkObject){\n\t\tlet oldValue = tryGetValueFromMap(this._globalVariables, variableName, null);\n\n\t\tif (oldValue.exists) {\n\t\t\tListValue.RetainListOriginsForAssignment(oldValue.result!, value);\n\t\t}\n\n\t\tif (variableName === null) { return throwNullException('variableName'); }\n\t\tthis._globalVariables.set(variableName, value);\n\n\t\t// TODO: Not sure !== is equivalent to !value.Equals(oldValue)\n\t\tif (this.variableChangedEvent != null && value !== oldValue.result) {\n\n\t\t\tif (this.batchObservingVariableChanges) {\n\t\t\t\tif (this._changedVariables === null) { return throwNullException('this._changedVariables'); }\n\t\t\t\tthis._changedVariables.add(variableName);\n\t\t\t} else {\n\t\t\t\tthis.variableChangedEvent(variableName, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic ResolveVariablePointer(varPointer: VariablePointerValue){\n\t\tlet contextIndex = varPointer.contextIndex;\n\n\t\tif( contextIndex == -1 )\n\t\t\tcontextIndex = this.GetContextIndexOfVariableNamed(varPointer.variableName);\n\n\t\tlet valueOfVariablePointedTo = this.GetRawVariableWithName(varPointer.variableName, contextIndex);\n\n\t\t// var doubleRedirectionPointer = valueOfVariablePointedTo as VariablePointerValue;\n\t\tlet doubleRedirectionPointer = asOrNull(valueOfVariablePointedTo, VariablePointerValue);\n\t\tif (doubleRedirectionPointer != null) {\n\t\t\treturn doubleRedirectionPointer;\n\t\t}\n\n\t\telse {\n\t\t\treturn new VariablePointerValue(varPointer.variableName, contextIndex);\n\t\t}\n\t}\n\n\tpublic GetContextIndexOfVariableNamed(varName: string){\n\t\tif (this._globalVariables.get(varName))\n\t\t\treturn 0;\n\n\t\treturn this._callStack.currentElementIndex;\n\t}\n\n\t\t/**\n\t\t * This function is specific to the js version of ink. It allows to register a\n\t\t * callback that will be called when a variable changes. The original code uses\n\t\t * `state.variableChangedEvent += callback` instead.\n\t\t * @param {function} callback\n\t\t */\n\tpublic ObserveVariableChange(callback: (variableName: string, newValue: InkObject) => void){\n\t\tthis.variableChangedEventCallbacks.push(callback);\n\t}\n\n\tprivate _globalVariables: Map<string, InkObject>;\n\tprivate _defaultGlobalVariables: Map<string, InkObject> = new Map();\n\n\tprivate _callStack: CallStack;\n\tprivate _changedVariables: Set<string> | null = new Set();\n\tprivate _listDefsOrigin: ListDefinitionsOrigin | null;\n}\n","// Taken from https://gist.github.com/blixt/f17b47c62508be59987b\n// Ink uses a seedable PRNG of which there is none in native javascript.\nexport class PRNG{\n\n\tprivate seed: number;\n\n\tconstructor(seed: number){\n\t\tthis.seed = seed % 2147483647;\n\t\tif (this.seed <= 0) this.seed += 2147483646;\n\t}\n\tpublic next(): number{\n\t\treturn this.seed = this.seed * 16807 % 2147483647;\n\t}\n\tpublic nextFloat(): number{\n\t\treturn (this.next() - 1) / 2147483646;\n\t}\n}\n","import {CallStack} from './CallStack';\nimport {VariablesState} from './VariablesState';\nimport {ValueType, Value, StringValue, ListValue} from './Value';\nimport {PushPopType} from './PushPop';\nimport {Tag} from './Tag';\nimport {Glue} from './Glue';\nimport {Path} from './Path';\nimport {ControlCommand} from './ControlCommand';\nimport {StoryException} from './StoryException';\nimport {StringBuilder} from './StringBuilder';\nimport {JsonSerialisation} from './JsonSerialisation';\nimport {PRNG} from './PRNG';\nimport {Void} from './Void';\nimport {Pointer} from './Pointer';\nimport {tryGetValueFromMap} from './TryGetResult';\nimport {Choice} from './Choice';\nimport {asOrNull, asOrThrows, nullIfUndefined} from './TypeAssertion';\nimport {JObject} from './JObject';\nimport {Debug} from './Debug';\nimport {Container} from './Container';\nimport {InkObject} from './Object';\nimport { throwNullException } from './NullException';\nimport { Story } from './Story';\n\nexport class StoryState{\n\n\tpublic readonly kInkSaveStateVersion = 8;\n\tpublic readonly kMinCompatibleLoadVersion = 8;\n\n\tpublic ToJson(indented: boolean = false){\n\t\treturn JSON.stringify(this.jsonToken, null, (indented) ? 2 : 0);\n\t}\n\tpublic toJson(indented: boolean = false){\n\t\treturn this.ToJson(indented);\n\t}\n\n\tpublic LoadJson(json: string){\n\t\tthis.jsonToken = JSON.parse(json);\n\t}\n\n\tpublic VisitCountAtPathString(pathString: string){\n\t\tlet visitCountOut = tryGetValueFromMap(this.visitCounts, pathString, null);\n\t\tif (visitCountOut.exists)\n\t\t\treturn visitCountOut.result;\n\n\t\treturn 0;\n\t}\n\n\tget callstackDepth(){\n\t\treturn this.callStack.depth;\n\t}\n\n\tget outputStream(){\n\t\treturn this._outputStream;\n\t}\n\n\tget currentChoices(){\n\t\t// If we can continue generating text content rather than choices,\n\t\t// then we reflect the choice list as being empty, since choices\n\t\t// should always come at the end.\n\t\tif ( this.canContinue ) return [];\n\t\treturn this._currentChoices;\n\t}\n\n\tget generatedChoices(){\n\t\treturn this._currentChoices;\n\t}\n\n\tget currentErrors(){\n\t\treturn this._currentErrors;\n\t}\n\tprivate _currentErrors: string[] | null = null;\n\n\tget currentWarnings(){\n\t\treturn this._currentWarnings;\n\t}\n\tprivate _currentWarnings: string[] | null = null;\n\n\tget variablesState(){\n\t\treturn this._variablesState;\n\t}\n\tprivate _variablesState: VariablesState;\n\n\tpublic callStack: CallStack;\n\n\tget evaluationStack(){\n\t\treturn this._evaluationStack;\n\t}\n\tprivate _evaluationStack: InkObject[];\n\n\tpublic divertedPointer: Pointer = Pointer.Null;\n\n\tget visitCounts(){\n\t\treturn this._visitCounts;\n\t}\n\tprivate _visitCounts: Map<string, number>;\n\n\tget turnIndices(){\n\t\treturn this._turnIndices;\n\t}\n\tprivate _turnIndices: Map<string, number>;\n\n\tget currentTurnIndex(){\n\t\treturn this._currentTurnIndex;\n\t}\n\tprivate _currentTurnIndex: number = 0;\n\n\tpublic storySeed: number = 0;\n\tpublic previousRandom: number = 0;\n\tpublic didSafeExit: boolean = false;\n\n\tpublic story: Story;\n\n\tget currentPathString(){\n\t\tlet pointer = this.currentPointer;\n\t\tif (pointer.isNull) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif (pointer.path === null) { return throwNullException('pointer.path'); }\n\t\t\treturn pointer.path.toString();\n\t\t}\n\t}\n\n\tget currentPointer(){\n\t\treturn this.callStack.currentElement.currentPointer.copy();\n\t}\n\n\tset currentPointer(value){\n\t\tthis.callStack.currentElement.currentPointer = value.copy();\n\t}\n\n\tget previousPointer(){\n\t\treturn this.callStack.currentThread.previousPointer.copy();\n\t}\n\n\tset previousPointer(value){\n\t\tthis.callStack.currentThread.previousPointer = value.copy();\n\t}\n\n\tget canContinue(){\n\t\treturn !this.currentPointer.isNull && !this.hasError;\n\t}\n\n\tget hasError(){\n\t\treturn this.currentErrors != null && this.currentErrors.length > 0;\n\t}\n\n\tget hasWarning(){\n\t\treturn this.currentWarnings != null && this.currentWarnings.length > 0;\n\t}\n\n\tget currentText(){\n\t\tif( this._outputStreamTextDirty ) {\n\t\t\tlet sb = new StringBuilder();\n\n\t\t\tfor (let outputObj of this._outputStream) {\n\t\t\t\t// var textContent = outputObj as StringValue;\n\t\t\t\tlet textContent = asOrNull(outputObj, StringValue);\n\t\t\t\tif (textContent !== null) {\n\t\t\t\t\tsb.Append(textContent.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._currentText = this.CleanOutputWhitespace(sb.toString());\n\t\t\tthis._outputStreamTextDirty = false;\n\t\t}\n\n\t\treturn this._currentText;\n\t}\n\tprivate _currentText: string | null = null;\n\n\tpublic CleanOutputWhitespace(str: string){\n\t\tlet sb = new StringBuilder();\n\n\t\tlet currentWhitespaceStart = -1;\n\t\tlet startOfLine = 0;\n\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tlet c = str.charAt(i);\n\n\t\t\tlet isInlineWhitespace = (c == ' ') || (c == '\\t');\n\n\t\t\tif (isInlineWhitespace && currentWhitespaceStart == -1)\n\t\t\t\tcurrentWhitespaceStart = i;\n\n\t\t\tif (!isInlineWhitespace) {\n\t\t\t\tif (c != '\\n' && currentWhitespaceStart > 0 && currentWhitespaceStart != startOfLine) {\n\t\t\t\t\tsb.Append(' ');\n\t\t\t\t}\n\t\t\t\tcurrentWhitespaceStart = -1;\n\t\t\t}\n\n\t\t\tif (c == '\\n')\n\t\t\t\tstartOfLine = i + 1;\n\n\t\t\tif (!isInlineWhitespace)\n\t\t\t\tsb.Append(c);\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n\n\tget currentTags(){\n\t\tif( this._outputStreamTagsDirty ) {\n\t\t\tthis._currentTags = [];\n\n\t\t\tfor(let outputObj of this._outputStream) {\n\t\t\t\t// var tag = outputObj as Tag;\n\t\t\t\tlet tag = asOrNull(outputObj, Tag);\n\t\t\t\tif (tag !== null) {\n\t\t\t\t\tthis._currentTags.push(tag.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._outputStreamTagsDirty = false;\n\t\t}\n\n\t\treturn this._currentTags;\n\t}\n\tprivate _currentTags: string[] | null = null;\n\n\tget inExpressionEvaluation(){\n\t\treturn this.callStack.currentElement.inExpressionEvaluation;\n\t}\n\tset inExpressionEvaluation(value){\n\t\tthis.callStack.currentElement.inExpressionEvaluation = value;\n\t}\n\n\tconstructor(story: Story){\n\t\tthis.story = story;\n\n\t\tthis._outputStream = [];\n\t\tthis.OutputStreamDirty();\n\n\t\tthis._evaluationStack = [];\n\n\t\tthis.callStack = new CallStack(story);\n\t\tthis._variablesState = new VariablesState(this.callStack, story.listDefinitions);\n\n\t\tthis._visitCounts = new Map();\n\t\tthis._turnIndices = new Map();\n\t\tthis._currentTurnIndex = -1;\n\n\t\tlet timeSeed = (new Date()).getTime();\n\t\tthis.storySeed = (new PRNG(timeSeed)).next() % 100;\n\t\tthis.previousRandom = 0;\n\n\t\tthis._currentChoices = [];\n\n\t\tthis.GoToStart();\n\t}\n\n\tpublic GoToStart(){\n\t\tthis.callStack.currentElement.currentPointer = Pointer.StartOf(this.story.mainContentContainer);\n\t}\n\n\tpublic Copy(){\n\t\tlet copy = new StoryState(this.story);\n\n\t\tcopy.outputStream.push.apply(copy.outputStream, this._outputStream);\n\t\tthis.OutputStreamDirty();\n\n\t\tcopy._currentChoices.push.apply(copy._currentChoices, this._currentChoices);\n\n\t\tif (this.hasError) {\n\t\t\tcopy._currentErrors = [];\n\t\t\tcopy._currentErrors.push.apply(copy._currentErrors, this.currentErrors || []);\n\t\t}\n\n\t\tif (this.hasWarning) {\n\t\t\tcopy._currentWarnings = [];\n\t\t\tcopy._currentWarnings.push.apply(copy._currentWarnings, this.currentWarnings || []);\n\t\t}\n\n\t\tcopy.callStack = new CallStack(this.callStack);\n\n\t\tcopy._variablesState = new VariablesState(copy.callStack, this.story.listDefinitions);\n\t\tcopy.variablesState.CopyFrom(this.variablesState);\n\n\t\tcopy.evaluationStack.push.apply(copy.evaluationStack, this.evaluationStack);\n\n\t\tif (!this.divertedPointer.isNull)\n\t\t\tcopy.divertedPointer = this.divertedPointer.copy();\n\n\t\tcopy.previousPointer = this.previousPointer.copy();\n\n\t\tcopy._visitCounts = new Map(this.visitCounts);\n\t\tcopy._turnIndices = new Map(this.turnIndices);\n\n\t\tcopy._currentTurnIndex = this.currentTurnIndex;\n\t\tcopy.storySeed = this.storySeed;\n\t\tcopy.previousRandom = this.previousRandom;\n\n\t\tcopy.didSafeExit = this.didSafeExit;\n\n\t\treturn copy;\n\t}\n\n\tget jsonToken(){\n\t\tlet obj: JObject = {};\n\n\t\tlet choiceThreads: JObject | undefined;\n\t\tfor (let c of this._currentChoices) {\n\t\t\tif (c.threadAtGeneration === null) { return throwNullException('c.threadAtGeneration'); }\n\t\t\tc.originalThreadIndex = c.threadAtGeneration.threadIndex;\n\n\t\t\tif( this.callStack.ThreadWithIndex(c.originalThreadIndex) == null ) {\n\t\t\t\tif( choiceThreads == null )\n\t\t\t\t\tchoiceThreads = new Map();\n\n\t\t\t\tchoiceThreads[c.originalThreadIndex.toString()] = c.threadAtGeneration.jsonToken;\n\t\t\t}\n\t\t}\n\n\t\tif (choiceThreads != null)\n\t\t\tobj['choiceThreads'] = choiceThreads;\n\n\t\tobj['callstackThreads'] = this.callStack.GetJsonToken();\n\t\tobj['variablesState'] = this.variablesState.jsonToken;\n\n\t\tobj['evalStack'] = JsonSerialisation.ListToJArray(this.evaluationStack);\n\n\t\tobj['outputStream'] = JsonSerialisation.ListToJArray(this._outputStream);\n\n\t\tobj['currentChoices'] = JsonSerialisation.ListToJArray(this._currentChoices);\n\n\t\tif(!this.divertedPointer.isNull) {\n\t\t\tif (this.divertedPointer.path === null) { return throwNullException('this.divertedPointer.path'); }\n\t\t\tobj['currentDivertTarget'] = this.divertedPointer.path.componentsString;\n\t\t}\n\n\t\tobj['visitCounts'] = JsonSerialisation.IntDictionaryToJObject(this.visitCounts);\n\t\tobj['turnIndices'] = JsonSerialisation.IntDictionaryToJObject(this.turnIndices);\n\t\tobj['turnIdx'] = this.currentTurnIndex;\n\t\tobj['storySeed'] = this.storySeed;\n\t\tobj['previousRandom'] = this.previousRandom;\n\n\t\tobj['inkSaveVersion'] = this.kInkSaveStateVersion;\n\n\t\t// Not using this right now, but could do in future.\n\t\tobj['inkFormatVersion'] = this.story.inkVersionCurrent;\n\n\t\treturn obj;\n\t}\n\tset jsonToken(value: JObject){\n\t\tlet jObject = value;\n\n\t\tlet jSaveVersion = jObject['inkSaveVersion'];\n\t\tif (jSaveVersion == null) {\n\t\t\tthrow new StoryException(\"ink save format incorrect, can't load.\");\n\t\t}\n\t\telse if (parseInt(jSaveVersion) < this.kMinCompatibleLoadVersion) {\n\t\t\tthrow new StoryException(\"Ink save format isn't compatible with the current version (saw '\"+jSaveVersion+\"', but minimum is \"+this.kMinCompatibleLoadVersion+\"), so can't load.\");\n\t\t}\n\n\t\tthis.callStack.SetJsonToken(jObject['callstackThreads'], this.story);\n\t\tthis.variablesState.jsonToken = jObject['variablesState'];\n\n\t\tthis._evaluationStack = JsonSerialisation.JArrayToRuntimeObjList(jObject['evalStack']);\n\n\t\tthis._outputStream = JsonSerialisation.JArrayToRuntimeObjList(jObject['outputStream']);\n\t\tthis.OutputStreamDirty();\n\n\t\t// currentChoices = Json.JArrayToRuntimeObjList<Choice>((JArray)jObject [\"currentChoices\"]);\n\t\tthis._currentChoices = JsonSerialisation.JArrayToRuntimeObjList(jObject['currentChoices']) as Choice[];\n\n\t\tlet currentDivertTargetPath = jObject['currentDivertTarget'];\n\t\tif (currentDivertTargetPath != null) {\n\t\t\tlet divertPath = new Path(currentDivertTargetPath.toString());\n\t\t\tthis.divertedPointer = this.story.PointerAtPath(divertPath);\n\t\t}\n\n\t\tthis._visitCounts = JsonSerialisation.JObjectToIntDictionary(jObject['visitCounts']) as Map<string, number>;\n\t\tthis._turnIndices = JsonSerialisation.JObjectToIntDictionary(jObject['turnIndices']) as Map<string, number>;\n\t\tthis._currentTurnIndex = parseInt(jObject['turnIdx']);\n\t\tthis.storySeed = parseInt(jObject['storySeed']);\n\t\tthis.previousRandom = parseInt(jObject['previousRandom']);\n\n\t\t// var jChoiceThreads = jObject[\"choiceThreads\"] as JObject;\n\t\tlet jChoiceThreads = jObject['choiceThreads'];\n\n\t\tfor(let c of this._currentChoices) {\n\t\t\tlet foundActiveThread = this.callStack.ThreadWithIndex(c.originalThreadIndex);\n\t\t\tif( foundActiveThread != null ) {\n\t\t\t\tc.threadAtGeneration = foundActiveThread.Copy();\n\t\t\t} else {\n\t\t\t\tlet jSavedChoiceThread = jChoiceThreads[c.originalThreadIndex.toString()];\n\t\t\t\tc.threadAtGeneration = new CallStack.Thread(jSavedChoiceThread, this.story);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic ResetErrors(){\n\t\tthis._currentErrors = null;\n\t\tthis._currentWarnings = null;\n\t}\n\tpublic ResetOutput(objs: InkObject[] | null = null){\n\t\tthis._outputStream.length = 0;\n\t\tif (objs !== null) this._outputStream.push.apply(this._outputStream, objs);\n\t\tthis.OutputStreamDirty();\n\t}\n\n\tpublic PushToOutputStream(obj: InkObject | null){\n\t\t// var text = obj as StringValue;\n\t\tlet text = asOrNull(obj, StringValue);\n\t\tif (text !== null) {\n\t\t\tlet listText = this.TrySplittingHeadTailWhitespace(text);\n\t\t\tif (listText !== null) {\n\t\t\t\tfor(let textObj of listText) {\n\t\t\t\t\tthis.PushToOutputStreamIndividual(textObj);\n\t\t\t\t}\n\t\t\t\tthis.OutputStreamDirty();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.PushToOutputStreamIndividual(obj);\n\t\tthis.OutputStreamDirty();\n\t}\n\n\tpublic PopFromOutputStream(count: number){\n\t\tthis.outputStream.splice(this.outputStream.length - count, count);\n\t\tthis.OutputStreamDirty();\n\t}\n\n\tpublic TrySplittingHeadTailWhitespace(single: StringValue) {\n\t\tlet str = single.value;\n\t\tif (str === null) { return throwNullException('single.value'); }\n\n\t\tlet headFirstNewlineIdx = -1;\n\t\tlet headLastNewlineIdx = -1;\n\t\tfor (let i = 0; i < str.length; ++i) {\n\t\t\tlet c = str[i];\n\t\t\tif (c == '\\n') {\n\t\t\t\tif (headFirstNewlineIdx == -1)\n\t\t\t\t\theadFirstNewlineIdx = i;\n\t\t\t\theadLastNewlineIdx = i;\n\t\t\t}\n\t\t\telse if (c == ' ' || c == '\\t')\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet tailLastNewlineIdx = -1;\n\t\tlet tailFirstNewlineIdx = -1;\n\t\tfor (let i = 0; i < str.length; ++i) {\n\t\t\tlet c = str[i];\n\t\t\tif (c == '\\n') {\n\t\t\t\tif (tailLastNewlineIdx == -1)\n\t\t\t\t\ttailLastNewlineIdx = i;\n\t\t\t\ttailFirstNewlineIdx = i;\n\t\t\t}\n\t\t\telse if (c == ' ' || c == '\\t')\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// No splitting to be done?\n\t\tif (headFirstNewlineIdx == -1 && tailLastNewlineIdx == -1)\n\t\t\treturn null;\n\n\t\tlet listTexts: StringValue[] = [];\n\t\tlet innerStrStart = 0;\n\t\tlet innerStrEnd = str.length;\n\n\t\tif (headFirstNewlineIdx != -1) {\n\t\t\tif (headFirstNewlineIdx > 0) {\n\t\t\t\tlet leadingSpaces = new StringValue(str.substring(0, headFirstNewlineIdx));\n\t\t\t\tlistTexts.push(leadingSpaces);\n\t\t\t}\n\t\t\tlistTexts.push(new StringValue('\\n'));\n\t\t\tinnerStrStart = headLastNewlineIdx + 1;\n\t\t}\n\n\t\tif (tailLastNewlineIdx != -1) {\n\t\t\tinnerStrEnd = tailFirstNewlineIdx;\n\t\t}\n\n\t\tif (innerStrEnd > innerStrStart) {\n\t\t\tlet innerStrText = str.substring(innerStrStart, innerStrEnd - innerStrStart);\n\t\t\tlistTexts.push(new StringValue(innerStrText));\n\t\t}\n\n\t\tif (tailLastNewlineIdx != -1 && tailFirstNewlineIdx > headLastNewlineIdx) {\n\t\t\tlistTexts.push(new StringValue('\\n'));\n\t\t\tif (tailLastNewlineIdx < str.length - 1) {\n\t\t\t\tlet numSpaces = (str.length - tailLastNewlineIdx) - 1;\n\t\t\t\tlet trailingSpaces = new StringValue(str.substring(tailLastNewlineIdx + 1, numSpaces));\n\t\t\t\tlistTexts.push(trailingSpaces);\n\t\t\t}\n\t\t}\n\n\t\treturn listTexts;\n\t}\n\n\tpublic PushToOutputStreamIndividual(obj: InkObject | null){\n\t\tlet glue = asOrNull(obj, Glue);\n\t\tlet text = asOrNull(obj, StringValue);\n\n\t\tlet includeInOutput = true;\n\n\t\tif (glue) {\n\t\t\tthis.TrimNewlinesFromOutputStream();\n\t\t\tincludeInOutput = true;\n\t\t}\n\n\t\telse if( text ) {\n\n\t\t\tlet functionTrimIndex = -1;\n\t\t\tlet currEl = this.callStack.currentElement;\n\t\t\tif (currEl.type == PushPopType.Function) {\n\t\t\t\tfunctionTrimIndex = currEl.functionStartInOutputStream;\n\t\t\t}\n\n\t\t\tlet glueTrimIndex = -1;\n\t\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\n\t\t\t\tlet o = this._outputStream[i];\n\t\t\t\tlet c = (o instanceof ControlCommand) ? o : null;\n\t\t\t\tlet g = (o instanceof Glue) ? o : null;\n\n\t\t\t\tif (g != null) {\n\t\t\t\t\tglueTrimIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\telse if (c != null && c.commandType == ControlCommand.CommandType.BeginString) {\n\t\t\t\t\tif (i >= functionTrimIndex) {\n\t\t\t\t\t\tfunctionTrimIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet trimIndex = -1;\n\t\t\tif (glueTrimIndex != -1 && functionTrimIndex != -1)\n\t\t\t\ttrimIndex = Math.min(functionTrimIndex, glueTrimIndex);\n\t\t\telse if (glueTrimIndex != -1)\n\t\t\t\ttrimIndex = glueTrimIndex;\n\t\t\telse\n\t\t\t\ttrimIndex = functionTrimIndex;\n\n\t\t\tif (trimIndex != -1) {\n\n\t\t\t\tif (text.isNewline) {\n\t\t\t\t\tincludeInOutput = false;\n\t\t\t\t}\n\n\t\t\t\telse if (text.isNonWhitespace) {\n\n\t\t\t\t\tif (glueTrimIndex > -1)\n\t\t\t\t\t\tthis.RemoveExistingGlue();\n\n\t\t\t\t\tif (functionTrimIndex > -1) {\n\t\t\t\t\t\tlet callStackElements = this.callStack.elements;\n\t\t\t\t\t\tfor (let i = callStackElements.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet el = callStackElements[i];\n\t\t\t\t\t\t\tif (el.type == PushPopType.Function) {\n\t\t\t\t\t\t\t\tel.functionStartInOutputStream = -1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (text.isNewline) {\n\t\t\t\tif (this.outputStreamEndsInNewline || !this.outputStreamContainsContent)\n\t\t\t\t\tincludeInOutput = false;\n\t\t\t}\n\t\t}\n\n\t\tif (includeInOutput) {\n\t\t\tif (obj === null) { return throwNullException('obj'); }\n\t\t\tthis._outputStream.push(obj);\n\t\t\tthis.OutputStreamDirty();\n\t\t}\n\t}\n\n\tpublic TrimNewlinesFromOutputStream(){\n\t\tlet removeWhitespaceFrom = -1;\n\n\t\tlet i = this._outputStream.length-1;\n\t\twhile (i >= 0) {\n\t\t\tlet obj = this._outputStream[i];\n\t\t\tlet cmd = asOrNull(obj, ControlCommand);\n\t\t\tlet txt = asOrNull(obj, StringValue);\n\n\t\t\tif (cmd != null || (txt != null && txt.isNonWhitespace)) {\n\t\t\t\tbreak;\n\t\t\t} else if (txt != null && txt.isNewline) {\n\t\t\t\tremoveWhitespaceFrom = i;\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\n\t\t// Remove the whitespace\n\t\tif (removeWhitespaceFrom >= 0) {\n\t\t\ti=removeWhitespaceFrom;\n\t\t\twhile(i < this._outputStream.length) {\n\t\t\t\tlet text = asOrNull(this._outputStream[i], StringValue);\n\t\t\t\tif (text) {\n\t\t\t\t\tthis._outputStream.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.OutputStreamDirty();\n\t}\n\n\tpublic RemoveExistingGlue(){\n\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\n\t\t\tlet c = this._outputStream[i];\n\t\t\tif (c instanceof Glue) {\n\t\t\t\tthis._outputStream.splice(i, 1);\n\t\t\t} else if( c instanceof ControlCommand ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.OutputStreamDirty();\n\t}\n\n\tget outputStreamEndsInNewline(){\n\t\tif (this._outputStream.length > 0) {\n\n\t\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\n\t\t\t\tlet obj = this._outputStream[i];\n\t\t\t\tif (obj instanceof ControlCommand)\n\t\t\t\t\tbreak;\n\t\t\t\tlet text = this._outputStream[i];\n\t\t\t\tif (text instanceof StringValue) {\n\t\t\t\t\tif (text.isNewline)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\telse if (text.isNonWhitespace)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tget outputStreamContainsContent(){\n\t\tfor (let i = 0; i < this._outputStream.length; i++){\n\t\t\tif (this._outputStream[i] instanceof StringValue)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget inStringEvaluation(){\n\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\n\t\t\t// var cmd = this._outputStream[i] as ControlCommand;\n\t\t\tlet cmd = asOrNull(this._outputStream[i], ControlCommand);\n\t\t\tif (cmd instanceof ControlCommand && cmd.commandType == ControlCommand.CommandType.BeginString) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic PushEvaluationStack(obj: InkObject | null){\n\t\t// var listValue = obj as ListValue;\n\t\tlet listValue = asOrNull(obj, ListValue);\n\t\tif (listValue) {\n\n\t\t\t// Update origin when list is has something to indicate the list origin\n\t\t\tlet rawList = listValue.value;\n\t\t\tif (rawList === null) { return throwNullException('rawList'); }\n\n\t\t\tif (rawList.originNames != null) {\n\t\t\t\tif (!rawList.origins) rawList.origins = [];\n\t\t\t\trawList.origins.length = 0;\n\n\t\t\t\tfor (let n of rawList.originNames) {\n\t\t\t\t\tif (this.story.listDefinitions === null) return throwNullException('StoryState.story.listDefinitions');\n\t\t\t\t\tlet def = this.story.listDefinitions.TryListGetDefinition(n, null);\n\t\t\t\t\tif (def.result === null) return throwNullException('StoryState def.result');\n\t\t\t\t\tif (rawList.origins.indexOf(def.result) < 0) rawList.origins.push(def.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj === null) { return throwNullException('obj'); }\n\t\tthis.evaluationStack.push(obj);\n\t}\n\n\tpublic PopEvaluationStack(): InkObject;\n\tpublic PopEvaluationStack(numberOfObjects: number): InkObject[];\n\tpublic PopEvaluationStack(numberOfObjects?: number){\n\t\tif (typeof numberOfObjects === 'undefined'){\n\t\t\tlet obj = this.evaluationStack.pop();\n\t\t\treturn nullIfUndefined(obj);\n\t\t} else {\n\t\t\tif(numberOfObjects > this.evaluationStack.length) {\n\t\t\t\tthrow new Error('trying to pop too many objects');\n\t\t\t}\n\n\t\t\tlet popped = this.evaluationStack.splice(this.evaluationStack.length - numberOfObjects, numberOfObjects);\n\t\t\treturn nullIfUndefined(popped);\n\t\t}\n\t}\n\n\tpublic PeekEvaluationStack(){\n\t\t return this.evaluationStack[this.evaluationStack.length - 1];\n\t}\n\n\tpublic ForceEnd(){\n\t\tthis.callStack.Reset();\n\n\t\tthis._currentChoices.length = 0;\n\n\t\tthis.currentPointer = Pointer.Null;\n\t\tthis.previousPointer = Pointer.Null;\n\n\t\tthis.didSafeExit = true;\n\t}\n\n\tpublic TrimWhitespaceFromFunctionEnd(){\n\t\tDebug.Assert (this.callStack.currentElement.type == PushPopType.Function);\n\t\tlet functionStartPoint = this.callStack.currentElement.functionStartInOutputStream;\n\n\t\tif (functionStartPoint == -1) {\n\t\t\tfunctionStartPoint = 0;\n\t\t}\n\n\t\tfor (let i = this._outputStream.length - 1; i >= functionStartPoint; i--) {\n\t\t\tlet obj = this._outputStream[i];\n\t\t\tlet txt = asOrNull(obj, StringValue);\n\t\t\tlet cmd = asOrNull(obj, ControlCommand);\n\n\t\t\tif (txt == null) continue;\n\t\t\tif (cmd) break;\n\n\t\t\tif (txt.isNewline || txt.isInlineWhitespace) {\n\t\t\t\tthis._outputStream.splice(i, 1);\n\t\t\t\tthis.OutputStreamDirty();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic PopCallStack(popType: PushPopType | null = null) {\n\t\tif (this.callStack.currentElement.type == PushPopType.Function)\n\t\t\tthis.TrimWhitespaceFromFunctionEnd();\n\n\t\tthis.callStack.Pop(popType);\n\t}\n\n\tpublic SetChosenPath(path: Path, incrementingTurnIndex: boolean){\n\t\t// Changing direction, assume we need to clear current set of choices\n\t\tthis._currentChoices.length = 0;\n\n\t\tlet newPointer = this.story.PointerAtPath(path);\n\t\tif (!newPointer.isNull && newPointer.index == -1)\n\t\t\tnewPointer.index = 0;\n\n\t\tthis.currentPointer = newPointer;\n\n\t\tif (incrementingTurnIndex)\n\t\t\tthis._currentTurnIndex++;\n\t}\n\n\tpublic StartFunctionEvaluationFromGame(funcContainer: Container, args: any[]){\n\t\tthis.callStack.Push(PushPopType.FunctionEvaluationFromGame, this.evaluationStack.length);\n\t\tthis.callStack.currentElement.currentPointer = Pointer.StartOf(funcContainer);\n\n\t\tthis.PassArgumentsToEvaluationStack(args);\n\t}\n\n\tpublic PassArgumentsToEvaluationStack(args: any[]){\n\t\t// Pass arguments onto the evaluation stack\n\t\tif (args != null) {\n\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\tif (!(typeof args[i] === 'number' || typeof args[i] === 'string')) {\n\t\t\t\t\tthrow new Error('ink arguments when calling EvaluateFunction / ChoosePathStringWithParameters  must be int, float or string');\n\t\t\t\t}\n\n\t\t\t\tthis.PushEvaluationStack(Value.Create(args[i]));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic TryExitFunctionEvaluationFromGame(){\n\t\tif (this.callStack.currentElement.type == PushPopType.FunctionEvaluationFromGame) {\n\t\t\tthis.currentPointer = Pointer.Null;\n\t\t\tthis.didSafeExit = true;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic CompleteFunctionEvaluationFromGame(){\n\t\tif (this.callStack.currentElement.type != PushPopType.FunctionEvaluationFromGame) {\n\t\t\tthrow new StoryException('Expected external function evaluation to be complete. Stack trace: '+this.callStack.callStackTrace);\n\t\t}\n\n\t\tlet originalEvaluationStackHeight = this.callStack.currentElement.evaluationStackHeightWhenPushed;\n\n\t\tlet returnedObj: InkObject | null = null;\n\t\twhile (this.evaluationStack.length > originalEvaluationStackHeight) {\n\t\t\tlet poppedObj = this.PopEvaluationStack();\n\t\t\tif (returnedObj === null)\n\t\t\t\treturnedObj = poppedObj;\n\t\t}\n\n\t\tthis.PopCallStack(PushPopType.FunctionEvaluationFromGame);\n\n\t\tif (returnedObj) {\n\t\t\tif (returnedObj instanceof Void)\n\t\t\t\treturn null;\n\n\t\t\t// Some kind of value, if not void\n\t\t\t// var returnVal = returnedObj as Runtime.Value;\n\t\t\tlet returnVal = asOrThrows(returnedObj, Value);\n\n\t\t\t// DivertTargets get returned as the string of components\n\t\t\t// (rather than a Path, which isn't public)\n\t\t\tif (returnVal.valueType == ValueType.DivertTarget) {\n\t\t\t\treturn returnVal.valueObject.toString();\n\t\t\t}\n\n\t\t\t// Other types can just have their exact object type:\n\t\t\t// int, float, string. VariablePointers get returned as strings.\n\t\t\treturn returnVal.valueObject;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic AddError(message: string, isWarning: boolean){\n\t\tif (!isWarning) {\n\t\t\tif (this._currentErrors == null) this._currentErrors = [];\n\t\t\tthis._currentErrors.push(message);\n\t\t} else {\n\t\t\tif (this._currentWarnings == null) this._currentWarnings = [];\n\t\t\tthis._currentWarnings.push(message);\n\t\t}\n\t}\n\n\tpublic OutputStreamDirty(){\n\t\tthis._outputStreamTextDirty = true;\n\t\tthis._outputStreamTagsDirty = true;\n\t}\n\n\tprivate _outputStream: InkObject[];\n\tprivate _outputStreamTextDirty = true;\n\tprivate _outputStreamTagsDirty = true;\n\tprivate _currentChoices: Choice[];\n}\n","// This is simple replacement of the Stopwatch class from the .NET Framework.\n// The original class can count time with much more accuracy than the Javascript version.\n// It might be worth considering using `window.performance` in the browser\n// or `process.hrtime()` in node.\nexport class Stopwatch {\n\n\tprivate startTime: number | undefined;\n\n\tconstructor(){\n\t\tthis.startTime = undefined;\n\t}\n\n\tget ElapsedMilliseconds(): number{\n\t\tif (typeof this.startTime === 'undefined'){\n\t\t\treturn 0;\n\t\t}\n\t\treturn (new Date().getTime()) - this.startTime;\n\t}\n\n\tpublic Start(){\n\t\tthis.startTime = new Date().getTime();\n\t}\n\tpublic Stop(){\n\t\tthis.startTime = undefined;\n\t}\n}\n","import {Container} from './Container';\nimport {InkObject} from './Object';\nimport {JsonSerialisation} from './JsonSerialisation';\nimport {StoryState} from './StoryState';\nimport {ControlCommand} from './ControlCommand';\nimport {PushPopType} from './PushPop';\nimport {ChoicePoint} from './ChoicePoint';\nimport {Choice} from './Choice';\nimport {Divert} from './Divert';\nimport {Value, StringValue, IntValue, DivertTargetValue, VariablePointerValue, ListValue} from './Value';\nimport {Path} from './Path';\nimport {Void} from './Void';\nimport {Tag} from './Tag';\nimport {VariableAssignment} from './VariableAssignment';\nimport {VariableReference} from './VariableReference';\nimport {NativeFunctionCall} from './NativeFunctionCall';\nimport {StoryException} from './StoryException';\nimport {PRNG} from './PRNG';\nimport {StringBuilder} from './StringBuilder';\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\nimport {ListDefinition} from './ListDefinition';\nimport {Stopwatch} from './StopWatch';\nimport {Pointer} from './Pointer';\nimport {InkList, InkListItem, KeyValuePair} from './InkList';\nimport {JObject} from './JObject';\nimport {asOrNull, asOrThrows} from './TypeAssertion';\nimport {DebugMetadata} from './DebugMetadata';\nimport {throwNullException} from './NullException';\n\nexport {InkList} from './InkList';\n\n// tslint:disable no-conditional-assignment\n\nif (!Number.isInteger) {\n\tNumber.isInteger = function isInteger(nVal: any) {\n\t\treturn typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal;\n\t};\n}\n\nexport class Story extends InkObject{\n\n\tpublic inkVersionCurrent = 19;\n\n\tpublic inkVersionMinimumCompatible = 18;\n\n\tget currentChoices(){\n\t\tlet choices: Choice[] = [];\n\n\t\tif (this._state === null) { return throwNullException('this._state'); }\n\t\tfor(let c of this._state.currentChoices) {\n\t\t\tif (!c.isInvisibleDefault) {\n\t\t\t\tc.index = choices.length;\n\t\t\t\tchoices.push(c);\n\t\t\t}\n\t\t}\n\n\t\treturn choices;\n\t}\n\n\tget currentText(){\n\t\tthis.IfAsyncWeCant(\"call currentText since it's a work in progress\");\n\t\treturn this.state.currentText;\n\t}\n\n\tget currentTags(){\n\t\tthis.IfAsyncWeCant(\"call currentTags since it's a work in progress\");\n\t\treturn this.state.currentTags;\n\t}\n\n\tget currentErrors(){\n\t\treturn this.state.currentErrors;\n\t}\n\n\tget currentWarnings(){\n\t\treturn this.state.currentWarnings;\n\t}\n\n\tget hasError(){\n\t\treturn this.state.hasError;\n\t}\n\n\tget hasWarning(){\n\t\treturn this.state.hasWarning;\n\t}\n\n\tget variablesState(){\n\t\treturn this.state.variablesState;\n\t}\n\n\tget listDefinitions(){\n\t\treturn this._listDefinitions;\n\t}\n\n\tget state(){\n\t\treturn this._state;\n\t}\n\n\t// TODO: Implement Profiler\n\tpublic StartProfiling(){ /* */ }\n\tpublic EndProfiling(){ /* */ }\n\n\tconstructor(contentContainer: Container, lists: ListDefinition[] | null);\n\tconstructor(jsonString: string);\n\tconstructor(json: JObject);\n\tconstructor(){\n\t\tsuper();\n\n\t\t// Discrimination between constructors\n\t\tlet contentContainer: Container;\n\t\tlet lists: ListDefinition[] | null = null;\n\t\tlet json: JObject | null = null;\n\n\t\tif (arguments[0] instanceof Container) {\n\t\t\tcontentContainer = arguments[0] as Container;\n\n\t\t\tif (typeof arguments[1] !== 'undefined') {\n\t\t\t\tlists = arguments[1] as ListDefinition[];\n\t\t\t}\n\n\t\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\n\t\t\tthis._mainContentContainer = contentContainer;\n\t\t\t// ------\n\t\t} else {\n\t\t\tif (typeof arguments[0] === 'string') {\n\t\t\t\tlet jsonString = arguments[0] as string;\n\t\t\t\tjson = JSON.parse(jsonString);\n\t\t\t} else {\n\t\t\t\tjson = arguments[0] as JObject;\n\t\t\t}\n\t\t}\n\n\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\n\t\tif (lists != null)\n\t\t\tthis._listDefinitions = new ListDefinitionsOrigin(lists);\n\n\t\tthis._externals = new Map();\n\t\t// ------\n\n\t\t// ------ Story(string jsonString) : this((Container)null)\n\t\tif (json !== null) {\n\t\t\tlet rootObject: JObject = json;\n\n\t\t\tlet versionObj = rootObject['inkVersion'];\n\t\t\tif (versionObj == null)\n\t\t\t\tthrow new Error(\"ink version number not found. Are you sure it's a valid .ink.json file?\");\n\n\t\t\tlet formatFromFile = parseInt(versionObj);\n\t\t\tif (formatFromFile > this.inkVersionCurrent){\n\t\t\t\tthrow new Error('Version of ink used to build story was newer than the current version of the engine');\n\t\t\t}\n\t\t\telse if (formatFromFile < this.inkVersionMinimumCompatible){\n\t\t\t\tthrow new Error('Version of ink used to build story is too old to be loaded by this version of the engine');\n\t\t\t}\n\t\t\telse if (formatFromFile != this.inkVersionCurrent){\n\t\t\t\tconsole.warn(\"WARNING: Version of ink used to build story doesn't match current version of engine. Non-critical, but recommend synchronising.\");\n\t\t\t}\n\n\t\t\tlet rootToken = rootObject['root'];\n\t\t\tif (rootToken == null)\n\t\t\t\tthrow new Error(\"Root node for ink not found. Are you sure it's a valid .ink.json file?\");\n\n\t\t\tlet listDefsObj;\n\t\t\tif (listDefsObj = rootObject['listDefs']) {\n\t\t\t\tthis._listDefinitions = JsonSerialisation.JTokenToListDefinitions(listDefsObj);\n\t\t\t}\n\n\t\t\tthis._mainContentContainer = asOrThrows(JsonSerialisation.JTokenToRuntimeObject(rootToken), Container);\n\n\t\t\tthis.ResetState();\n\t\t}\n\t\t// ------\n\t}\n\n\tpublic ToJsonString(){\n\t\tlet rootContainerJsonList = JsonSerialisation.RuntimeObjectToJToken(this._mainContentContainer);\n\n\t\tlet  rootObject: JObject = {};\n\t\trootObject['inkVersion'] = this.inkVersionCurrent;\n\t\trootObject['root'] = rootContainerJsonList;\n\n\t\tif (this._listDefinitions != null)\n\t\t\trootObject['listDefs'] = JsonSerialisation.ListDefinitionsToJToken(this._listDefinitions);\n\n\t\treturn JSON.stringify(rootObject);\n\t}\n\n\tpublic ResetState(){\n\t\tthis.IfAsyncWeCant('ResetState');\n\n\t\tthis._state = new StoryState(this);\n\t\tthis._state.variablesState.ObserveVariableChange(this.VariableStateDidChangeEvent.bind(this));\n\n\t\tthis.ResetGlobals();\n\t}\n\n\tpublic ResetErrors(){\n\t\tif (this._state === null) { return throwNullException('this._state'); }\n\t\tthis._state.ResetErrors();\n\t}\n\n\tpublic ResetCallstack(){\n\t\tthis.IfAsyncWeCant('ResetCallstack');\n\t\tif (this._state === null) { return throwNullException('this._state'); }\n\t\tthis._state.ForceEnd();\n\t}\n\n\tpublic ResetGlobals(){\n\t\tif (this._mainContentContainer.namedContent.get('global decl')){\n\t\t\tlet originalPointer = this.state.currentPointer.copy();\n\n\t\t\tthis.ChoosePath(new Path('global decl'), false);\n\n\t\t\tthis.ContinueInternal();\n\n\t\t\tthis.state.currentPointer = originalPointer;\n\t\t}\n\n\t\tthis.state.variablesState.SnapshotDefaultGlobals();\n\t}\n\n\tpublic Continue(){\n\t\tthis.ContinueAsync(0);\n\t\treturn this.currentText;\n\t}\n\n\tget canContinue(){\n\t\treturn this.state.canContinue;\n\t}\n\n\tget asyncContinueComplete(){\n\t\treturn !this._asyncContinueActive;\n\t}\n\n\tpublic ContinueAsync(millisecsLimitAsync: number){\n\t\tif (!this._hasValidatedExternals)\n\t\t\tthis.ValidateExternalBindings();\n\n\t\tthis.ContinueInternal(millisecsLimitAsync);\n\t}\n\n\tpublic ContinueInternal(millisecsLimitAsync = 0){\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PreContinue();\n\n\t\tlet isAsyncTimeLimited = millisecsLimitAsync > 0;\n\t\tthis._recursiveContinueCount++;\n\n\t\tif (!this._asyncContinueActive) {\n\t\t\tthis._asyncContinueActive = isAsyncTimeLimited;\n\n\t\t\tif (!this.canContinue) {\n\t\t\t\tthrow new StoryException(\"Can't continue - should check canContinue before calling Continue\");\n\t\t\t}\n\n\t\t\tthis._state.didSafeExit = false;\n\t\t\tthis._state.ResetOutput();\n\n\t\t\tif (this._recursiveContinueCount == 1)\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = true;\n\t\t}\n\n\t\tlet durationStopwatch = new Stopwatch();\n\t\tdurationStopwatch.Start();\n\n\t\tlet outputStreamEndsInNewline = false;\n\t\tdo {\n\t\t\ttry {\n\t\t\t\toutputStreamEndsInNewline = this.ContinueSingleStep();\n\t\t\t} catch (e) {\n\t\t\t\tif (!(e instanceof StoryException)) throw e;\n\n\t\t\t\tthis.AddError(e.message, undefined, e.useEndLineNumber);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (outputStreamEndsInNewline)\n\t\t\t\tbreak;\n\n\t\t\tif (this._asyncContinueActive && durationStopwatch.ElapsedMilliseconds > millisecsLimitAsync) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t} while(this.canContinue);\n\n\t\tdurationStopwatch.Stop();\n\n\t\tif (outputStreamEndsInNewline || !this.canContinue) {\n\t\t\tif (this._stateAtLastNewline != null) {\n\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\n\t\t\t\tthis._stateAtLastNewline = null;\n\t\t\t}\n\n\t\t\tif (!this.canContinue) {\n\t\t\t\tif (this.state.callStack.canPopThread)\n\t\t\t\t\tthis.AddError('Thread available to pop, threads should always be flat by the end of evaluation?');\n\n\t\t\t\tif (this.state.generatedChoices.length == 0 && !this.state.didSafeExit && this._temporaryEvaluationContainer == null) {\n\t\t\t\t\tif (this.state.callStack.CanPop(PushPopType.Tunnel))\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '->->' to return from a tunnel?\");\n\t\t\t\t\telse if (this.state.callStack.CanPop(PushPopType.Function))\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '~ return'?\");\n\t\t\t\t\telse if (!this.state.callStack.canPop)\n\t\t\t\t\t\tthis.AddError (\"ran out of content. Do you need a '-> DONE' or '-> END'?\");\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.AddError ('unexpectedly reached end of content for unknown reason. Please debug compiler!');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state.didSafeExit = false;\n\n\t\t\tif (this._recursiveContinueCount == 1)\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = false;\n\n\t\t\tthis._asyncContinueActive = false;\n\t\t}\n\n\t\tthis._recursiveContinueCount--;\n\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PostContinue();\n\t}\n\n\tpublic ContinueSingleStep(){\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PreStep();\n\n\t\tthis.Step();\n\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PostStep();\n\n\t\tif (!this.canContinue && !this.state.callStack.elementIsEvaluateFromGame) {\n\t\t\tthis.TryFollowDefaultInvisibleChoice();\n\t\t}\n\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PreSnapshot();\n\n\t\tif (!this.state.inStringEvaluation) {\n\n\t\t\tif (this._stateAtLastNewline != null) {\n\n\t\t\t\tif (this._stateAtLastNewline.currentTags === null) { return throwNullException('this._stateAtLastNewline.currentTags'); }\n\t\t\t\tif (this.state.currentTags === null) { return throwNullException('this.state.currentTags'); }\n\n\t\t\t\tlet change = this.CalculateNewlineOutputStateChange (\n\t\t\t\t\tthis._stateAtLastNewline.currentText, this.state.currentText,\n\t\t\t\t\tthis._stateAtLastNewline.currentTags.length, this.state.currentTags.length,\n\t\t\t\t);\n\n\t\t\t\tif (change == Story.OutputStateChange.ExtendedBeyondNewline) {\n\n\t\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\telse if (change == Story.OutputStateChange.NewlineRemoved) {\n\t\t\t\t\tthis._stateAtLastNewline = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.state.outputStreamEndsInNewline) {\n\t\t\t\tif (this.canContinue) {\n\t\t\t\t\tif (this._stateAtLastNewline == null)\n\t\t\t\t\t\tthis._stateAtLastNewline = this.StateSnapshot();\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tthis._stateAtLastNewline = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.PostSnapshot();\n\n\t\treturn false;\n\t}\n\n\tpublic CalculateNewlineOutputStateChange(prevText: string | null, currText: string | null, prevTagCount: number, currTagCount: number){\n\t\tif (prevText === null) { return throwNullException('prevText'); }\n\t\tif (currText === null) { return throwNullException('currText'); }\n\n\t\tlet newlineStillExists = currText.length >= prevText.length && currText.charAt(prevText.length - 1) == '\\n';\n\t\tif (prevTagCount == currTagCount && prevText.length == currText.length && newlineStillExists)\n\t\t\treturn Story.OutputStateChange.NoChange;\n\n\t\tif (!newlineStillExists) {\n\t\t\treturn Story.OutputStateChange.NewlineRemoved;\n\t\t}\n\n\t\tif (currTagCount > prevTagCount)\n\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\n\n\t\tfor (let i = prevText.length; i < currText.length; i++) {\n\t\t\tlet c = currText.charAt(i);\n\t\t\tif (c != ' ' && c != '\\t') {\n\t\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\n\t\t\t}\n\t\t}\n\n\t\treturn Story.OutputStateChange.NoChange;\n\t}\n\n\tpublic ContinueMaximally(){\n\t\tthis.IfAsyncWeCant('ContinueMaximally');\n\n\t\tlet sb = new StringBuilder();\n\n\t\twhile (this.canContinue) {\n\t\t\tsb.Append(this.Continue());\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n\n\tpublic ContentAtPath(path: Path){\n\t\treturn this.mainContentContainer.ContentAtPath(path);\n\t}\n\n\tpublic KnotContainerWithName(name: string){\n\t\tlet namedContainer = this.mainContentContainer.namedContent.get(name);\n\t\tif (namedContainer instanceof Container)\n\t\t\treturn namedContainer;\n\t\telse\n\t\t\treturn null;\n\t}\n\n\tpublic PointerAtPath(path: Path) {\n\t\tif (path.length == 0)\n\t\t\treturn Pointer.Null;\n\n\t\tlet p = new Pointer();\n\n\t\tlet pathLengthToUse = path.length;\n\n\t\tlet result = null;\n\t\tif (path.lastComponent === null) { return throwNullException('path.lastComponent'); }\n\n\t\tif (path.lastComponent.isIndex) {\n\t\t\tpathLengthToUse = path.length - 1;\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path, undefined, pathLengthToUse);\n\t\t\tp.container = result.container;\n\t\t\tp.index = path.lastComponent.index;\n\t\t} else {\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path);\n\t\t\tp.container = result.container;\n\t\t\tp.index = -1;\n\t\t}\n\n\t\tif (result.obj == null || result.obj == this.mainContentContainer && pathLengthToUse > 0) {\n\t\t\tthis.Error(\"Failed to find content at path '\" + path + \"', and no approximation of it was possible.\");\n\t\t} else if (result.approximate)\n\t\t\tthis.Warning(\"Failed to find content at path '\" + path + \"', so it was approximated to: '\"+result.obj.path+\"'.\");\n\n\t\treturn p;\n\t}\n\n\tpublic StateSnapshot(){\n\t\treturn this.state.Copy();\n\t}\n\n\tpublic RestoreStateSnapshot(state: StoryState){\n\t\tthis._state = state;\n\t}\n\n\tpublic Step(){\n\n\t\tlet shouldAddToStream = true;\n\n\t\tlet pointer = this.state.currentPointer.copy();\n\t\tif (pointer.isNull) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Container containerToEnter = pointer.Resolve () as Container;\n\t\tlet containerToEnter = asOrNull(pointer.Resolve(), Container);\n\n\t\twhile(containerToEnter) {\n\n\t\t\tthis.VisitContainer(containerToEnter, true);\n\n\t\t\t// No content? the most we can do is step past it\n\t\t\tif (containerToEnter.content.length == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tpointer = Pointer.StartOf(containerToEnter);\n\t\t\t// containerToEnter = pointer.Resolve() as Container;\n\t\t\tcontainerToEnter = asOrNull(pointer.Resolve(), Container);\n\t\t}\n\n\t\tthis.state.currentPointer = pointer.copy();\n\n\t\tif (this._profiler != null)\n\t\t\tthis._profiler.Step(this.state.callStack);\n\n\t\t// Is the current content object:\n\t\t//  - Normal content\n\t\t//  - Or a logic/flow statement - if so, do it\n\t\t// Stop flow if we hit a stack pop when we're unable to pop (e.g. return/done statement in knot\n\t\t// that was diverted to rather than called as a function)\n\t\tlet currentContentObj = pointer.Resolve();\n\t\tlet isLogicOrFlowControl = this.PerformLogicAndFlowControl(currentContentObj);\n\n\t\t// Has flow been forced to end by flow control above?\n\t\tif (this.state.currentPointer.isNull) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isLogicOrFlowControl) {\n\t\t\tshouldAddToStream = false;\n\t\t}\n\n\t\t// Choice with condition?\n\t\t// var choicePoint = currentContentObj as ChoicePoint;\n\t\tlet choicePoint = asOrNull(currentContentObj, ChoicePoint);\n\t\tif (choicePoint) {\n\t\t\tlet choice = this.ProcessChoice(choicePoint);\n\t\t\tif (choice) {\n\t\t\t\tthis.state.generatedChoices.push(choice);\n\t\t\t}\n\n\t\t\tcurrentContentObj = null;\n\t\t\tshouldAddToStream = false;\n\t\t}\n\n\t\t// If the container has no content, then it will be\n\t\t// the \"content\" itself, but we skip over it.\n\t\tif (currentContentObj instanceof Container) {\n\t\t\tshouldAddToStream = false;\n\t\t}\n\n\t\t// Content to add to evaluation stack or the output stream\n\t\tif (shouldAddToStream) {\n\n\t\t\t// If we're pushing a variable pointer onto the evaluation stack, ensure that it's specific\n\t\t\t// to our current (possibly temporary) context index. And make a copy of the pointer\n\t\t\t// so that we're not editing the original runtime object.\n\t\t\t// var varPointer = currentContentObj as VariablePointerValue;\n\t\t\tlet varPointer = asOrNull(currentContentObj, VariablePointerValue);\n\t\t\tif (varPointer && varPointer.contextIndex == -1) {\n\n\t\t\t\t// Create new object so we're not overwriting the story's own data\n\t\t\t\tlet contextIdx = this.state.callStack.ContextForVariableNamed(varPointer.variableName);\n\t\t\t\tcurrentContentObj = new VariablePointerValue(varPointer.variableName, contextIdx);\n\t\t\t}\n\n\t\t\t// Expression evaluation content\n\t\t\tif (this.state.inExpressionEvaluation) {\n\t\t\t\tthis.state.PushEvaluationStack(currentContentObj);\n\t\t\t}\n\t\t\t// Output stream content (i.e. not expression evaluation)\n\t\t\telse {\n\t\t\t\tthis.state.PushToOutputStream(currentContentObj);\n\t\t\t}\n\t\t}\n\n\t\t// Increment the content pointer, following diverts if necessary\n\t\tthis.NextContent();\n\n\t\t// Starting a thread should be done after the increment to the content pointer,\n\t\t// so that when returning from the thread, it returns to the content after this instruction.\n\t\t// var controlCmd = currentContentObj as ;\n\t\tlet controlCmd = asOrNull(currentContentObj, ControlCommand);\n\t\tif (controlCmd && controlCmd.commandType == ControlCommand.CommandType.StartThread) {\n\t\t\tthis.state.callStack.PushThread();\n\t\t}\n\t}\n\n\tpublic VisitContainer(container: Container, atStart: boolean){\n\t\tif (!container.countingAtStartOnly || atStart) {\n\t\t\tif (container.visitsShouldBeCounted)\n\t\t\t\tthis.IncrementVisitCountForContainer(container);\n\n\t\t\tif (container.turnIndexShouldBeCounted)\n\t\t\t\tthis.RecordTurnIndexVisitToContainer(container);\n\t\t}\n\t}\n\n\tprivate _prevContainers: Container[] = [];\n\tpublic VisitChangedContainersDueToDivert(){\n\t\tlet previousPointer = this.state.previousPointer.copy();\n\t\tlet pointer = this.state.currentPointer.copy();\n\n\t\tif (pointer.isNull || pointer.index == -1)\n\t\t\treturn;\n\n\t\tthis._prevContainers.length = 0;\n\t\tif (!previousPointer.isNull) {\n\t\t\t// Container prevAncestor = previousPointer.Resolve() as Container ?? previousPointer.container as Container;\n\t\t\tlet resolvedPreviousAncestor = previousPointer.Resolve();\n\t\t\tlet prevAncestor = asOrNull(resolvedPreviousAncestor, Container) || asOrNull(previousPointer.container, Container);\n\t\t\twhile (prevAncestor) {\n\t\t\t\tthis._prevContainers.push(prevAncestor);\n\t\t\t\t// prevAncestor = prevAncestor.parent as Container;\n\t\t\t\tprevAncestor = asOrNull(prevAncestor.parent, Container);\n\t\t\t}\n\t\t}\n\n\t\tlet currentChildOfContainer = pointer.Resolve();\n\n\t\tif (currentChildOfContainer == null) return;\n\n\t\t// Container currentContainerAncestor = currentChildOfContainer.parent as Container;\n\t\tlet currentContainerAncestor = asOrNull(currentChildOfContainer.parent, Container);\n\t\twhile (currentContainerAncestor && (this._prevContainers.indexOf(currentContainerAncestor) < 0 || currentContainerAncestor.countingAtStartOnly)) {\n\n\t\t\t// Check whether this ancestor container is being entered at the start,\n\t\t\t// by checking whether the child object is the first.\n\t\t\tlet enteringAtStart = currentContainerAncestor.content.length > 0\n\t\t\t\t&& currentChildOfContainer == currentContainerAncestor.content[0];\n\n\t\t\t// Mark a visit to this container\n\t\t\tthis.VisitContainer(currentContainerAncestor, enteringAtStart);\n\n\t\t\tcurrentChildOfContainer = currentContainerAncestor;\n\t\t\t// currentContainerAncestor = currentContainerAncestor.parent as Container;\n\t\t\tcurrentContainerAncestor = asOrNull(currentContainerAncestor.parent, Container);\n\t\t}\n\t}\n\n\tpublic ProcessChoice(choicePoint: ChoicePoint){\n\t\tlet showChoice = true;\n\n\t\t// Don't create choice if choice point doesn't pass conditional\n\t\tif (choicePoint.hasCondition) {\n\t\t\tlet conditionValue = this.state.PopEvaluationStack();\n\t\t\tif (!this.IsTruthy(conditionValue)) {\n\t\t\t\tshowChoice = false;\n\t\t\t}\n\t\t}\n\n\t\tlet startText = '';\n\t\tlet choiceOnlyText = '';\n\n\t\tif (choicePoint.hasChoiceOnlyContent) {\n\t\t\t// var choiceOnlyStrVal = state.PopEvaluationStack () as StringValue;\n\t\t\tlet choiceOnlyStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\n\t\t\tchoiceOnlyText = choiceOnlyStrVal.value || '';\n\t\t}\n\n\t\tif (choicePoint.hasStartContent) {\n\t\t\t// var startStrVal = state.PopEvaluationStack () as StringValue;\n\t\t\tlet startStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\n\t\t\tstartText = startStrVal.value || '';\n\t\t}\n\n\t\t// Don't create choice if player has already read this content\n\t\tif (choicePoint.onceOnly) {\n\t\t\tlet visitCount = this.VisitCountForContainer(choicePoint.choiceTarget);\n\t\t\tif (visitCount > 0) {\n\t\t\t\tshowChoice = false;\n\t\t\t}\n\t\t}\n\n\t\t// We go through the full process of creating the choice above so\n\t\t// that we consume the content for it, since otherwise it'll\n\t\t// be shown on the output stream.\n\t\tif (!showChoice) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet choice = new Choice();\n\t\tchoice.targetPath = choicePoint.pathOnChoice;\n\t\tchoice.sourcePath = choicePoint.path.toString();\n\t\tchoice.isInvisibleDefault = choicePoint.isInvisibleDefault;\n\t\tchoice.threadAtGeneration = this.state.callStack.ForkThread();\n\n\t\tchoice.text = (startText + choiceOnlyText).replace(/^[ \\t]+|[ \\t]+$/g, '');\n\n\t\treturn choice;\n\t}\n\n\tpublic IsTruthy(obj: InkObject){\n\t\tlet truthy = false;\n\t\tif (obj instanceof Value) {\n\t\t\tlet val = obj;\n\n\t\t\tif (val instanceof DivertTargetValue) {\n\t\t\t\tlet divTarget = val;\n\t\t\t\tthis.Error(\"Shouldn't use a divert target (to \" + divTarget.targetPath + \") as a conditional value. Did you intend a function call 'likeThis()' or a read count check 'likeThis'? (no arrows)\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn val.isTruthy;\n\t\t}\n\t\treturn truthy;\n\t}\n\n\tpublic PerformLogicAndFlowControl(contentObj: InkObject | null){\n\t\tif( contentObj == null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Divert\n\t\tif (contentObj instanceof Divert) {\n\t\t\tlet currentDivert = contentObj;\n\n\t\t\tif (currentDivert.isConditional) {\n\t\t\t\tlet conditionValue = this.state.PopEvaluationStack();\n\n\t\t\t\t// False conditional? Cancel divert\n\t\t\t\tif (!this.IsTruthy(conditionValue))\n\t\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (currentDivert.hasVariableTarget) {\n\t\t\t\tlet varName = currentDivert.variableDivertName;\n\n\t\t\t\tlet varContents = this.state.variablesState.GetVariableWithName(varName);\n\n\t\t\t\tif (varContents == null) {\n\t\t\t\t\tthis.Error('Tried to divert using a target from a variable that could not be found (' + varName + ')');\n\t\t\t\t}\n\t\t\t\telse if (!(varContents instanceof DivertTargetValue)) {\n\n\t\t\t\t\t// var intContent = varContents as IntValue;\n\t\t\t\t\tlet intContent = asOrNull(varContents, IntValue);\n\n\t\t\t\t\tlet errorMessage = 'Tried to divert to a target from a variable, but the variable (' + varName + \") didn't contain a divert target, it \";\n\t\t\t\t\tif (intContent instanceof IntValue && intContent.value == 0) {\n\t\t\t\t\t\terrorMessage += 'was empty/null (the value 0).';\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorMessage += \"contained '\" + varContents + \"'.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.Error(errorMessage);\n\t\t\t\t}\n\n\t\t\t\tlet target = asOrThrows(varContents, DivertTargetValue);\n\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(target.targetPath);\n\n\t\t\t} else if (currentDivert.isExternal) {\n\t\t\t\tthis.CallExternalFunction(currentDivert.targetPathString, currentDivert.externalArgs);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.state.divertedPointer = currentDivert.targetPointer.copy();\n\t\t\t}\n\n\t\t\tif (currentDivert.pushesToStack) {\n\t\t\t\tthis.state.callStack.Push(\n\t\t\t\t\tcurrentDivert.stackPushType,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis.state.outputStream.length,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.state.divertedPointer.isNull && !currentDivert.isExternal) {\n\n\t\t\t\tif (currentDivert && currentDivert.debugMetadata && currentDivert.debugMetadata.sourceName != null) {\n\t\t\t\t\tthis.Error(\"Divert target doesn't exist: \" + currentDivert.debugMetadata.sourceName);\n\t\t\t\t} else {\n\t\t\t\t\tthis.Error('Divert resolution failed: ' + currentDivert);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Start/end an expression evaluation? Or print out the result?\n\t\telse if( contentObj instanceof ControlCommand ) {\n\t\t\tlet evalCommand = contentObj;\n\n\t\t\tswitch (evalCommand.commandType) {\n\n\t\t\tcase ControlCommand.CommandType.EvalStart:\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === false, 'Already in expression evaluation?');\n\t\t\t\tthis.state.inExpressionEvaluation = true;\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.EvalEnd:\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Not in expression evaluation mode');\n\t\t\t\tthis.state.inExpressionEvaluation = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.EvalOutput:\n\n\t\t\t\t// If the expression turned out to be empty, there may not be anything on the stack\n\t\t\t\tif (this.state.evaluationStack.length > 0) {\n\n\t\t\t\t\tlet output = this.state.PopEvaluationStack();\n\n\t\t\t\t\t// Functions may evaluate to Void, in which case we skip output\n\t\t\t\t\tif (!(output instanceof Void)) {\n\t\t\t\t\t\t// TODO: Should we really always blanket convert to string?\n\t\t\t\t\t\t// It would be okay to have numbers in the output stream the\n\t\t\t\t\t\t// only problem is when exporting text for viewing, it skips over numbers etc.\n\t\t\t\t\t\tlet text = new StringValue(output.toString());\n\n\t\t\t\t\t\tthis.state.PushToOutputStream(text);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.NoOp:\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.Duplicate:\n\t\t\t\tthis.state.PushEvaluationStack(this.state.PeekEvaluationStack());\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.PopEvaluatedValue:\n\t\t\t\tthis.state.PopEvaluationStack();\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.PopFunction:\n\t\t\tcase ControlCommand.CommandType.PopTunnel:\n\n\t\t\t\tlet popType = evalCommand.commandType == ControlCommand.CommandType.PopFunction ?\n\t\t\t\t\tPushPopType.Function : PushPopType.Tunnel;\n\n\t\t\t\tlet overrideTunnelReturnTarget: DivertTargetValue | null = null;\n\t\t\t\tif (popType == PushPopType.Tunnel) {\n\t\t\t\t\tlet popped = this.state.PopEvaluationStack();\n\t\t\t\t\t// overrideTunnelReturnTarget = popped as DivertTargetValue;\n\t\t\t\t\toverrideTunnelReturnTarget = asOrNull(popped, DivertTargetValue);\n\t\t\t\t\tif (overrideTunnelReturnTarget === null) {\n\t\t\t\t\t\tthis.Assert(popped instanceof Void, \"Expected void if ->-> doesn't override target\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.state.TryExitFunctionEvaluationFromGame()){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (this.state.callStack.currentElement.type != popType || !this.state.callStack.canPop) {\n\n\t\t\t\t\tlet names: Map<PushPopType, string> = new Map();\n\t\t\t\t\tnames.set(PushPopType.Function, 'function return statement (~ return)');\n\t\t\t\t\tnames.set(PushPopType.Tunnel, 'tunnel onwards statement (->->)');\n\n\t\t\t\t\tlet expected = names.get(this.state.callStack.currentElement.type);\n\t\t\t\t\tif (!this.state.callStack.canPop) {\n\t\t\t\t\t\texpected = 'end of flow (-> END or choice)';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet errorMsg = 'Found ' + names.get(popType) + ', when expected ' + expected;\n\n\t\t\t\t\tthis.Error(errorMsg);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tthis.state.PopCallStack();\n\n\t\t\t\t\tif (overrideTunnelReturnTarget)\n\t\t\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(overrideTunnelReturnTarget.targetPath);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.BeginString:\n\t\t\t\tthis.state.PushToOutputStream(evalCommand);\n\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Expected to be in an expression when evaluating a string');\n\t\t\t\tthis.state.inExpressionEvaluation = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.EndString:\n\n\t\t\t\tlet contentStackForString: InkObject[] = [];\n\n\t\t\t\tlet outputCountConsumed = 0;\n\t\t\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\n\t\t\t\t\tlet obj = this.state.outputStream[i];\n\n\t\t\t\t\toutputCountConsumed++;\n\n\t\t\t\t\t// var command = obj as ControlCommand;\n\t\t\t\t\tlet command = asOrNull(obj, ControlCommand);\n\t\t\t\t\tif (command && command.commandType == ControlCommand.CommandType.BeginString) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( obj instanceof StringValue ) {\n\t\t\t\t\t\tcontentStackForString.push(obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Consume the content that was produced for this string\n\t\t\t\tthis.state.PopFromOutputStream(outputCountConsumed);\n\n\t\t\t\t// The C# version uses a Stack for contentStackForString, but we're\n\t\t\t\t// using a simple array, so we need to reverse it before using it\n\t\t\t\tcontentStackForString = contentStackForString.reverse();\n\n\t\t\t\t// Build string out of the content we collected\n\t\t\t\tlet sb = new StringBuilder();\n\t\t\t\tfor (let c of contentStackForString) {\n\t\t\t\t\tsb.Append(c.toString());\n\t\t\t\t}\n\n\t\t\t\t// Return to expression evaluation (from content mode)\n\t\t\t\tthis.state.inExpressionEvaluation = true;\n\t\t\t\tthis.state.PushEvaluationStack(new StringValue(sb.toString()));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.ChoiceCount:\n\t\t\t\tlet choiceCount = this.state.generatedChoices.length;\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(choiceCount));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.Turns:\n\t\t\t\tthis.state.PushEvaluationStack (new IntValue (this.state.currentTurnIndex+1));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.TurnsSince:\n\t\t\tcase ControlCommand.CommandType.ReadCount:\n\t\t\t\tlet target = this.state.PopEvaluationStack();\n\t\t\t\tif( !(target instanceof DivertTargetValue) ) {\n\t\t\t\t\tlet extraNote = '';\n\t\t\t\t\tif( target instanceof IntValue )\n\t\t\t\t\t\textraNote = \". Did you accidentally pass a read count ('knot_name') instead of a target ('-> knot_name')?\";\n\t\t\t\t\tthis.Error('TURNS_SINCE / READ_COUNT expected a divert target (knot, stitch, label name), but saw '+target+extraNote);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// var divertTarget = target as DivertTargetValue;\n\t\t\t\tlet divertTarget = asOrThrows(target, DivertTargetValue);\n\t\t\t\t// var container = ContentAtPath (divertTarget.targetPath).correctObj as Container;\n\t\t\t\tlet container = asOrNull(this.ContentAtPath(divertTarget.targetPath).correctObj, Container);\n\n\t\t\t\tlet eitherCount;\n\t\t\t\tif (container != null) {\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\n\t\t\t\t\t\teitherCount = this.TurnsSinceForContainer(container);\n\t\t\t\t\telse\n\t\t\t\t\t\teitherCount = this.VisitCountForContainer(container);\n\t\t\t\t} else {\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\n\t\t\t\t\t\teitherCount = -1;\n\t\t\t\t\telse\n\t\t\t\t\t\teitherCount = 0;\n\n\t\t\t\t\tthis.Warning('Failed to find container for ' + evalCommand.toString() + ' lookup at ' + divertTarget.targetPath.toString());\n\t\t\t\t}\n\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(eitherCount));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.Random: {\n\t\t\t\tlet maxInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\n\t\t\t\tlet minInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\n\n\t\t\t\tif (minInt == null || minInt instanceof IntValue === false)\n\t\t\t\t\treturn this.Error('Invalid value for minimum parameter of RANDOM(min, max)');\n\n\t\t\t\tif (maxInt == null || minInt instanceof IntValue === false)\n\t\t\t\t\treturn this.Error('Invalid value for maximum parameter of RANDOM(min, max)');\n\n\t\t\t\t// Originally a primitive type, but here, can be null.\n\t\t\t\t// TODO: Replace by default value?\n\t\t\t\tif (maxInt.value === null) { return throwNullException('maxInt.value'); }\n\t\t\t\tif (minInt.value === null) { return throwNullException('minInt.value'); }\n\n\t\t\t\tlet randomRange = maxInt.value - minInt.value + 1;\n\t\t\t\tif (randomRange <= 0)\n\t\t\t\t\tthis.Error('RANDOM was called with minimum as ' + minInt.value + ' and maximum as ' + maxInt.value + '. The maximum must be larger');\n\n\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\n\t\t\t\tlet random = new PRNG(resultSeed);\n\n\t\t\t\tlet nextRandom = random.next();\n\t\t\t\tlet chosenValue = (nextRandom % randomRange) + minInt.value;\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(chosenValue));\n\n\t\t\t\t// Next random number (rather than keeping the Random object around)\n\t\t\t\tthis.state.previousRandom = nextRandom;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase ControlCommand.CommandType.SeedRandom:\n\t\t\t\tlet seed = asOrNull(this.state.PopEvaluationStack(), IntValue);\n\t\t\t\tif (seed == null || seed instanceof IntValue === false)\n\t\t\t\t\treturn this.Error('Invalid value passed to SEED_RANDOM');\n\n\t\t\t\t// Originally a primitive type, but here, can be null.\n\t\t\t\t// TODO: Replace by default value?\n\t\t\t\tif (seed.value === null) { return throwNullException('minInt.value'); }\n\n\t\t\t\tthis.state.storySeed = seed.value;\n\t\t\t\tthis.state.previousRandom = 0;\n\n\t\t\t\tthis.state.PushEvaluationStack(new Void());\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.VisitIndex:\n\t\t\t\tlet count = this.VisitCountForContainer(this.state.currentPointer.container) - 1; // index not count\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(count));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.SequenceShuffleIndex:\n\t\t\t\tlet shuffleIndex = this.NextSequenceShuffleIndex();\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(shuffleIndex));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.StartThread:\n\t\t\t\t// Handled in main step function\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.Done:\n\t\t\t\t// We may exist in the context of the initial\n\t\t\t\t// act of creating the thread, or in the context of\n\t\t\t\t// evaluating the content.\n\t\t\t\tif (this.state.callStack.canPopThread) {\n\t\t\t\t\tthis.state.callStack.PopThread();\n\t\t\t\t}\n\n\t\t\t\t// In normal flow - allow safe exit without warning\n\t\t\t\telse {\n\t\t\t\t\tthis.state.didSafeExit = true;\n\n\t\t\t\t\t// Stop flow in current thread\n\t\t\t\t\tthis.state.currentPointer = Pointer.Null;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t// Force flow to end completely\n\t\t\tcase ControlCommand.CommandType.End:\n\t\t\t\tthis.state.ForceEnd();\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.ListFromInt:\n\t\t\t\t// var intVal = state.PopEvaluationStack () as IntValue;\n\t\t\t\tlet intVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\n\t\t\t\t// var listNameVal = state.PopEvaluationStack () as StringValue;\n\t\t\t\tlet listNameVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\n\n\t\t\t\tif (intVal === null) {\n\t\t\t\t\tthrow new StoryException('Passed non-integer when creating a list element from a numerical value.');\n\t\t\t\t}\n\n\t\t\t\tlet generatedListValue = null;\n\n\t\t\t\tif (this.listDefinitions === null) { return throwNullException('this.listDefinitions'); }\n\t\t\t\tlet foundListDef = this.listDefinitions.TryListGetDefinition(listNameVal.value, null);\n\t\t\t\tif (foundListDef.exists) {\n\t\t\t\t\t// Originally a primitive type, but here, can be null.\n\t\t\t\t\t// TODO: Replace by default value?\n\t\t\t\t\tif (intVal.value === null) { return throwNullException('minInt.value'); }\n\n\t\t\t\t\tlet foundItem = foundListDef.result!.TryGetItemWithValue(intVal.value, InkListItem.Null);\n\t\t\t\t\tif (foundItem.exists) {\n\t\t\t\t\t\tgeneratedListValue = new ListValue(foundItem.result!, intVal.value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new StoryException('Failed to find LIST called ' + listNameVal.value);\n\t\t\t\t}\n\n\t\t\t\tif (generatedListValue == null)\n\t\t\t\t\tgeneratedListValue = new ListValue();\n\n\t\t\t\tthis.state.PushEvaluationStack(generatedListValue);\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.ListRange:\n\t\t\t\tlet max = asOrNull(this.state.PopEvaluationStack(), Value);\n\t\t\t\tlet min = asOrNull(this.state.PopEvaluationStack(), Value);\n\n\t\t\t\t// var targetList = state.PopEvaluationStack () as ListValue;\n\t\t\t\tlet targetList = asOrNull(this.state.PopEvaluationStack(), ListValue);\n\n\t\t\t\tif (targetList === null || min === null || max === null)\n\t\t\t\t\tthrow new StoryException('Expected list, minimum and maximum for LIST_RANGE');\n\n\t\t\t\tif (targetList.value === null) { return throwNullException('targetList.value'); }\n\t\t\t\tlet result = targetList.value.ListWithSubRange(min.valueObject, max.valueObject);\n\n\t\t\t\tthis.state.PushEvaluationStack (new ListValue(result));\n\t\t\t\tbreak;\n\n\t\t\tcase ControlCommand.CommandType.ListRandom: {\n\t\t\t\tlet listVal = this.state.PopEvaluationStack() as ListValue;\n\t\t\t\tif (listVal === null)\n\t\t\t\t\tthrow new StoryException('Expected list for LIST_RANDOM');\n\n\t\t\t\tlet list = listVal.value;\n\n\t\t\t\tlet newList: InkList | null = null;\n\n\t\t\t\tif (list === null) { throw throwNullException('list'); }\n\t\t\t\tif (list.Count == 0) {\n\t\t\t\t\tnewList = new InkList();\n\t\t\t\t} else {\n\t\t\t\t\t// Generate a random index for the element to take\n\t\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\n\t\t\t\t\tlet random = new PRNG(resultSeed);\n\n\t\t\t\t\tlet nextRandom = random.next();\n\t\t\t\t\tlet listItemIndex = nextRandom % list.Count;\n\n\t\t\t\t\t// This bit is a little different from the original\n\t\t\t\t\t// C# code, since iterators do not work in the same way.\n\t\t\t\t\t// First, we iterate listItemIndex - 1 times, calling next().\n\t\t\t\t\t// The listItemIndex-th time is made outside of the loop,\n\t\t\t\t\t// in order to retrieve the value.\n\t\t\t\t\tlet listEnumerator = list.entries();\n\t\t\t\t\tfor (let i = 0; i <= listItemIndex - 1; i++) {\n\t\t\t\t\t\tlistEnumerator.next();\n\t\t\t\t\t}\n\t\t\t\t\tlet value = listEnumerator.next().value;\n\t\t\t\t\tlet randomItem: KeyValuePair<InkListItem, number> = {\n\t\t\t\t\t\tKey: InkListItem.fromSerializedKey(value[0]),\n\t\t\t\t\t\tValue: value[1],\n\t\t\t\t\t};\n\n\t\t\t\t\t// Origin list is simply the origin of the one element\n\t\t\t\t\tif (randomItem.Key.originName === null) { return throwNullException('randomItem.Key.originName'); }\n\t\t\t\t\tnewList = new InkList(randomItem.Key.originName, this);\n\t\t\t\t\tnewList.Add(randomItem.Key, randomItem.Value);\n\n\t\t\t\t\tthis.state.previousRandom = nextRandom;\n\t\t\t\t}\n\n\t\t\t\tthis.state.PushEvaluationStack(new ListValue(newList));\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthis.Error('unhandled ControlCommand: ' + evalCommand);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Variable assignment\n\t\telse if( contentObj instanceof VariableAssignment ) {\n\t\t\tlet varAss = contentObj;\n\t\t\tlet assignedVal = this.state.PopEvaluationStack();\n\n\t\t\tthis.state.variablesState.Assign(varAss, assignedVal);\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Variable reference\n\t\telse if( contentObj instanceof VariableReference ) {\n\t\t\tlet varRef = contentObj;\n\t\t\tlet foundValue = null;\n\n\t\t\t// Explicit read count value\n\t\t\tif (varRef.pathForCount != null) {\n\n\t\t\t\tlet container = varRef.containerForCount;\n\t\t\t\tlet count = this.VisitCountForContainer(container);\n\t\t\t\tfoundValue = new IntValue(count);\n\t\t\t}\n\n\t\t\t// Normal variable reference\n\t\t\telse {\n\n\t\t\t\tfoundValue = this.state.variablesState.GetVariableWithName(varRef.name);\n\n\t\t\t\tif (foundValue == null) {\n\t\t\t\t\tlet defaultVal = this.state.variablesState.TryGetDefaultVariableValue (varRef.name);\n\t\t\t\t\tif (defaultVal != null) {\n\t\t\t\t\t\tthis.Warning(\"Variable not found in save state: '\" + varRef.name + \"', but seems to have been newly created. Assigning value from latest ink's declaration: \" + defaultVal);\n\t\t\t\t\t\tfoundValue = defaultVal;\n\n\t\t\t\t\t\t// Save for future usage, preventing future errors\n\t\t\t\t\t\t// Only do this for variables that are known to be globals, not those that may be missing temps.\n\t\t\t\t\t\tthis.state.variablesState.SetGlobal(varRef.name, foundValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Warning (\"Variable not found: '\" + varRef.name + \"'. Using default value of 0 (false). This can happen with temporary variables if the declaration hasn't yet been hit.\");\n\t\t\t\t\t\tfoundValue = new IntValue(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state.PushEvaluationStack(foundValue);\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Native function call\n\t\telse if (contentObj instanceof NativeFunctionCall) {\n\t\t\tlet func = contentObj;\n\t\t\tlet funcParams = this.state.PopEvaluationStack(func.numberOfParameters);\n\t\t\tlet result = func.Call(funcParams);\n\t\t\tthis.state.PushEvaluationStack(result);\n\t\t\treturn true;\n\t\t}\n\n\t\t// No control content, must be ordinary content\n\t\treturn false;\n\t}\n\n\tpublic ChoosePathString(path: string, resetCallstack = true, args: any[] = []){\n\t\tthis.IfAsyncWeCant ('call ChoosePathString right now');\n\n\t\tif (resetCallstack) {\n\t\t\tthis.ResetCallstack();\n\t\t} else {\n\t\t\tif (this.state.callStack.currentElement.type == PushPopType.Function) {\n\t\t\t\tlet funcDetail = '';\n\t\t\t\tlet container = this.state.callStack.currentElement.currentPointer.container;\n\t\t\t\tif (container != null) {\n\t\t\t\t\tfuncDetail = '('+container.path.toString ()+') ';\n\t\t\t\t}\n\t\t\t\tthrow new Error('Story was running a function '+funcDetail+'when you called ChoosePathString('+path+') - this is almost certainly not not what you want! Full stack trace: \\n'+this.state.callStack.callStackTrace);\n\t\t\t}\n\t\t}\n\n\t\tthis.state.PassArgumentsToEvaluationStack(args);\n\t\tthis.ChoosePath(new Path(path));\n\t}\n\n\tpublic IfAsyncWeCant(activityStr: string)\n\t{\n\t\tif (this._asyncContinueActive)\n\t\t\tthrow new Error(\"Can't \" + activityStr + '. Story is in the middle of a ContinueAsync(). Make more ContinueAsync() calls or a single Continue() call beforehand.');\n\t}\n\n\tpublic ChoosePath(p: Path, incrementingTurnIndex: boolean = true){\n\t\tthis.state.SetChosenPath(p, incrementingTurnIndex);\n\n\t\t// Take a note of newly visited containers for read counts etc\n\t\tthis.VisitChangedContainersDueToDivert();\n\t}\n\n\tpublic ChooseChoiceIndex(choiceIdx: number){\n\t\tchoiceIdx = choiceIdx;\n\t\tlet choices = this.currentChoices;\n\t\tthis.Assert(choiceIdx >= 0 && choiceIdx < choices.length, 'choice out of range');\n\n\t\tlet choiceToChoose = choices[choiceIdx];\n\t\tif (choiceToChoose.threadAtGeneration === null) { return throwNullException('choiceToChoose.threadAtGeneration'); }\n\t\tif (choiceToChoose.targetPath === null) { return throwNullException('choiceToChoose.targetPath'); }\n\n\t\tthis.state.callStack.currentThread = choiceToChoose.threadAtGeneration;\n\n\t\tthis.ChoosePath(choiceToChoose.targetPath);\n\t}\n\n\tpublic HasFunction(functionName: string){\n\t\ttry {\n\t\t\treturn this.KnotContainerWithName(functionName) != null;\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic EvaluateFunction(functionName: string, args: any[] = [], returnTextOutput: boolean = false): Story.EvaluateFunctionTextOutput | any{\n\t\t// EvaluateFunction behaves slightly differently than the C# version.\n\t\t// In C#, you can pass a (second) parameter `out textOutput` to get the\n\t\t// text outputted by the function. This is not possible in js. Instead,\n\t\t// we maintain the regular signature (functionName, args), plus an\n\t\t// optional third parameter returnTextOutput. If set to true, we will\n\t\t// return both the textOutput and the returned value, as an object.\n\n\t\tthis.IfAsyncWeCant('evaluate a function');\n\n\t\tif (functionName == null) {\n\t\t\tthrow new Error('Function is null');\n\t\t}\n\t\telse if (functionName == '' || functionName.trim() == '') {\n\t\t\tthrow new Error('Function is empty or white space.');\n\t\t}\n\n\t\tlet funcContainer = this.KnotContainerWithName(functionName);\n\t\tif (funcContainer == null) {\n\t\t\tthrow new Error(\"Function doesn't exist: '\" + functionName + \"'\");\n\t\t}\n\n\t\tlet outputStreamBefore: InkObject[] = [];\n\t\toutputStreamBefore.push.apply(outputStreamBefore, this.state.outputStream);\n\t\tthis._state.ResetOutput();\n\n\t\tthis.state.StartFunctionEvaluationFromGame(funcContainer, args);\n\n\t\t// Evaluate the function, and collect the string output\n\t\tlet stringOutput = new StringBuilder();\n\t\twhile (this.canContinue) {\n\t\t\tstringOutput.Append(this.Continue());\n\t\t}\n\t\tlet textOutput = stringOutput.toString();\n\n\t\tthis._state.ResetOutput(outputStreamBefore);\n\n\t\tlet result = this.state.CompleteFunctionEvaluationFromGame();\n\n\t\treturn (returnTextOutput) ? {returned: result, output: textOutput} : result;\n\t}\n\n\tpublic EvaluateExpression(exprContainer: Container){\n\t\tlet startCallStackHeight = this.state.callStack.elements.length;\n\n\t\tthis.state.callStack.Push(PushPopType.Tunnel);\n\n\t\tthis._temporaryEvaluationContainer = exprContainer;\n\n\t\tthis.state.GoToStart();\n\n\t\tlet evalStackHeight = this.state.evaluationStack.length;\n\n\t\tthis.Continue();\n\n\t\tthis._temporaryEvaluationContainer = null;\n\n\t\t// Should have fallen off the end of the Container, which should\n\t\t// have auto-popped, but just in case we didn't for some reason,\n\t\t// manually pop to restore the state (including currentPath).\n\t\tif (this.state.callStack.elements.length > startCallStackHeight) {\n\t\t\tthis.state.PopCallStack();\n\t\t}\n\n\t\tlet endStackHeight = this.state.evaluationStack.length;\n\t\tif (endStackHeight > evalStackHeight) {\n\t\t\treturn this.state.PopEvaluationStack();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic allowExternalFunctionFallbacks: boolean = false;\n\n\tpublic CallExternalFunction(funcName: string | null, numberOfArguments: number){\n\t\tif (funcName === null) { return throwNullException('funcName'); }\n\t\tlet func = this._externals.get(funcName);\n\t\tlet fallbackFunctionContainer = null;\n\n\t\tlet foundExternal = typeof func !== 'undefined';\n\n\t\t// Try to use fallback function?\n\t\tif (!foundExternal) {\n\t\t\tif (this.allowExternalFunctionFallbacks) {\n\t\t\t\tfallbackFunctionContainer = this.KnotContainerWithName(funcName);\n\t\t\t\tthis.Assert(fallbackFunctionContainer !== null, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound, and fallback ink function could not be found.\");\n\n\t\t\t\t// Divert direct into fallback function and we're done\n\t\t\t\tthis.state.callStack.Push(\n\t\t\t\t\tPushPopType.Function,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis.state.outputStream.length,\n\t\t\t\t);\n\t\t\t\tthis.state.divertedPointer = Pointer.StartOf(fallbackFunctionContainer);\n\t\t\t\treturn;\n\n\t\t\t} else {\n\t\t\t\tthis.Assert(false, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound (and ink fallbacks disabled).\");\n\t\t\t}\n\t\t}\n\n\t\t// Pop arguments\n\t\tlet args: any[] = [];\n\t\tfor (let i = 0; i < numberOfArguments; ++i) {\n\t\t\t// var poppedObj = state.PopEvaluationStack () as Value;\n\t\t\tlet poppedObj = asOrThrows(this.state.PopEvaluationStack(), Value);\n\t\t\tlet valueObj = poppedObj.valueObject;\n\t\t\targs.push(valueObj);\n\t\t}\n\n\t\t// Reverse arguments from the order they were popped,\n\t\t// so they're the right way round again.\n\t\targs.reverse();\n\n\t\t// Run the function!\n\t\tlet funcResult = func!(args);\n\n\t\t// Convert return value (if any) to the a type that the ink engine can use\n\t\tlet returnObj = null;\n\t\tif (funcResult != null) {\n\t\t\treturnObj = Value.Create(funcResult);\n\t\t\tthis.Assert(returnObj !== null, 'Could not create ink value from returned object of type ' + (typeof funcResult));\n\t\t} else {\n\t\t\treturnObj = new Void();\n\t\t}\n\n\t\tthis.state.PushEvaluationStack(returnObj);\n\t}\n\n\tpublic BindExternalFunctionGeneral(funcName: string, func: Story.ExternalFunction){\n\t\tthis.IfAsyncWeCant('bind an external function');\n\t\tthis.Assert(!this._externals.has(funcName), \"Function '\" + funcName + \"' has already been bound.\");\n\t\tthis._externals.set(funcName, func);\n\t}\n\n\tpublic TryCoerce(value: any){\n\t\t// We're skipping type coercition in this implementation. First of, js\n\t\t// is loosely typed, so it's not that important. Secondly, there is no\n\t\t// clean way (AFAIK) for the user to describe what type of parameters\n\t\t// they expect.\n\t\treturn value;\n\t}\n\n\tpublic BindExternalFunction(funcName: string, func: Story.ExternalFunction){\n\t\tthis.Assert(func != null, \"Can't bind a null function\");\n\n\t\tthis.BindExternalFunctionGeneral(funcName, (args: any) => {\n\t\t\tthis.Assert(args.length >= func.length, 'External function expected ' + func.length + ' arguments');\n\n\t\t\tlet coercedArgs = [];\n\t\t\tfor (let i = 0, l = args.length; i < l; i++){\n\t\t\t\tcoercedArgs[i] = this.TryCoerce(args[i]);\n\t\t\t}\n\t\t\treturn func.apply(null, coercedArgs);\n\t\t});\n\t}\n\n\tpublic UnbindExternalFunction(funcName: string){\n\t\tthis.IfAsyncWeCant('unbind an external a function');\n\t\tthis.Assert(this._externals.has(funcName), \"Function '\" + funcName + \"' has not been bound.\");\n\t\tthis._externals.delete(funcName);\n\t}\n\n\tpublic ValidateExternalBindings(): void;\n\tpublic ValidateExternalBindings(c: Container | null, missingExternals: Set<string>): void;\n\tpublic ValidateExternalBindings(o: InkObject | null, missingExternals: Set<string>): void;\n\tpublic ValidateExternalBindings(){\n\n\t\tlet c: Container | null = null;\n\t\tlet o: InkObject | null = null;\n\t\tlet missingExternals: Set<string> = arguments[1] || new Set();\n\n\t\tif (arguments[0] instanceof Container) {\n\t\t\tc = arguments[0];\n\t\t}\n\n\t\tif (arguments[0] instanceof InkObject) {\n\t\t\to = arguments[0];\n\t\t}\n\n\t\tif (c === null && o === null) {\n\t\t\tthis.ValidateExternalBindings(this._mainContentContainer, missingExternals);\n\t\t\tthis._hasValidatedExternals = true;\n\n\t\t\t// No problem! Validation complete\n\t\t\tif( missingExternals.size == 0 ) {\n\t\t\t\tthis._hasValidatedExternals = true;\n\t\t\t} else {\n\t\t\t\tlet message = 'Error: Missing function binding for external';\n\t\t\t\tmessage += (missingExternals.size > 1) ? 's' : '';\n\t\t\t\tmessage += \": '\";\n\t\t\t\tmessage += Array.from(missingExternals).join(\"', '\");\n\t\t\t\tmessage += \"' \";\n\t\t\t\tmessage += (this.allowExternalFunctionFallbacks) ? ', and no fallback ink function found.' : ' (ink fallbacks disabled)';\n\n\t\t\t\tthis.Error(message);\n\t\t\t}\n\t\t} else if (c != null) {\n\t\t\tfor (let innerContent of c.content) {\n\t\t\t\tlet container = innerContent as Container;\n\t\t\t\tif (container == null || !container.hasValidName)\n\t\t\t\t\tthis.ValidateExternalBindings (innerContent, missingExternals);\n\t\t\t}\n\t\t\tfor (let [key, value] of c.namedContent) {\n\t\t\t\tthis.ValidateExternalBindings (asOrNull(value, InkObject), missingExternals);\n\t\t\t}\n\t\t} else if (o != null) {\n\t\t\tlet divert = asOrNull(o, Divert);\n\t\t\tif (divert && divert.isExternal) {\n\t\t\t\tlet name = divert.targetPathString;\n\t\t\t\tif (name === null) { return throwNullException('name'); }\n\t\t\t\tif (!this._externals.has(name)) {\n\t\t\t\t\tif (this.allowExternalFunctionFallbacks) {\n\t\t\t\t\t\tlet fallbackFound = this.mainContentContainer.namedContent.has(name);\n\t\t\t\t\t\tif (!fallbackFound) {\n\t\t\t\t\t\t\tmissingExternals.add(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmissingExternals.add(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic ObserveVariable(variableName: string, observer: Story.VariableObserver){\n\t\tthis.IfAsyncWeCant('observe a new variable');\n\n\t\tif (this._variableObservers === null)\n\t\t\tthis._variableObservers = new Map();\n\n\t\tif(!this.state.variablesState.GlobalVariableExistsWithName(variableName))\n\t\t\tthrow new StoryException(\"Cannot observe variable '\"+variableName+\"' because it wasn't declared in the ink story.\");\n\n\t\tif (this._variableObservers.has(variableName)) {\n\t\t\tthis._variableObservers.get(variableName)!.push(observer);\n\t\t} else {\n\t\t\tthis._variableObservers.set(variableName, [observer]);\n\t\t}\n\t}\n\n\tpublic ObserveVariables(variableNames: string[], observers: Story.VariableObserver[]){\n\t\tfor (let i = 0, l = variableNames.length; i < l; i++){\n\t\t\tthis.ObserveVariable(variableNames[i], observers[i]);\n\t\t}\n\t}\n\n\tpublic RemoveVariableObserver(observer: Story.VariableObserver, specificVariableName: string){\n\t\tthis.IfAsyncWeCant('remove a variable observer');\n\n\t\tif (this._variableObservers === null)\n\t\t\treturn;\n\n\t\tif (typeof specificVariableName !== 'undefined') {\n\t\t\tif (this._variableObservers.has(specificVariableName)) {\n\t\t\t\tlet observers = this._variableObservers.get(specificVariableName)!;\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\n\t\t\t}\n\t\t} else {\n\t\t\tlet keys = this._variableObservers.keys();\n\n\t\t\tfor (let varName of keys){\n\t\t\t\tlet observers = this._variableObservers.get(varName)!;\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic VariableStateDidChangeEvent(variableName: string, newValueObj: InkObject){\n\t\tif (this._variableObservers === null)\n\t\t\treturn;\n\n\t\tlet observers = this._variableObservers.get(variableName);\n\t\tif (typeof observers !== 'undefined') {\n\t\t\tif (!(newValueObj instanceof Value)) {\n\t\t\t\tthrow new Error(\"Tried to get the value of a variable that isn't a standard type\");\n\t\t\t}\n\t\t\t// var val = newValueObj as Value;\n\t\t\tlet val = asOrThrows(newValueObj, Value);\n\n\t\t\tfor (let observer of observers) {\n\t\t\t\tobserver(variableName, val.valueObject);\n\t\t\t}\n\t\t}\n\t}\n\n\tget globalTags(){\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString('');\n\t}\n\n\tpublic TagsForContentAtPath(path: string){\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString(path);\n\t}\n\n\tpublic TagsAtStartOfFlowContainerWithPathString(pathString: string){\n\t\tlet path = new Path(pathString);\n\n\t\tlet flowContainer = this.ContentAtPath(path).container;\n\t\tif (flowContainer === null) { return throwNullException('flowContainer'); }\n\t\twhile(true) {\n\t\t\tlet firstContent: InkObject = flowContainer.content[0];\n\t\t\tif (firstContent instanceof Container)\n\t\t\t\tflowContainer = firstContent;\n\t\t\telse break;\n\t\t}\n\n\t\tlet tags: string[] | null = null;\n\n\t\tfor(let c of flowContainer.content) {\n\t\t\t// var tag = c as Runtime.Tag;\n\t\t\tlet tag = asOrNull(c, Tag);\n\t\t\tif (tag) {\n\t\t\t\tif (tags == null) tags = [];\n\t\t\t\ttags.push(tag.text);\n\t\t\t} else break;\n\t\t}\n\n\t\treturn tags;\n\t}\n\n\tpublic BuildStringOfHierarchy(){\n\t\tlet sb = new StringBuilder();\n\n\t\tthis.mainContentContainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\n\n\t\treturn sb.toString();\n\t}\n\n\tpublic BuildStringOfContainer(container: Container){\n\t\tlet sb = new StringBuilder();\n\t\tcontainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\n\t\treturn sb.toString();\n\t}\n\n\tpublic NextContent(){\n\t\tthis.state.previousPointer = this.state.currentPointer.copy();\n\n\t\tif (!this.state.divertedPointer.isNull) {\n\n\t\t\tthis.state.currentPointer = this.state.divertedPointer.copy();\n\t\t\tthis.state.divertedPointer = Pointer.Null;\n\n\t\t\tthis.VisitChangedContainersDueToDivert();\n\n\t\t\tif (!this.state.currentPointer.isNull) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet successfulPointerIncrement = this.IncrementContentPointer();\n\n\t\tif (!successfulPointerIncrement) {\n\n\t\t\tlet didPop = false;\n\n\t\t\tif (this.state.callStack.CanPop(PushPopType.Function)) {\n\n\t\t\t\tthis.state.PopCallStack(PushPopType.Function);\n\n\t\t\t\tif (this.state.inExpressionEvaluation) {\n\t\t\t\t\tthis.state.PushEvaluationStack(new Void());\n\t\t\t\t}\n\n\t\t\t\tdidPop = true;\n\t\t\t} else if (this.state.callStack.canPopThread) {\n\t\t\t\tthis.state.callStack.PopThread();\n\n\t\t\t\tdidPop = true;\n\t\t\t} else {\n\t\t\t\tthis.state.TryExitFunctionEvaluationFromGame();\n\t\t\t}\n\n\t\t\tif (didPop && !this.state.currentPointer.isNull) {\n\t\t\t\tthis.NextContent();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic IncrementContentPointer(){\n\t\tlet successfulIncrement = true;\n\n\t\tlet pointer = this.state.callStack.currentElement.currentPointer.copy();\n\t\tpointer.index++;\n\n\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\n\t\twhile (pointer.index >= pointer.container.content.length) {\n\n\t\t\tsuccessfulIncrement = false;\n\n\t\t\t// Container nextAncestor = pointer.container.parent as Container;\n\t\t\tlet nextAncestor = asOrNull(pointer.container.parent, Container);\n\t\t\tif (nextAncestor instanceof Container === false) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet indexInAncestor = nextAncestor!.content.indexOf(pointer.container);\n\t\t\tif (indexInAncestor == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tpointer = new Pointer(nextAncestor, indexInAncestor);\n\n\t\t\tpointer.index++;\n\n\t\t\tsuccessfulIncrement = true;\n\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\n\t\t}\n\n\t\tif (!successfulIncrement) pointer = Pointer.Null;\n\n\t\tthis.state.callStack.currentElement.currentPointer = pointer.copy();\n\n\t\treturn successfulIncrement;\n\t}\n\n\tpublic TryFollowDefaultInvisibleChoice(){\n\t\tlet allChoices = this._state.currentChoices;\n\n\t\tlet invisibleChoices = allChoices.filter((c) => {\n\t\t\treturn c.isInvisibleDefault;\n\t\t});\n\n\t\tif (invisibleChoices.length == 0 || allChoices.length > invisibleChoices.length)\n\t\t\treturn false;\n\n\t\tlet choice = invisibleChoices[0];\n\n\t\tif (choice.targetPath === null) { return throwNullException('choice.targetPath'); }\n\n\t\tif (choice.threadAtGeneration === null) { return throwNullException('choice.threadAtGeneration'); }\n\n\t\tthis.state.callStack.currentThread = choice.threadAtGeneration;\n\n\t\tthis.ChoosePath(choice.targetPath, false);\n\n\t\treturn true;\n\t}\n\n\tpublic VisitCountForContainer(container: Container | null){\n\t\tif (container === null) { return throwNullException('container'); }\n\t\tif( !container.visitsShouldBeCounted ) {\n\t\t\tconsole.warn('Read count for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet count = 0;\n\t\tlet containerPathStr = container.path.toString();\n\t\tcount = this.state.visitCounts.get(containerPathStr) || count;\n\t\treturn count;\n\t}\n\n\tpublic IncrementVisitCountForContainer(container: Container){\n\t\tlet count = 0;\n\t\tlet containerPathStr = container.path.toString();\n\t\tif (this.state.visitCounts.has(containerPathStr)) count = this.state.visitCounts.get(containerPathStr)!;\n\t\tcount++;\n\t\tthis.state.visitCounts.set(containerPathStr, count);\n\t}\n\n\tpublic RecordTurnIndexVisitToContainer(container: Container){\n\t\tlet containerPathStr = container.path.toString();\n\t\tthis.state.turnIndices.set(containerPathStr, this.state.currentTurnIndex);\n\t}\n\n\tpublic TurnsSinceForContainer(container: Container){\n\t\tif( !container.turnIndexShouldBeCounted ) {\n\t\t\tthis.Error('TURNS_SINCE() for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\n\t\t}\n\n\t\tlet containerPathStr = container.path.toString();\n\t\tlet index = this.state.turnIndices.get(containerPathStr);\n\t\tif (typeof index !== 'undefined') {\n\t\t\treturn this.state.currentTurnIndex - index;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tpublic NextSequenceShuffleIndex(){\n\t\t// var numElementsIntVal = state.PopEvaluationStack () as IntValue;\n\t\tlet numElementsIntVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\n\t\tif (!(numElementsIntVal instanceof IntValue)) {\n\t\t\tthis.Error('expected number of elements in sequence for shuffle index');\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet seqContainer = this.state.currentPointer.container;\n\t\tif (seqContainer === null) { return throwNullException('seqContainer'); }\n\n\t\t// Originally a primitive type, but here, can be null.\n\t\t// TODO: Replace by default value?\n\t\tif (numElementsIntVal.value === null) { return throwNullException('numElementsIntVal.value'); }\n\t\tlet numElements = numElementsIntVal.value;\n\n\t\t// var seqCountVal = state.PopEvaluationStack () as IntValue;\n\t\tlet seqCountVal = asOrThrows(this.state.PopEvaluationStack(), IntValue);\n\t\tlet seqCount = seqCountVal.value;\n\n\t\t// Originally a primitive type, but here, can be null.\n\t\t// TODO: Replace by default value?\n\t\tif (seqCount === null) { return throwNullException('seqCount'); }\n\n\t\tlet loopIndex = seqCount / numElements;\n\t\tlet iterationIndex = seqCount % numElements;\n\n\t\tlet seqPathStr = seqContainer.path.toString();\n\t\tlet sequenceHash = 0;\n\t\tfor (let i = 0, l = seqPathStr.length; i < l; i++){\n\t\t\tsequenceHash += seqPathStr.charCodeAt(i) || 0;\n\t\t}\n\t\tlet randomSeed = sequenceHash + loopIndex + this.state.storySeed;\n\t\tlet random = new PRNG(Math.floor(randomSeed));\n\n\t\tlet unpickedIndices = [];\n\t\tfor (let i = 0; i < numElements; ++i) {\n\t\t\tunpickedIndices.push(i);\n\t\t}\n\n\t\tfor (let i = 0; i <= iterationIndex; ++i) {\n\t\t\tlet chosen = random.next() % unpickedIndices.length;\n\t\t\tlet chosenIndex = unpickedIndices[chosen];\n\t\t\tunpickedIndices.splice(chosen, 1);\n\n\t\t\tif (i == iterationIndex) {\n\t\t\t\treturn chosenIndex;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Should never reach here');\n\t}\n\n\tpublic Error(message: string, useEndLineNumber = false): never{\n\t\tlet e = new StoryException(message);\n\t\te.useEndLineNumber = useEndLineNumber;\n\t\tthrow e;\n\t}\n\n\tpublic Warning(message: string){\n\t\tthis.AddError(message, true);\n\t}\n\n\tpublic AddError(message: string, isWarning = false, useEndLineNumber = false){\n\t\tlet dm = this.currentDebugMetadata;\n\n\t\tlet errorTypeStr = isWarning ? 'WARNING' : 'ERROR';\n\n\t\tif (dm != null) {\n\t\t\tlet lineNum = useEndLineNumber ? dm.endLineNumber : dm.startLineNumber;\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + \": '\" + dm.fileName + \"' line \" + lineNum + ': ' + message;\n\t\t}\n\t\telse if(!this.state.currentPointer.isNull) {\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': (' + this.state.currentPointer + '): ' + message;\n\t\t}\n\t\telse {\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': ' + message;\n\t\t}\n\n\t\tthis.state.AddError(message, isWarning);\n\n\t\t// In a broken state don't need to know about any other errors.\n\t\tif (!isWarning)\n\t\t\tthis.state.ForceEnd();\n\t}\n\n\tpublic Assert(condition: boolean, message: string | null = null) {\n\t\tif (condition == false) {\n\t\t\tif (message == null) {\n\t\t\t\tmessage = 'Story assert';\n\t\t\t}\n\n\t\t\tthrow new Error(message + ' ' + this.currentDebugMetadata);\n\t\t}\n\t}\n\n\tget currentDebugMetadata(): DebugMetadata | null {\n\t\tlet dm: DebugMetadata | null;\n\n\t\tlet pointer = this.state.currentPointer;\n\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\n\t\t\tdm = pointer.Resolve()!.debugMetadata;\n\t\t\tif (dm !== null) {\n\t\t\t\treturn dm;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = this.state.callStack.elements.length - 1; i >= 0; --i) {\n\t\t\tpointer = this.state.callStack.elements [i].currentPointer;\n\t\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\n\t\t\t\tdm = pointer.Resolve()!.debugMetadata;\n\t\t\t\tif (dm !== null) {\n\t\t\t\t\treturn dm;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\n\t\t\tlet outputObj = this.state.outputStream [i];\n\t\t\tdm = outputObj.debugMetadata;\n\t\t\tif (dm !== null) {\n\t\t\t\treturn dm;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget mainContentContainer(){\n\t\tif (this._temporaryEvaluationContainer) {\n\t\t\treturn this._temporaryEvaluationContainer;\n\t\t} else {\n\t\t\treturn this._mainContentContainer;\n\t\t}\n\t}\n\n\t/**\n\t * `_mainContentContainer` is almost guaranteed to be set in the\n\t * constructor, unless the json is malformed.\n\t */\n\tprivate _mainContentContainer!: Container;\n\tprivate _listDefinitions: ListDefinitionsOrigin | null = null;\n\n\tprivate _externals: Map<string, Story.ExternalFunction>;\n\tprivate _variableObservers: Map<string, Story.VariableObserver[]> | null = null;\n\tprivate _hasValidatedExternals: boolean = false;\n\n\tprivate _temporaryEvaluationContainer: Container | null = null;\n\n\t/**\n\t * `state` is almost guaranteed to be set in the constructor, unless\n\t * using the compiler-specific constructor which will likely not be used in\n\t * the real world.\n\t */\n\tprivate _state!: StoryState;\n\n\tprivate _asyncContinueActive: boolean = false;\n\tprivate _stateAtLastNewline: StoryState | null = null;\n\n\tprivate _recursiveContinueCount: number = 0;\n\n\tprivate _profiler: any | null = null; // TODO: Profiler\n}\n\nexport namespace Story{\n\texport enum OutputStateChange {\n\t\tNoChange = 0,\n\t\tExtendedBeyondNewline = 1,\n\t\tNewlineRemoved = 2,\n\t}\n\n\texport interface EvaluateFunctionTextOutput {\n\t\treturned: any;\n\t\toutput: string;\n\t}\n\n\texport type VariableObserver = (variableName: string, newValue: any) => void;\n\texport type ExternalFunction = (...args: any) => any;\n}\n"],"names":[],"mappings":"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"}